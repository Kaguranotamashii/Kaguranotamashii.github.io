<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>神楽の魂的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-07-06T07:47:17.329Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>神楽の魂</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetcodeNotes</title>
    <link href="http://example.com/2022/07/04/%E7%AE%97%E6%B3%95%E5%8A%9B%E6%89%A3/LeetcodeNotes/"/>
    <id>http://example.com/2022/07/04/%E7%AE%97%E6%B3%95%E5%8A%9B%E6%89%A3/LeetcodeNotes/</id>
    <published>2022-07-04T05:41:15.000Z</published>
    <updated>2022-07-06T07:47:17.329Z</updated>
    
    <content type="html"><![CDATA[<p>d</p><h1 id="第二天-字符串"><a href="#第二天-字符串" class="headerlink" title="第二天 字符串"></a>第二天 字符串</h1><h2 id="字符串的遍历"><a href="#字符串的遍历" class="headerlink" title="字符串的遍历"></a>字符串的遍历</h2><p><strong>「 字符串 」</strong> 是一种特殊的 字符数组，字符数组需要有一个长度字段来表示这个数组中的元素个数。而字符串不需要，字符串一定是以<code>\0</code>结尾的，在 C语言中，字符串的表示如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> c[<span class="number">6</span>] = <span class="string">&quot;Hello&quot;</span>;                         <span class="comment">// (1)</span></span><br><span class="line"><span class="type">char</span> d[<span class="number">5</span>] = &#123; <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span> &#125;;     <span class="comment">// (2)</span></span><br></pre></td></tr></table></figure><p> 其中 ( 1 ) (1)(1) 表示字符串，它虽然只有五个字符，但是需要有一个结尾字符<code>\0</code>（它的 ASCII 码值为 0）进行占位，所以字符串长度为 5，但是实际需要 6 个字节的存储空间。<br>  而 ( 2 ) (2)(2) 代表的是一个数组，它的每个元素是一个字符，理解成一个长度为 5 的数组即可。</p><h2 id="字符串的长度"><a href="#字符串的长度" class="headerlink" title="字符串的长度"></a>字符串的长度</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> c[<span class="number">6</span>] = <span class="string">&quot;Hello&quot;</span>; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strlen</span>(c));</span><br></pre></td></tr></table></figure><h2 id="字符串的遍历-1"><a href="#字符串的遍历-1" class="headerlink" title="字符串的遍历"></a>字符串的遍历</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; len; ++i) &#123;</span><br><span class="line">    <span class="comment">// TODO ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; ++i) &#123;</span><br><span class="line">    <span class="comment">// TODO ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; s[i]; ++i) &#123;</span><br><span class="line">    <span class="comment">// TODO ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">    s[i]=s[i]-<span class="string">&#x27;A&#x27;</span>+<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//首先，我们可以利用 ASCII 码值的关系比较来确定它是大写字母，还是小写字母，如果是大写字母转成小写字母，可以通过先减去A再加上a，从而转换成小写字母。实现如下：</span></span><br></pre></td></tr></table></figure><h2 id="字符串拷贝"><a href="#字符串拷贝" class="headerlink" title="字符串拷贝"></a>字符串拷贝</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> src[<span class="number">10</span>] = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="type">char</span> tar[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(tar, src);</span><br></pre></td></tr></table></figure><h2 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> src[<span class="number">10</span>] = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="type">char</span> tar[<span class="number">10</span>] = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="type">int</span> x = <span class="built_in">strcmp</span>(tar, src);<span class="comment">//！=0</span></span><br><span class="line"><span class="type">int</span> y = <span class="built_in">strcmp</span>(tar, <span class="string">&quot;hello&quot;</span>);<span class="comment">//0</span></span><br></pre></td></tr></table></figure><h2 id="字符串分割"><a href="#字符串分割" class="headerlink" title="字符串分割"></a>字符串分割</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> str[<span class="number">9</span>] = <span class="string">&quot;I love U&quot;</span>;</span><br><span class="line"><span class="comment">//变成</span></span><br><span class="line"><span class="type">char</span> str[][<span class="number">5</span>] = &#123;</span><br><span class="line"><span class="string">&quot;I&quot;</span>, <span class="string">&quot;love&quot;</span>, <span class="string">&quot;U&quot;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;d&lt;/p&gt;
&lt;h1 id=&quot;第二天-字符串&quot;&gt;&lt;a href=&quot;#第二天-字符串&quot; class=&quot;headerlink&quot; title=&quot;第二天 字符串&quot;&gt;&lt;/a&gt;第二天 字符串&lt;/h1&gt;&lt;h2 id=&quot;字符串的遍历&quot;&gt;&lt;a href=&quot;#字符串的遍历&quot; class=&quot;hea</summary>
      
    
    
    
    <category term="Leetcode" scheme="http://example.com/categories/Leetcode/"/>
    
    <category term="基础知识" scheme="http://example.com/categories/Leetcode/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="数据结构与算法" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>关于自驾游</title>
    <link href="http://example.com/2022/06/28/%E5%AE%9A%E6%9C%9F%E6%80%BB%E7%BB%93/%E5%85%B3%E4%BA%8E%E8%87%AA%E9%A9%BE%E6%B8%B8/"/>
    <id>http://example.com/2022/06/28/%E5%AE%9A%E6%9C%9F%E6%80%BB%E7%BB%93/%E5%85%B3%E4%BA%8E%E8%87%AA%E9%A9%BE%E6%B8%B8/</id>
    <published>2022-06-28T09:11:08.000Z</published>
    <updated>2022-07-06T08:41:09.105Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220628171315.png" alt></p></blockquote><p>出自2017年12月jlpt n2考试短篇阅读理解</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220628171315.png&quot; alt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;出自20</summary>
      
    
    
    
    <category term="生活趣闻" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB%E8%B6%A3%E9%97%BB/"/>
    
    
    <category term="旅行" scheme="http://example.com/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>ZeroBasisLeetcode</title>
    <link href="http://example.com/2022/06/17/%E7%AE%97%E6%B3%95%E5%8A%9B%E6%89%A3/ZeroBasisLeetcode/"/>
    <id>http://example.com/2022/06/17/%E7%AE%97%E6%B3%95%E5%8A%9B%E6%89%A3/ZeroBasisLeetcode/</id>
    <published>2022-06-17T14:50:00.000Z</published>
    <updated>2022-06-17T17:20:33.998Z</updated>
    
    <content type="html"><![CDATA[<p><strong>九天零基础力扣</strong></p><h1 id="第一天函数"><a href="#第一天函数" class="headerlink" title="第一天函数"></a>第一天函数</h1><h2 id="输入和输出"><a href="#输入和输出" class="headerlink" title="输入和输出"></a>输入和输出</h2><p>一般的在线评测系统中，我们要手写输入输出函数，而在lc中只要实现函数就可以了</p><h2 id="刷题步骤"><a href="#刷题步骤" class="headerlink" title="刷题步骤"></a>刷题步骤</h2><p><strong> </strong><strong style="color: rgb(236, 40, 52);">第 1 步：阅读题目；</strong></p><p> <strong style="color: rgb(255, 191, 15);">第 2 步：参考示例；</strong></p><p> <strong style="color: rgb(0, 209, 0);">第 4 步：根据题意，实现函数的功能；</strong></p><p> <strong style="color: rgb(88, 38, 188);">第 5 步：本地数据测试；</strong></p><p> <strong style="color: rgb(166, 166, 166);">第 6 步：提交；</strong></p><h2 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h2><p>       调用函数的一方不需要了解函数的具体实现，对于它来说，这部分是一个 "黑盒子"，从而使得程序结构更加清晰。 C语言在设计中考虑了函数的 <strong style="color: rgb(68, 17, 12);">高效性</strong> 和 <strong style="color: rgb(68, 17, 12);">易用性</strong> 两个原则。函数的实现应该尽量简短，因为函数可以套函数，一个程序应该尽量由许多小的函数组成，而不是由少量较大函数组成。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="整数乘法371-两整数之和-力扣（LeetCode）"><a href="#整数乘法371-两整数之和-力扣（LeetCode）" class="headerlink" title="整数乘法371. 两整数之和 - 力扣（LeetCode）"></a>整数乘法<a href="https://leetcode.cn/problems/sum-of-two-integers/">371. 两整数之和 - 力扣（LeetCode）</a></h3><blockquote><p>给你两个整数 <code>a</code> 和 <code>b</code> ，<strong>不使用</strong> 运算符 <code>+</code> 和 <code>-</code> ，计算并返回两整数之和。</p></blockquote><p>  实现一个函数multiply，不使用 * 运算符， 实现两个正整数的相乘。可以使用加号、减号、位移，但要吝啬一些。</p><p>​       (1) 这里int是C/C++中的一种类型，代表整数，即 Integer，传入参数是两个整数； 题目要求返回两个整数的乘积，并且要求不能用*，那如果我用了会怎么样？答案是并不会怎么样，因为平台不会去对它做语法分析，只是调用了你的函数，提供一些输入数据，如果输出数据和它给定的相同，就算通过。作为你接触算法的第一道题，其实这些条件都无所谓的，能过就行，他只检测输入输出，不检测你实际代码。 </p><p>​       (2) 对于新人来说，把<strong>问题过掉比问题</strong>本身更重要，题数的增加，是信心的增加，信心比什么都重要，有了信心，你才能继续往下走，只要你能往下推进，你就能继续学习，继续学习你迟早会学到相应的算法。好了，过了这题以后，把这道题放入你的重刷列表，等你对算法有一定理解以后再来用题目要求的方法来过了它。</p><h3 id="整数除法"><a href="#整数除法" class="headerlink" title="整数除法"></a>整数除法</h3><blockquote><p>给定两个整数，被除数 dividend 和除数 divisor。将两数相除，要求不使用乘法、除法和 mod 运算符。</p><p>返回被除数 dividend 除以除数 divisor 得到的商。</p><p>整数除法的结果应当截去（truncate）其小数部分，例如：truncate(8.345) = 8 以及 truncate(-2.7335) = -2</p><p>示例 1:</p><p>输入: dividend = 10, divisor = 3<br>输出: 3<br>解释: 10/3 = truncate(3.33333..) = truncate(3) = 3<br>示例 2:</p><p>输入: dividend = 7, divisor = -3<br>输出: -2<br>解释: 7/-3 = truncate(-2.33333..) = -2</p><p>提示：</p><p>被除数和除数均为 32 位有符号整数。<br>除数不为 0。<br>假设我们的环境只能存储 32 位有符号整数，其数值范围是 [−231,  231 − 1]。本题中，如果除法结果溢出，则返回 231 − 1。</p></blockquote><h3 id="次幂函数"><a href="#次幂函数" class="headerlink" title="次幂函数"></a>次幂函数</h3><h3 id="开方函数"><a href="#开方函数" class="headerlink" title="开方函数"></a>开方函数</h3><h3 id="最值函数"><a href="#最值函数" class="headerlink" title="最值函数"></a>最值函数</h3><h3 id><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;九天零基础力扣&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;第一天函数&quot;&gt;&lt;a href=&quot;#第一天函数&quot; class=&quot;headerlink&quot; title=&quot;第一天函数&quot;&gt;&lt;/a&gt;第一天函数&lt;/h1&gt;&lt;h2 id=&quot;输入和输出&quot;&gt;&lt;a href=&quot;#输入和输</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="Algorithm" scheme="http://example.com/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>c++快速入门</title>
    <link href="http://example.com/2022/05/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/c-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2022/05/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/c-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</id>
    <published>2022-05-02T10:02:11.000Z</published>
    <updated>2022-07-06T08:45:05.243Z</updated>
    
    <content type="html"><![CDATA[<h1 id="c-标准输入输出"><a href="#c-标准输入输出" class="headerlink" title="c++标准输入输出"></a>c++标准输入输出</h1><ul><li>头文件iostream</li><li>cout是标准输出流变量</li><li>&lt;&lt;是运算符 加入o是输出流对象 x是一个数据 0&lt;&lt;x</li><li>cout是标准名字空间std的一个名字 必须加上<strong>名字空间限定</strong>std::cout</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> std::cout;</span><br><span class="line"><span class="keyword">using</span> std::endl;</span><br><span class="line"><span class="keyword">using</span> std::cin;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;HELLO WORLD\n&quot;</span>;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a\n&quot;</span>&lt;&lt;a;</span><br><span class="line"><span class="function">ofstream <span class="title">oF</span><span class="params">(<span class="string">&quot;text.txt&quot;</span>)</span></span>;</span><br><span class="line">oF &lt;&lt; <span class="number">3.14</span> &lt;&lt; <span class="string">&quot;&quot;</span> &lt;&lt; <span class="string">&quot;helllo world&quot;</span>;</span><br><span class="line">oF.<span class="built_in">close</span>();</span><br><span class="line"><span class="function">ifstream <span class="title">iF</span><span class="params">(<span class="string">&quot;text.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="type">double</span> d;</span><br><span class="line">string str;</span><br><span class="line">iF &gt;&gt; d &gt;&gt; str;</span><br><span class="line">cout &lt;&lt; d &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="引用变量和引用形参"><a href="#引用变量和引用形参" class="headerlink" title="引用变量和引用形参"></a>引用变量和引用形参</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;instream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">double</span> d;</span><br><span class="line">    <span class="type">int</span> &amp;r=d;</span><br><span class="line">    cout&lt;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>引用变量是其他变量的别名，如同一个人的外号或者小名</p><p>既然是引用，定义比那两点时候就必须指明其引用是哪个变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int a=3;int &amp;r=a;</span><br></pre></td></tr></table></figure><p>函数的引用形参：引用实参</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">swap(a,b)</span><br><span class="line"></span><br><span class="line">swap(int &amp;x,int&amp;y)&#123;</span><br><span class="line">int t=x;</span><br><span class="line">x=y;</span><br><span class="line">y=t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="函数的默认形参"><a href="#函数的默认形参" class="headerlink" title="函数的默认形参"></a>函数的默认形参</h1><ul><li>函数形参可以有默认值</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">void print(char ch,int n=1);</span><br></pre></td></tr></table></figure><p>默认形参必须在非默认形参右边</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add(y,x=1.z=3);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">char</span> ch, <span class="type">int</span> n = <span class="number">3</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; ch;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;A&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;A&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;A&#x27;</span>, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">A</span></span><br><span class="line"><span class="comment">AA</span></span><br><span class="line"><span class="comment">AAA</span></span><br><span class="line"><span class="comment">AAA</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="函数重载"><a href="#函数重载" class="headerlink" title="函数重载"></a>函数重载</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数重载</span></span><br><span class="line"><span class="comment">//c++允许作用域里面有同名函数，只要形参不同</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">add</span><span class="params">(<span class="type">double</span> a, <span class="type">double</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">add</span>(<span class="number">11</span>, <span class="number">11</span>)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">add</span>(<span class="number">1.22</span>, <span class="number">12.1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="函数模板"><a href="#函数模板" class="headerlink" title="函数模板"></a>函数模板</h1><p>通用算法，函数模板 也叫<strong>泛型算法</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span></span><br><span class="line"><span class="function">T <span class="title">add</span><span class="params">(T a, T b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">add</span>&lt;<span class="type">int</span>&gt;(<span class="number">1</span>, <span class="number">1</span>)&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">add</span>&lt;string&gt;(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot; world&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">add</span>&lt;<span class="type">double</span>&gt;(<span class="number">1.1</span>, <span class="number">23.1</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="string"><a href="#string" class="headerlink" title="string"></a>string</h1><p>是一个用户定义类型 表示的是符串</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string s=<span class="string">&quot;hello&quot;</span>,<span class="built_in">s2</span>(<span class="string">&quot;world&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">int main() &#123;</span><br><span class="line">string s = &quot;hello&quot;, s2(&quot;world&quot;);</span><br><span class="line">cout &lt;&lt; s.size() &lt;&lt; endl;</span><br><span class="line">string s3 = s.substr(1, 3);</span><br><span class="line">cout &lt;&lt; s3 &lt;&lt; endl;</span><br><span class="line">string s4 = s + &quot;  &quot; + s2;</span><br><span class="line">cout &lt;&lt; s4 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//索引修改</span></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><h1 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h1><p>向量类似数组可以动态增长</p><p>是一个类模板 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v=&#123;<span class="number">1</span>,<span class="number">22</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">23</span>);<span class="comment">//+</span></span><br><span class="line">    cout &lt;&lt; v[<span class="number">4</span>];</span><br><span class="line">    v.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="comment">//报错cout &lt;&lt; v[4];</span></span><br><span class="line">    v.<span class="built_in">resize</span>(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="动态内存"><a href="#动态内存" class="headerlink" title="动态内存"></a>动态内存</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span>* p = <span class="keyword">new</span> <span class="type">int</span>; *p = <span class="number">3</span>;</span><br><span class="line">cout &lt;&lt; p&lt;&lt;<span class="string">&#x27;\t&#x27;</span>&lt;&lt;*p;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span>* arr = <span class="keyword">new</span> <span class="type">int</span>[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">arr[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i]&lt;&lt;<span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">student</span> &#123;</span><br><span class="line"><span class="keyword">public</span>: <span class="comment">//接口</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="keyword">this</span>-&gt;name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">get_name</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> name; &#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">get_score</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> score; &#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set_name</span><span class="params">(string n)</span> </span>&#123; name = n; &#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set_score</span><span class="params">(<span class="type">double</span> s)</span> </span>&#123; score = s; &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="type">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">student stu;</span><br><span class="line">stu.<span class="built_in">set_name</span>(<span class="string">&quot;Li Ping&quot;</span>);</span><br><span class="line">stu.<span class="built_in">set_score</span>(<span class="number">78.5</span>);</span><br><span class="line">stu.<span class="built_in">print</span>();   <span class="comment">// print(&amp;stu);</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; stu.<span class="built_in">get_name</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; stu.<span class="built_in">get_score</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><h3 id="访问控制和继承"><a href="#访问控制和继承" class="headerlink" title="访问控制和继承"></a>访问控制和继承</h3><p>派生类可以访问基类中所有的非私有成员。因此基类成员如果不想被派生类的成员函数访问，则应在基类中声明为 private。</p><p>我们可以根据访问权限总结出不同的访问类型，如下所示：</p><div class="table-container"><table><thead><tr><th style="text-align:left">访问</th><th style="text-align:left">public</th><th style="text-align:left">protected</th><th style="text-align:left">private</th></tr></thead><tbody><tr><td style="text-align:left">同一个类</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td></tr><tr><td style="text-align:left">派生类</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left">外部的类</td><td style="text-align:left">yes</td><td style="text-align:left">no</td><td style="text-align:left">no</td></tr></tbody></table></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Shape</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setWidth</span><span class="params">(<span class="type">int</span> w)</span> </span>&#123;</span><br><span class="line">width = w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setHeight</span><span class="params">(<span class="type">int</span> h)</span> </span>&#123;</span><br><span class="line">height = h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> width;</span><br><span class="line"><span class="type">int</span> height;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle</span> :<span class="keyword">public</span> Shape &#123;<span class="comment">//继承语法</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (width * height);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Rectangle Rect;</span><br><span class="line">Rect.<span class="built_in">setHeight</span>(<span class="number">5</span>);</span><br><span class="line">Rect.<span class="built_in">setWidth</span>(<span class="number">6</span>);</span><br><span class="line">cout &lt;&lt; Rect.<span class="built_in">getArea</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数重载-1"><a href="#函数重载-1" class="headerlink" title="函数重载"></a>函数重载</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">printData</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;整数为: &quot;</span> &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line"> </span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">double</span>  f)</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;浮点数为: &quot;</span> &lt;&lt; f &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line"> </span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">char</span> c[])</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;字符串为: &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   printData pd;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 输出整数</span></span><br><span class="line">   pd.<span class="built_in">print</span>(<span class="number">5</span>);</span><br><span class="line">   <span class="comment">// 输出浮点数</span></span><br><span class="line">   pd.<span class="built_in">print</span>(<span class="number">500.263</span>);</span><br><span class="line">   <span class="comment">// 输出字符串</span></span><br><span class="line">   <span class="type">char</span> c[] = <span class="string">&quot;Hello C++&quot;</span>;</span><br><span class="line">   pd.<span class="built_in">print</span>(c);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><html><head><script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDJW4jsPlNKgv6jFm3B5Edp5ywgdqLWdmc&sensor=false"></script><script>function initialize(){var mapProp = {  center:new google.maps.LatLng(51.508742,-0.120850),  zoom:5,  mapTypeId:google.maps.MapTypeId.ROADMAP  };var map=new google.maps.Map(document.getElementById("googleMap"),mapProp);}google.maps.event.addDomListener(window, 'load', initialize);</script></head><body><div id="googleMap" style="width:500px;height:380px;"></div></body></html>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;c-标准输入输出&quot;&gt;&lt;a href=&quot;#c-标准输入输出&quot; class=&quot;headerlink&quot; title=&quot;c++标准输入输出&quot;&gt;&lt;/a&gt;c++标准输入输出&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;头文件iostream&lt;/li&gt;
&lt;li&gt;cout是标准输出流变量&lt;/li&gt;</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>git出现的问题</title>
    <link href="http://example.com/2022/04/11/git%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/04/11/git%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-04-11T15:22:08.000Z</published>
    <updated>2022-04-29T23:52:24.654Z</updated>
    
    <content type="html"><![CDATA[<p>今天学习使用vscode的源代码管理时候同步时出现了fatal: unable to access ‘xxxx: Failed to connect to github.com port 443 after 21098 ms: Timed out这个错误。</p><span id="more"></span><p>提示含义是通过443端口连接github.com错误。</p><p>解决办法为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy#删除配置</span><br><span class="line">git config --global http.proxy 127.0.0.1:xxxx#根据自己的代理插件设置全局端口</span><br><span class="line">git config --local http.proxy 127.0.0.1:xxxx #为某个 git 项目单独设置代理</span><br></pre></td></tr></table></figure><p>比如我用某个小猫默认的7080</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220411232828.png" alt></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天学习使用vscode的源代码管理时候同步时出现了fatal: unable to access ‘xxxx: Failed to connect to github.com port 443 after 21098 ms: Timed out这个错误。&lt;/p&gt;</summary>
    
    
    
    <category term="git" scheme="http://example.com/categories/git/"/>
    
    
    <category term="踩过的坑" scheme="http://example.com/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Java SE</title>
    <link href="http://example.com/2022/02/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20(2)/"/>
    <id>http://example.com/2022/02/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20(2)/</id>
    <published>2022-02-21T05:47:24.000Z</published>
    <updated>2022-07-06T08:44:47.177Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330163928.png" alt></p><h1 id="DOS"><a href="#DOS" class="headerlink" title="DOS"></a>DOS</h1><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330175504.png" alt></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd test</span><br><span class="line">copy nul a.txt</span><br><span class="line">echo 123&gt;a.txt</span><br><span class="line">del a.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>constant</p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">final type barName=valie;</span><br></pre></td></tr></table></figure><h2 id="变量的分类"><a href="#变量的分类" class="headerlink" title="变量的分类"></a>变量的分类</h2><p>局部变量 成员变量 静态变量</p><p>局部变量在方法语句块</p><p>成员变量 对象 类内部，方法外面 从属对象 会自动默认初始化</p><p>静态变量 类内部 static修饰 从属类</p><h2 id="primitive-data-type"><a href="#primitive-data-type" class="headerlink" title="primitive data type"></a>primitive data type</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220412220904.png" alt></p><h3 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h3><p>byte 一字节 -127-127</p><p>short 2字节 -2^15-2^15-1</p><p>int 4字节 2^31-2^32-1</p><p>long 8字节 -2^63</p><p>十进制 八进制以0开头 十六进制以0x 0X 二进制0b oB开头</p><h4 id="floating-point-number"><a href="#floating-point-number" class="headerlink" title="floating point number"></a>floating point number</h4><p>float四字节 double八字节</p><h3 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h3><h3 id="boolean"><a href="#boolean" class="headerlink" title="boolean"></a>boolean</h3><p>true false</p><p>一个字节或者四个字节</p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220412225528.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220412230002.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220412230014.png" alt></p><h3 id="强制转换类-cast"><a href="#强制转换类-cast" class="headerlink" title="强制转换类 cast"></a>强制转换类 cast</h3><p>（type）var</p><h3 id="Scanner处理键盘输入"><a href="#Scanner处理键盘输入" class="headerlink" title="Scanner处理键盘输入"></a>Scanner处理键盘输入</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Scanner1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入用户名&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">uname</span> <span class="operator">=</span>s.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;输入你的年龄&quot;</span>);</span><br><span class="line">        <span class="type">int</span> age=s.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;用户名&quot;</span>+uname);</span><br><span class="line">        System.out.println(<span class="string">&quot;年龄&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h1><h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><h2 id="string"><a href="#string" class="headerlink" title="string"></a>string</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220624161257.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String name=<span class="keyword">new</span> <span class="title class_">string</span>(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">String name=<span class="string">&quot;name&quot;</span>;</span><br><span class="line"><span class="type">char</span>[]value=&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b,&#x27;</span>c&#125;;</span><br><span class="line">String s3=<span class="keyword">new</span> <span class="title class_">String</span>(value);</span><br><span class="line"><span class="type">byte</span>[]bytes=&#123;<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>,<span class="number">100</span>&#125;;</span><br><span class="line">String s4=<span class="keyword">new</span> <span class="title class_">String</span>(bytes);</span><br></pre></td></tr></table></figure><h3 id="统计单词数量"><a href="#统计单词数量" class="headerlink" title="统计单词数量"></a>统计单词数量</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        String str=<span class="string">&quot;hello world abc hello hello hello hello hello&quot;</span>;</span><br><span class="line">        System.out.println();</span><br><span class="line">        HelloWorld he=<span class="keyword">new</span> <span class="title class_">HelloWorld</span>();</span><br><span class="line">        <span class="type">int</span> count=he.wordCount(str,<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        System.out.println(count);</span><br><span class="line">;    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">wordCount</span><span class="params">(String art,String word)</span>&#123;</span><br><span class="line">        <span class="comment">//1先把文章打散成数组</span></span><br><span class="line">        String[] words = art.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; words.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(words[i].equalsIgnoreCase(word))&#123;</span><br><span class="line">                res++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="scanner"><a href="#scanner" class="headerlink" title="scanner"></a>scanner</h3><h3 id="equals"><a href="#equals" class="headerlink" title="equals"></a>equals</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(name.equals(name_1)&amp;&amp;password_1.equals(password))&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="遍历charAt"><a href="#遍历charAt" class="headerlink" title="遍历charAt"></a>遍历charAt</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; line.length(); i++) &#123;</span><br><span class="line">           System.out.println(line.charAt(i));</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="stringBuilder的添加和反转"><a href="#stringBuilder的添加和反转" class="headerlink" title="stringBuilder的添加和反转"></a>stringBuilder的添加和反转</h2><p>StringBuffer 线程安全效率低</p><p>StringBuilder相反</p><p>append和reverse</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">     StringBuilder sb=<span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        sb.append(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        sb.append(<span class="string">&quot;java&quot;</span>);</span><br><span class="line">        System.out.println(sb);</span><br><span class="line">        sb.reverse();</span><br><span class="line">        System.out.println(sb);</span><br><span class="line"><span class="comment">//hellojava</span></span><br><span class="line"><span class="comment">//avajolleh</span></span><br><span class="line"></span><br><span class="line">stringbuilder转为string</span><br><span class="line">    <span class="type">string</span> <span class="variable">s</span> <span class="operator">=</span>sb.tostring（）；</span><br><span class="line"> string转为stringbuilder</span><br><span class="line">    StringBuilder sb=<span class="keyword">new</span> <span class="title class_">StringBuilder</span>(s);</span><br></pre></td></tr></table></figure><h1 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">快捷和补全</span><br><span class="line">单行ctrl+/</span><br><span class="line">多行ctrl+shitft+/</span><br><span class="line"></span><br><span class="line">CTRL+alt+L格式化</span><br><span class="line"></span><br><span class="line">快速生成main（）方法 psvm</span><br><span class="line">输入语句sout</span><br><span class="line"></span><br><span class="line">内容辅助CTRL+shifr+space\</span><br><span class="line">自动生成构造器</span><br><span class="line">insert+alt</span><br><span class="line">查看错误alt+enter</span><br><span class="line">看源码ctrl+左键</span><br></pre></td></tr></table></figure><h1 id="数组Array"><a href="#数组Array" class="headerlink" title="数组Array"></a>数组Array</h1><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220624165133.png" alt></p><p>数组必须初始化使用</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220618150304.png" alt></p><h2 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>,length-<span class="number">1</span>]</span><br><span class="line">        <span class="type">int</span> []a=&#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>&#125;;</span><br><span class="line">        Arrays.sort(a);</span><br><span class="line">        <span class="comment">//二分查找索引</span></span><br><span class="line">        System.out.println(Arrays.binarySearch(a,<span class="number">2</span>));</span><br><span class="line">        <span class="comment">//数组填充</span></span><br><span class="line">        Arrays.fill(a,<span class="number">0</span>,<span class="number">3</span>,<span class="number">55</span>);</span><br></pre></td></tr></table></figure><h3 id="foe-each"><a href="#foe-each" class="headerlink" title="foe-each"></a>foe-each</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用于数组或者容器读取</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    String []ss=&#123;<span class="string">&quot;12321&quot;</span>,<span class="string">&quot;123&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(String temp:ss)&#123;</span><br><span class="line">        sout(temp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="arraycopy"><a href="#arraycopy" class="headerlink" title="arraycopy"></a>arraycopy</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">arraycopy(object,<span class="type">int</span> srcpos,object,<span class="type">int</span> destpos,intlenght)</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">string</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        String[] s=&#123;<span class="string">&quot;阿里&quot;</span>,<span class="string">&quot;尚学堂&quot;</span>,<span class="string">&quot;东京&quot;</span>&#125;;</span><br><span class="line">        String []sBak=<span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">4</span>];</span><br><span class="line">        System.arraycopy(s,<span class="number">0</span>,sBak,<span class="number">0</span>,s.length);</span><br><span class="line">        System.out.println(Arrays.toString(sBak));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>静态 type name = new type【length】</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int a[] =new int [5];</span><br><span class="line">int [] arr =new int [5];</span><br><span class="line">int []arr=&#123;551,2,377&#125;;</span><br></pre></td></tr></table></figure><p>数组的扩容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] a=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] temp=<span class="keyword">new</span> <span class="title class_">int</span> [a.length*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">    temp[i]=a[i];</span><br><span class="line">&#125;</span><br><span class="line">a=temp;</span><br><span class="line">a[a.length-<span class="number">2</span>]=<span class="number">11</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">    System.out.println(a[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Comparalbe"><a href="#Comparalbe" class="headerlink" title="Comparalbe"></a>Comparalbe</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="双指针思想"><a href="#双指针思想" class="headerlink" title="双指针思想"></a>双指针思想</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">int a[]=&#123;12,231,3421,33,3131,234&#125;;</span><br><span class="line">int b[]=&#123;321,31,345,23,54,7676&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       while (i&lt;a.length||j&lt;b.length)&#123;</span><br><span class="line">    if(i==a.length)&#123;</span><br><span class="line">        c[i+j]=b[j];</span><br><span class="line">        j++;continue;</span><br><span class="line">    &#125;</span><br><span class="line">    if(j==b.length)&#123;</span><br><span class="line">        c[i+j]=a[i];</span><br><span class="line">        i++;continue;</span><br><span class="line">    &#125;</span><br><span class="line">    if(a[i]&gt;b[j])&#123;</span><br><span class="line">        c[i+j]=b[j];</span><br><span class="line">        j++;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        c[i+j]=a[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arrayList-集合（超级数组）"><a href="#arrayList-集合（超级数组）" class="headerlink" title="arrayList 集合（超级数组）"></a>arrayList 集合（超级数组）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">        ArrayList&lt;String&gt; array =<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        System.out.println(array);</span><br><span class="line">        array.add(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">        array.add(<span class="string">&quot;java&quot;</span>);array.add(<span class="string">&quot;java good&quot;</span>);</span><br><span class="line">        System.out.println(array);</span><br><span class="line">        array.add(<span class="number">1</span>,<span class="string">&quot;syr&quot;</span>);</span><br><span class="line">        System.out.println(array);</span><br><span class="line">        </span><br><span class="line">        []</span><br><span class="line">[hello world, java, java good]</span><br><span class="line">[hello world, syr, java, java good]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>arraylist基本常用方法</p><div class="table-container"><table><thead><tr><th>public boolean remove(obiect o)</th><th>删除指定元素</th></tr></thead><tbody><tr><td>public  E remove(int index)</td><td>删除索引元素，返回被删元素</td></tr><tr><td>public E set(int index,E element)</td><td>修改，返回被修改的元素</td></tr><tr><td>public E get（int index）</td><td>返沪索引元素</td></tr><tr><td>public int size（）</td><td>返回集合的元素</td></tr></tbody></table></div><h3 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h3><h1 id="方法method"><a href="#方法method" class="headerlink" title="方法method"></a>方法method</h1><p>Java方法是语句的集合，它们在一起执行一个功能。</p><ul><li>方法是解决一类问题的步骤的有序组合</li><li>方法包含于类或对象中</li><li>方法在程序中被创建，在其他地方被引用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">定义 </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> type <span class="title function_">name</span><span class="params">()</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法重载overload"><a href="#方法重载overload" class="headerlink" title="方法重载overload"></a>方法重载overload</h2><ul><li>多个方法在一个类</li><li>方法具有相同的方法名</li><li>返回类型或者数量不同</li></ul><p>一个类中定义多个名称相同，但是参数泪飙不同的的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">fangfa</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(sum(<span class="number">123</span>,<span class="number">2131</span>));</span><br><span class="line">        System.out.println(sum(<span class="number">12.1</span>,<span class="number">23.1</span>));</span><br><span class="line">        System.out.println(sum(<span class="number">123</span>,<span class="number">231</span>,<span class="number">32</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//int add</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="type">double</span> <span class="title function_">sum</span><span class="params">(<span class="type">double</span> a,<span class="type">double</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  a+b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b+c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="number">2254</span></span><br><span class="line"><span class="number">35.2</span></span><br><span class="line"><span class="number">386</span></span><br></pre></td></tr></table></figure><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Text</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">plus</span><span class="params">(<span class="type">int</span>...nums)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>StackOverflowError</p><p>大量占用系统堆栈</p><h1 id="包装类和自动拆装箱"><a href="#包装类和自动拆装箱" class="headerlink" title="包装类和自动拆装箱"></a>包装类和自动拆装箱</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220621204705.png" alt></p><h1 id="类和对象（Object-Oriented-Programing）"><a href="#类和对象（Object-Oriented-Programing）" class="headerlink" title="类和对象（Object Oriented Programing）"></a>类和对象（Object Oriented Programing）</h1><p>类是java基本的组成结构</p><h2 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">car</span>&#123;</span><br><span class="line">    <span class="comment">//每个文件必须有一个public class，名字与文件名相同</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">tyre</span>&#123;&#125;<span class="comment">//可以定义多个class</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">engine</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">seat</span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>对于一个类来说有三种成员</p><h3 id="field属性-成员变量"><a href="#field属性-成员变量" class="headerlink" title="field属性  成员变量"></a>field属性  成员变量</h3><p>属性用于定义这个类或者更类对象包含的数据或者静态特征</p><p>修饰符 type name=默认</p><h3 id="method方法"><a href="#method方法" class="headerlink" title="method方法"></a>method方法</h3><p>方法从属于类和对象</p><p>修饰符 返回类型 name（）{</p><h2 id="构造方法-构造器-constructor"><a href="#构造方法-构造器-constructor" class="headerlink" title="构造方法 构造器 constructor"></a>构造方法 构造器 constructor</h2><p>构造器能用于对象的初始化，而不是创建对象</p><ul><li>构造器用new关键字调用</li><li>构造器虽然没有返回值，但不能定义返回值类型 </li><li>如果没有定义构造器，则编译器会自动定义一个无参的构造方法，如果一定义的则编译器不会自动添加</li><li>构造器的方法名必须与类名字相同 </li></ul><p>课堂练习可以生成具有特定坐标的点对象 提供可以计算点到另外一点距离的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 第五章面向对象.构造器.点;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line">    <span class="type">double</span> x,y;</span><br><span class="line"></span><br><span class="line">    Point (<span class="type">double</span> _x,<span class="type">double</span> _y)&#123;</span><br><span class="line">        x=_x;y=_y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getDistance</span><span class="params">(Point p)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Math.sqrt((x-p.x)*(y-p.y)+(y-p.y)*(y-p.y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Point p1=<span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">3.0</span>,<span class="number">4.0</span>);</span><br><span class="line">        <span class="type">Point</span> <span class="variable">origin</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">0.0</span>,<span class="number">0.0</span>);</span><br><span class="line">        System.out.println(p1.getDistance(origin));</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="构造方法的重载"><a href="#构造方法的重载" class="headerlink" title="构造方法的重载"></a>构造方法的重载</h2><h2 id="jvm虚拟机"><a href="#jvm虚拟机" class="headerlink" title="jvm虚拟机"></a>jvm虚拟机</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417123127.png" alt></p><h3 id="栈的特点"><a href="#栈的特点" class="headerlink" title="栈的特点"></a>栈的特点</h3><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417123413.png" alt></p><h3 id="堆的特点"><a href="#堆的特点" class="headerlink" title="堆的特点"></a>堆的特点</h3><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417123605.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417130828.png" alt></p><h3 id="Garbage-Collection垃圾回收机制"><a href="#Garbage-Collection垃圾回收机制" class="headerlink" title="Garbage Collection垃圾回收机制"></a>Garbage Collection垃圾回收机制</h3><p>垃圾回收过程</p><p>发现无用的对象 回收无用对象占用内存空间 无用对象为没有任何引用</p><h4 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h4><p>1引用计数法</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417132400.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417132717.png" alt></p><h3 id="通用的分代垃圾回收机制"><a href="#通用的分代垃圾回收机制" class="headerlink" title="通用的分代垃圾回收机制"></a>通用的分代垃圾回收机制</h3><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417132912.png" alt></p><h3 id="内存泄漏"><a href="#内存泄漏" class="headerlink" title="内存泄漏"></a>内存泄漏</h3><p>创建大量的无用对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string str=&quot;&quot;;</span><br><span class="line">for(int i=0;i&lt;11000:i++)&#123;</span><br><span class="line">str+=i;//相当于产生了11000个string对象</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="静态集合类的使用"><a href="#静态集合类的使用" class="headerlink" title="静态集合类的使用"></a>静态集合类的使用</h4><p>hassomap vector list等这些最容易出现，这些静态变量的生命周期</p><p>各种连接对象 监听器使用不当</p><p>可以用system.gc()但是只是通知jvm</p><p>object可以用finalize方法，是java给程序员的</p><h3 id="this关键词"><a href="#this关键词" class="headerlink" title="this关键词"></a>this关键词</h3><p>就是当前对象的地址</p><p>this用法</p><ul><li>普通方法中 this总是指向调用该方法的对象</li><li>构造方法中，this总是指向正要初始化的对象</li></ul><h3 id="static"><a href="#static" class="headerlink" title="static"></a>static</h3><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417200700.png" alt></p><h3 id="静态初始化块"><a href="#静态初始化块" class="headerlink" title="静态初始化块"></a>静态初始化块</h3><p>构造方法用于对象的普通属性的初始化</p><p><strong>静态初始快中，用于初始化类，初始化静态属性</strong></p><p><strong>静态初始化快中不能直接访问非static成员</strong></p><p><strong>变量分类</strong></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417204817.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417204921.png" alt></p><p>包机制package import</p><p>相当于文件夹对文件的作用，用于管理类，解决类的重名问题</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220417210539.png" alt></p><h1 id="面向对象三大特征"><a href="#面向对象三大特征" class="headerlink" title="面向对象三大特征"></a>面向对象三大特征</h1><h2 id="继承extends"><a href="#继承extends" class="headerlink" title="继承extends"></a>继承extends</h2><p>代码复用，方便建模</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 第五章面向对象.extends1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">text</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;songyuran&quot;</span>,<span class="number">11</span>,<span class="string">&quot;CS&quot;</span>);</span><br><span class="line">    s1.xuexi();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Persin</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> height;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rest</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;xiuxi&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Persin</span>&#123;</span><br><span class="line">    String major;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">xuexi</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;xuexi&quot;</span>);</span><br><span class="line">        rest();</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name,<span class="type">int</span> height,String major)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">        <span class="built_in">this</span>.height=height;</span><br><span class="line">        <span class="built_in">this</span>.major=major;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="instanceof判断类型"><a href="#instanceof判断类型" class="headerlink" title="instanceof判断类型"></a>instanceof判断类型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s1 instanceof Person//true</span><br><span class="line">s1 instanceof Student//true</span><br></pre></td></tr></table></figure><ul><li><p>父类 又叫超类 基类  子类：派生类</p></li><li><p>接口有多继承</p></li></ul><h3 id="方法重写override"><a href="#方法重写override" class="headerlink" title="方法重写override"></a>方法重写override</h3><p>子类重写父亲的方法，替换父类行为，重写是实现多态的必要条件</p><p>  == 方法名字 形参列表</p><p>  《=返回值类型和声明异常类型，子类小于等于父类</p><p>  》=子类大于父类</p><h3 id="final关键词"><a href="#final关键词" class="headerlink" title="final关键词"></a>final关键词</h3><ul><li>修饰变量</li><li>修饰方法 不可被子类重写，但是可以重载，final class a{}</li><li>修饰类 不可被继承</li></ul><h3 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h3><p>组合比较灵活，继承只能有一个父类，组合可以有多个属性</p><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>三大特征之一</p><p>提高安全 复用 高内聚低耦合</p><h3 id="封装的实现关键词访问限制修饰符"><a href="#封装的实现关键词访问限制修饰符" class="headerlink" title="封装的实现关键词访问限制修饰符"></a><strong>封装的实现关键词访问限制修饰符</strong></h3><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220522120656.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220522141733.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220522121248.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220522142618.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> text.b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        User u=<span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">99</span>,<span class="string">&quot;宋宇然&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">        System.out.println(u.getId());</span><br><span class="line">        System.out.println(u.getName());</span><br><span class="line">        System.out.println(u.isMan());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> text.b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> man;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isMan</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> man;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMan</span><span class="params">(<span class="type">boolean</span> man)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.man = man;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printUserInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(id);</span><br><span class="line">        System.out.println(man);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id, String name, <span class="type">boolean</span> man)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.man = man;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="多态polymorphism"><a href="#多态polymorphism" class="headerlink" title="多态polymorphism"></a>多态polymorphism</h2><p>同一种方法调用 不同对象行为完全不同</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220522144328.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;叫了一声&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;wangwang&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">seeDoor</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;see door&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;miaomiao&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPolym</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        animaCry(<span class="keyword">new</span> <span class="title class_">DOg</span>());</span><br><span class="line">        animalCry(<span class="keyword">new</span> <span class="title class_">Cat</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">animalCry</span><span class="params">(Animal a)</span>&#123;</span><br><span class="line">        a.shout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对象的转型casting"><a href="#对象的转型casting" class="headerlink" title="对象的转型casting"></a>对象的转型casting</h2><p>父类引用指向子类叫向上转型，属于自动</p><p>反之</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPolym</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        Animal animal=<span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">        animal.shout();</span><br><span class="line">        <span class="comment">//不能运行animal.seeDoor();需要强制转换</span></span><br><span class="line">        <span class="type">Dog</span> <span class="variable">d</span> <span class="operator">=</span>(Dog)animal;</span><br><span class="line">        d.seeDoor();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">animalCry</span><span class="params">(Animal a)</span>&#123;</span><br><span class="line">        a.shout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220522153115.png" alt></p><h1 id="Object类"><a href="#Object类" class="headerlink" title="Object类"></a>Object类</h1><p>所有类是Object的子类</p><h2 id="hashCode"><a href="#hashCode" class="headerlink" title="hashCode"></a>hashCode</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="toString返回地址"><a href="#toString返回地址" class="headerlink" title="toString返回地址"></a><strong>toString</strong>返回地址</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">tosting</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    String pwd;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;用户名&quot;</span>+name+<span class="string">&quot;密码&quot;</span>+pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">            tosting to=<span class="keyword">new</span> <span class="title class_">tosting</span>();</span><br><span class="line">        System.out.println(to.toString());</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220520221445.png" alt></p><h2 id="equals和"><a href="#equals和" class="headerlink" title="equals和=="></a>equals和==</h2><p>==代表对方是否相同，type和地址</p><p>equals()比较内容相同</p><p>equals()默认比较两个对象的hashcode</p><p>可以重写equals</p><h3 id="重写equals"><a href="#重写equals" class="headerlink" title="重写equals()"></a>重写equals()</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestObject</span> <span class="keyword">extends</span> <span class="title class_">Object</span>&#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String name;</span><br><span class="line">    String pwd;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TestObject</span><span class="params">(<span class="type">int</span> id,String name,String pwd)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">        <span class="built_in">this</span>.pwd=pwd;</span><br><span class="line">        <span class="built_in">this</span>.id=id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object o)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>==o)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(o==<span class="literal">null</span>||getclass()!=o.getClass())<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> id==that.id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;<span class="keyword">return</span> <span class="string">&quot;用户名:&quot;</span> +name+<span class="string">&quot;密码:&quot;</span>+pwd;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        TestObject t= <span class="keyword">new</span> <span class="title class_">TestObject</span>(<span class="number">1001</span>,<span class="string">&quot;zhangshan,&quot;</span><span class="number">123456</span>);</span><br><span class="line">        TestObject t2=<span class="keyword">new</span> <span class="title class_">TestObject</span>(<span class="number">1001</span>,<span class="string">&quot;zhangwu,&quot;</span><span class="number">123123123</span>);</span><br><span class="line">        System.out.println(t.equals(t2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="super"><a href="#super" class="headerlink" title="super"></a>super</h2><p>super可以看作直接父类对象的引用</p><p>在一个类中，若是构造方法第一行没有第哦啊用super或者this java默认调用</p><ul><li>在子类的方法中，访问父类的成员变量</li><li>在子类的成语方法中，访问父亲的成员方法</li><li>在子类的构造方法中访问父类的构造方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="抽象类和接口"><a href="#抽象类和接口" class="headerlink" title="抽象类和接口"></a>抽象类和接口</h1><p>抽象方法和抽象类</p><p><strong>抽象方法</strong> <em>**</em></p><p>使用abstract修饰方法 没有方法体 只有声明</p><p>定义是一种规范 就是告诉子类必须要给抽象方法具体实现</p><p><strong>抽象类</strong></p><p>包含抽象方法的类叫抽象类</p><p>通过抽象类可以严格限制子类的设计，使得子类之间梗通用</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220522160952.png" alt></p><h2 id="接口interface"><a href="#接口interface" class="headerlink" title="接口interface"></a>接口interface</h2><p>是一组规范，所以类要遵守</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h1><p>inner</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age=<span class="number">19</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> show&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ss&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="l类"><a href="#l类" class="headerlink" title="l类"></a>l类</h1><p>包装类 字符串类 时间处理相关类 其他类</p><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><p>wrapper class</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220625131814.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Integer i=Integer.valueOf(<span class="number">100</span>);<span class="comment">//java9推荐用法</span></span><br><span class="line">Integer j=<span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">100</span>);<span class="comment">//不推荐</span></span><br></pre></td></tr></table></figure><h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220625142630.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220625145743.png" alt></p><h3 id="error"><a href="#error" class="headerlink" title="error"></a>error</h3><p>程序无法处理错误比较严重</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220625153202.png" alt></p><h3 id="异常2声明异常-throws子句"><a href="#异常2声明异常-throws子句" class="headerlink" title="异常2声明异常 throws子句"></a>异常2声明异常 throws子句</h3><h1 id="正则表则语法规则"><a href="#正则表则语法规则" class="headerlink" title="正则表则语法规则"></a>正则表则语法规则</h1><h2 id="内容限定"><a href="#内容限定" class="headerlink" title="内容限定"></a>内容限定</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">String regex=<span class="string">&quot;[a]&quot;</span>;</span><br><span class="line"> String regex1=<span class="string">&quot;[a-z]&quot;</span>;</span><br><span class="line"> String regex2=<span class="string">&quot;[a-zA-Z0-9]&quot;</span>;</span><br><span class="line"> <span class="comment">//取反</span></span><br><span class="line"> String regex3=<span class="string">&quot;^ab&quot;</span>;</span><br><span class="line"> String content=<span class="string">&quot;a&quot;</span>;</span><br><span class="line"> String content1=<span class="string">&quot;A&quot;</span>;</span><br><span class="line"> String content2=<span class="string">&quot;c&quot;</span>;</span><br><span class="line"> System.out.println(content.matches(regex1));<span class="comment">//true</span></span><br><span class="line"> System.out.println(content1.matches(regex1));<span class="comment">//false</span></span><br><span class="line"> System.out.println(content1.matches(regex2));<span class="comment">//true</span></span><br><span class="line"> System.out.println(content2.matches(regex3));<span class="comment">//true</span></span><br></pre></td></tr></table></figure><h2 id="长度限定"><a href="#长度限定" class="headerlink" title="长度限定"></a>长度限定</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//正则中通过&#123;&#125;表示长度</span></span><br><span class="line"><span class="comment">//[a-z]&#123;5&#125;表示小写a-z而且长度必须为5</span></span><br><span class="line"><span class="comment">//[a-z]&#123;5，8&#125;表示小写a-z而且长度必须为5到8包括5，8</span></span><br><span class="line"><span class="comment">//[a-z]&#123;2,&#125;表示小写a-z而且长度最小长为2</span></span><br><span class="line"><span class="comment">//[a-z]&#123;5&#125;表示小写a-z而且长度必须为5</span></span><br></pre></td></tr></table></figure><h2 id="长度限定符号"><a href="#长度限定符号" class="headerlink" title="长度限定符号"></a>长度限定符号</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?&#123;0,1&#125;</span><br><span class="line">+&#123;1,&#125;</span><br><span class="line">*&#123;0,&#125;</span><br></pre></td></tr></table></figure><h2 id="预定义字符"><a href="#预定义字符" class="headerlink" title="预定义字符"></a>预定义字符</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/.com//Users\SYR\AppData\Roaming\Typora\typora-user-images\image-20220626221803976.png" alt="image-20220626221803976"></p><h2 id="正则表达式中组合定义"><a href="#正则表达式中组合定义" class="headerlink" title="正则表达式中组合定义"></a>正则表达式中组合定义</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//电话号码的正则</span><br><span class="line">\\d&#123;3,4&#125;-//必须字母开头 最少4最长8</span><br><span class="line">[a-z]&#123;1&#125;\\w&#123;3,8&#125;</span><br><span class="line">//电话号码的正则</span><br><span class="line">\\d&#123;3,4&#125;-</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330163928.png&quot; alt&gt;&lt;/p&gt;
&lt;h1 id=&quot;DOS&quot;&gt;&lt;a href=&quot;#DOS&quot; class=</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="java" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/java/"/>
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>日常分享</title>
    <link href="http://example.com/2022/02/16/%E6%97%A5%E5%B8%B8%E5%88%86%E4%BA%AB/"/>
    <id>http://example.com/2022/02/16/%E6%97%A5%E5%B8%B8%E5%88%86%E4%BA%AB/</id>
    <published>2022-02-16T12:35:32.000Z</published>
    <updated>2022-07-06T08:40:50.004Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202202162103524.png" alt></p><span id="more"></span><p>虽然说折磨黑苹果是快乐的事情，但是你选择了淘宝120元的服务。说实话，我这台黑苹果</p><p>是一体机戴尔optiplex5260，我高中的时候也试过很多个EFI，也没有成功，无奈选择了淘宝的黑苹果服务，师傅花了三四小时换EFI，最后终于弄成半完美。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">戴尔optiplex5260</span><br><span class="line">i58500</span><br><span class="line">uhd630</span><br><span class="line">三星DDR4 2666hz</span><br><span class="line"></span><br><span class="line">目前还有麦克风不能用，耳机只能用蓝牙以外都没有太大的问题了，xcode完美使用</span><br></pre></td></tr></table></figure><p>链接：<a href="https://pan.baidu.com/s/1ofmjPTdfuhRmyOi2owbIyw">https://pan.baidu.com/s/1ofmjPTdfuhRmyOi2owbIyw</a><br>提取码：yhc1</p><p>在mac上敲代码和win的体检不太一样，mac的idea多了些功能比如说符号。</p><p>xcode是纯英文，使用起来有些困难。</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202202162117482.png" alt></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202202162103524.png&quot; alt&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="生活趣闻" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB%E8%B6%A3%E9%97%BB/"/>
    
    
    <category term="黑苹果" scheme="http://example.com/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    <category term="闲谈" scheme="http://example.com/tags/%E9%97%B2%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>swift学习笔记</title>
    <link href="http://example.com/2022/01/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/swift%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/01/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/swift%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-01-21T13:16:51.000Z</published>
    <updated>2022-07-06T08:44:35.197Z</updated>
    
    <content type="html"><![CDATA[<p>乐，swift确实是一门好的语言，但是我恐怕没有时间学它</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;乐，swift确实是一门好的语言，但是我恐怕没有时间学它&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="swift" scheme="http://example.com/tags/swift/"/>
    
    <category term="ios" scheme="http://example.com/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>2021review</title>
    <link href="http://example.com/2022/01/17/%E5%AE%9A%E6%9C%9F%E6%80%BB%E7%BB%93/2021Review/"/>
    <id>http://example.com/2022/01/17/%E5%AE%9A%E6%9C%9F%E6%80%BB%E7%BB%93/2021Review/</id>
    <published>2022-01-17T15:35:02.000Z</published>
    <updated>2022-07-06T08:41:23.146Z</updated>
    
    <content type="html"><![CDATA[<p>创建了自己的博客这么久，对于大一上学期自己学习生活做一个简单的总结和记录学习和生活。</p><span id="more"></span><p>高考-&gt;被录取-&gt;入学-&gt;健翔桥两个月-&gt;沙河</p><h1 id="高考"><a href="#高考" class="headerlink" title="高考"></a>高考</h1><p>我在高中的时候最渴望的事情就是摆脱高中的各种约束和奇怪的规则，现在我确实离开了我的母校，但现在又有些怀念起我的母校了。</p><p>记得初入学的我是那么有朝气，对美好的高中生活有着很强烈的渴望。但是在疫情后被改变了。</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201191100004.jpg" style="zoom:33%;"></p><p>后来疫情缓解后，再次回到母校，一些原因让我对它，有些失望。直到我毕业典礼那天，我知道以往后我不会再次来到这熟悉的教室和操场了，不仅仅有些怀念起来了，这或许就是斯德哥尔摩效应吧。</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201806554.png" alt="临近高考前的夕阳"></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201806887.png" alt="おめでとう！"></p><p>高考我是在西城护国寺考的老实说吧，这几天给我留下了相当深刻的印象，忘不掉我和父亲在老旧街道走行，他为我讲述过往的荣誉与血泪。忘不掉亲自看见北京四中长什么样子。忘不掉的是那156中学。说起来也巧，我隔壁班就一位和我一起在156中学考试的小语种考生。</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201191133008.jpg" alt="我在156中学"><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201191134040.jpg" alt></p><h1 id="录取"><a href="#录取" class="headerlink" title="录取"></a>录取</h1><p>高考后等成绩是最焦虑的，老实说吧我看到成绩单那时候，真的傻了，考的是我我有史以来最差的一次（21北京数学和化学历年最难，而且日语也出现了十年未有的书信类）</p><p>本来信息科大是我的铺底学校，但为了保护志愿不被调剂，被迫将信息科大放到了志愿置顶。等录取是很漫长焦虑，当我拿到录取通知书那天，就像碇シンジ和渚カヲル在海边相遇那天。我万分惊喜，珍惜地拿着属于我荣誉。高中的血与泪在那天化为灰烬。</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201119585.png" alt="碇シンジと渚カヲル会った"></p><div class="box">我们的情人不过是随便借个名字，用幻想吹出来的肥皂泡……<br> 好了，收下吧！<br> 你可以假戏真做。<br> 我本来是无病呻吟，漫无目的地吐露爱情……但你是可以让漂泊不定的鸟儿于此的人。<br> 好了，收下吧。用毫无实际的雄辩<br> 你总有一天也会明白的……<br><br> 《西哈诺 德 贝热拉克》</div><h1 id="健翔桥"><a href="#健翔桥" class="headerlink" title="健翔桥"></a>健翔桥</h1><p>漫长的暑假过去了，我来到了健翔桥校区，它很小但是却很温馨。</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201191242985.png" style="zoom: 80%;"></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201191242514.png" alt></p><p>我很喜欢盘古大厦，每当我迷失在北四环的时候永远是它，作为了我们回到学校指路的灯塔。有时候在浓雾中，盘古大厦若隐若现，就像随时崩塌的样子。</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201128703.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201140459.png" alt></p><p>从学二走到教学楼，不到三两分钟。</p><p><del>我在健翔桥印象最深的是学哥学姐日日夜夜在阶梯教室奋斗自习，计算机学院拿着笔记本用着编译器敲代码的样子可以说是健翔桥的一道美丽的风景线了</del></p><p>后来我等到了心中早已期待很久的iFlab社团的招新，记得面试那天是北京入冬来第一场大雪!我是第一位面试的，面对学长的提问我确实慌张了，同时也对未来更加充满了期望。</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201191255258.png" alt="iFlab"></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201191256245.png" alt="ユキ"></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201134547.png" alt="北京初雪"></p><p>入社后，我接触了不少厉害的CS大佬，以及各种新生CS卷王。我还编了个笑话，我在电信二班认识的人，还不如未来转入计科班人多。<strong>（现在我已经没有转CS的想法了）</strong></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201135359.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201124855.png" alt="夕方に吹く風"></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201123852.png" style="zoom:80%;"></p><p>两个月很快就过去了，老实说吧，健翔桥虽然是八人间，但是我依然恋恋不舍，不想和优秀的学哥学姐离开。这一天还是来了。</p><h1 id="沙河"><a href="#沙河" class="headerlink" title="沙河"></a>沙河</h1><p>昌平是神奇的地方，我姑姑在这里上学，我父亲第一份工作就在这里，未来几年我也继续在昌平上学，每天的龙泽地铁总是会被挤满北漂和上班族，还记得一次做昌58来的学校，经过某一站的时候，人突然满了，这是比在北四环座公交车从来没有的感觉。</p><p>我在沙河又认识到了不少专业的强者，以及有思想的人。</p><p>2021年对我来说是挑战是机遇，虽然有很多失望的事情。</p><p>但是我希望我在2022年，尽量不让自己留下太多的遗憾。</p><p>2022年我的期望的目标</p><ul><li>交女朋友</li><li>自己用ARDUINO做个闹钟</li><li>学自己真正喜欢的</li><li>一定要学好英语！！！！</li></ul><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201142459.png" alt></p><p>我的朋友，如果你对2021年留有遗憾，对2022年充满期待，那么我会祝福你，在2022不留遗憾，成为自己所期待的那样。我们会在下一年的年终问题里，寻找你的答案。</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201201822383.png" alt="RE-TAKE的结局"></p><blockquote><p>人よ、幸福たれ！ ——《<em>素晴らしき日々</em>》</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;创建了自己的博客这么久，对于大一上学期自己学习生活做一个简单的总结和记录学习和生活。&lt;/p&gt;</summary>
    
    
    
    <category term="生活趣闻" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB%E8%B6%A3%E9%97%BB/"/>
    
    
    <category term="年度总结" scheme="http://example.com/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习笔记</title>
    <link href="http://example.com/2022/01/15/%E7%AE%97%E6%B3%95%E5%8A%9B%E6%89%A3/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://example.com/2022/01/15/%E7%AE%97%E6%B3%95%E5%8A%9B%E6%89%A3/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2022-01-15T06:11:27.000Z</published>
    <updated>2022-05-23T10:45:25.231Z</updated>
    
    <content type="html"><![CDATA[<p><code>Algorithms + Data Structures = Programs</code></p><span id="more"></span><p><a href="https://www.bilibili.com/video/BV1Fy4y1v7S8?p=2">数据结构与算法 严蔚敏 王卓_哔哩哔哩_bilibili</a></p><h1 id="一-导论"><a href="#一-导论" class="headerlink" title="一.导论"></a>一.导论</h1><h2 id="1-基本概念和术语"><a href="#1-基本概念和术语" class="headerlink" title="1.基本概念和术语"></a>1.基本概念和术语</h2><p>Data 数据<br>Data Element  数据元素<br>node节点<br>Data Ltem  数据项<br>Data Object数据对象</p><h2 id="2数据结构-Data-Structure"><a href="#2数据结构-Data-Structure" class="headerlink" title="2数据结构 Data Structure"></a>2数据结构 Data Structure</h2><p>数据结构包括以下三个部分</p><ol><li>数据结构之间的逻辑关系 也叫<strong>逻辑结构</strong></li><li>数据元素关系在计算机内存中的表示 也叫数据结构的<strong>物理结构</strong>或者数据的<strong>存储结构</strong></li><li>数据的<strong>运算和实现</strong> 即对数据结构元素可以施加操作也i及在对应存储结构的实现</li></ol><p>逻辑结构</p><h2 id="3-数据类型"><a href="#3-数据类型" class="headerlink" title="3.数据类型"></a>3.数据类型</h2><p>一些基本的数据结构可以用数据类型实现，如数组字符串等<br>而另一些常用的数据结构如栈队列 树图不能直接用数据类型表示</p><h3 id="抽象数据类型"><a href="#抽象数据类型" class="headerlink" title="抽象数据类型"></a>抽象数据类型</h3><p>可以用DSP三元组表示出来 D是数据对象 S是D上的关系集 P是对D的基本操作集</p><p><strong>定义格式</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Abstract Data Type 抽象数据类型名&#123;</span><br><span class="line">数据对象</span><br><span class="line">数据关系</span><br><span class="line">基本操作</span><br><span class="line">&#125;Abstract Data Type抽象数据名</span><br><span class="line"></span><br><span class="line">基本操作定义格式为</span><br><span class="line">基本操作名（参数表）</span><br><span class="line">初始条件《初始条件描述》</span><br><span class="line">操作结果《操作结果描述》</span><br><span class="line"></span><br><span class="line">参数表：赋值参数 职位操作提供输入值</span><br><span class="line">         引入参数&amp;打头 除可提供输入值外 还将返回操作结果</span><br></pre></td></tr></table></figure><h2 id="4算法"><a href="#4算法" class="headerlink" title="4算法"></a>4算法</h2><ul><li>有穷性 确定性 可行性 输入 输出</li></ul><p>算法的设计和要求</p><p>正确性 可读性 健壮性 高效性（鲁棒性）</p><h2 id="5-算法的分析"><a href="#5-算法的分析" class="headerlink" title="5.算法的分析"></a>5.算法的分析</h2><h3 id="1-时间效率"><a href="#1-时间效率" class="headerlink" title="1.时间效率"></a>1.时间效率</h3><p>算法的时间效率的度量</p><p>算法运行时间＝每条语句频度<em>语句执行一次时间</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">n*n矩阵相乘的算法</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n,i++)<span class="comment">//n+1次</span></span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)<span class="comment">//n（n+1）</span></span><br><span class="line">        c[i][j]=<span class="number">0</span>;<span class="comment">//n*n</span></span><br><span class="line">        <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;=n;k++)<span class="comment">//n*n*（n+1）</span></span><br><span class="line">            c[i][j]=c[i][j]+a[i][k]*b[k][j];<span class="comment">//n*n*n</span></span><br><span class="line"></span><br><span class="line">执行n*n*n</span><br><span class="line">    T（n）为<span class="number">2</span>n^<span class="number">3</span>+<span class="number">3</span>n^<span class="number">2</span>+<span class="number">2</span>n+<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>算法时间复杂度的渐进表示法</li></ul><p>比较算法比较我们仅仅比较数量级 </p><p>T1(n)=10*n^2和T2(n)=5n^3 O 前者好</p><ul><li><p>有一个辅助的f（n）使得当n无限大，T(N)/F(N)极限为不同为零的常熟</p><p>则称f（n）是t（n）的同数级函数 记作T(n)=O（f(n)）</p><p>称O（f(n)）为算法的渐进时间复杂度简称为<strong>时间复杂度</strong></p></li></ul><ul><li>F(n)=n^m+n^m-1…….则T(N)=o(N^M)</li></ul><ul><li>算法基本操作次数也和问题输入而不同</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">比如说</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n,i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]==e)<span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">最好只有一次执行</span><br><span class="line">最坏要执行n次</span><br><span class="line">    </span><br><span class="line">最坏时间复杂度：最坏情况下</span><br><span class="line">最好时间复杂度：最好情况下</span><br><span class="line">平均时间复杂度为O(n)</span><br></pre></td></tr></table></figure><ul><li>复杂的算法，可以分成几部分利用O的加乘法则</li><li>加法T(n)=T1(n)+T2(n)=O(f(n))+O(g(n))=O(max(f(n),g(n)))</li><li>乘法T(n)=T1(n)xT2(n)=O(f(n))xO(g(n))=O((f(n)xg(n))</li></ul><h3 id="2空间复杂度"><a href="#2空间复杂度" class="headerlink" title="2空间复杂度"></a><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201171023705.png" alt>2空间复杂度</h3><p>算法所要的存储空间度量</p><p><strong>S（n）=O（f（n））</strong></p><p>n为为问题的规模</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">将一维数组a的n个数逆序放到元素组</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n/<span class="number">2</span>;i++)&#123;</span><br><span class="line">    t=a[i];</span><br><span class="line">    a[i]=a[n-i<span class="number">-1</span>];</span><br><span class="line">    a[n<span class="number">-1</span>-i]=t;</span><br><span class="line">&#125;<span class="comment">//空间复杂度为O（1）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">b[i]=a[n<span class="number">-1</span>-i];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    a[i]=b[i];</span><br><span class="line"><span class="comment">//空间复杂度为O（n）</span></span><br></pre></td></tr></table></figure><h1 id="二-线性表linear-list"><a href="#二-线性表linear-list" class="headerlink" title="二.线性表linear list"></a>二.线性表linear list</h1><h1 id><a href="#" class="headerlink" title></a><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201171056127.png" alt></h1><h2 id="1线性表的定义和特点"><a href="#1线性表的定义和特点" class="headerlink" title="1线性表的定义和特点"></a>1线性表的定义和特点</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201171101474.png" alt></p><p><strong>例子</strong></p><p>如26英文字母 数据元素都是字母为线性</p><h3 id="线性表的逻辑特征"><a href="#线性表的逻辑特征" class="headerlink" title="线性表的逻辑特征"></a>线性表的逻辑特征</h3><p>在非空中有且仅有一个开始或者终端的结点，他没有前趋而仅有一个后续a2 或者没有后趋，而仅有一个直接前趋an-1</p><h3 id="案例引入"><a href="#案例引入" class="headerlink" title="案例引入"></a>案例引入</h3><p>一元多项式</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201171120452.png" alt></p><h2 id="2-线性表的类型定义"><a href="#2-线性表的类型定义" class="headerlink" title="2.线性表的类型定义"></a>2.线性表的类型定义</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201171200364.png" alt></p><p><strong>基本操作</strong></p><ul><li>lnitlist（&amp;L）构造一个空的线性表L</li><li>DestroyList（&amp;L）初始条件线性表已经有了 操作结果摧毁线性表</li><li>ClearList（&amp;L）初始条件线性表存在了 操作结果重置为空表</li><li>ListEmpty（L）初始条件 线性表存在 操作结果如果为空表为ture</li><li>ListLength（L）初始条件 线性表存在 操作结果返回L中数据元素个数</li><li>GetElem（L，i，&amp;e）初始太久存在 操作结果用e返回L中第i哥元素值</li><li>LocateElem（L，e，compare（））初始线性表存在，compare是数据元素判定函数  操作结果返回L中第一个与e满足compare的数据元素的位序若这样的数据元素不存在返回0</li><li>PriorElem(L,cur_e,&amp;pre_e)初始为L存在  操作结果cur_e为L的元素，不是第一个，则pre_e返回他的前驱，否则操作失败 pre_e没有意义</li><li>NextElem(L,cur_e,&amp;next_e)初始L存在，如果cur存在返回后继</li><li>Listinsert（&amp;L，i，e）L存在  L在第i个位置之前插入新的元素e，L的长度加1</li><li>ListDelete（&amp;L，i，&amp;e）L存在 删除L的第i个元素，用e返回，L减一。</li><li>ListTraversr（&amp;L，visited（））L存在  操作结果依次对线性表中每个元素调用visited（）</li></ul><h2 id="3-线性表的顺序表示和实现"><a href="#3-线性表的顺序表示和实现" class="headerlink" title="3.线性表的顺序表示和实现"></a>3.线性表的顺序表示和实现</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顺序表的类型定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    ElemType data[];<span class="comment">//*data为动态分配</span></span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">SqList L;</span><br><span class="line">L.data=(ElemType*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(ElemTAype)*M)</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  LIST_INTI_SIZE 100</span></span><br><span class="line"><span class="keyword">typedef</span><span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="type">int</span> elem[LIST_INTI_SIZE];</span><br><span class="line"><span class="type">int</span> length;</span><br><span class="line">&#125;Sqlist;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多项式的顺序存储结构类型定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 1000<span class="comment">//最大长度</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"><span class="type">float</span> p;</span><br><span class="line"><span class="type">int</span> e;</span><br><span class="line">&#125;Polynomial;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">Polynomial* elem;<span class="comment">//存储基地址//数组</span></span><br><span class="line"><span class="type">int</span> length;<span class="comment">//当前的项个数</span></span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图书表的顺序存储</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 1000</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"><span class="type">char</span> no[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> name[<span class="number">50</span>];</span><br><span class="line"><span class="type">float</span> price;</span><br><span class="line">&#125;book;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">book* elem;</span><br><span class="line"><span class="type">int</span> length;</span><br><span class="line">&#125;SqList;</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201222330628.png" alt><img src="/.com//Users\syr\AppData\Roaming\Typora\typora-user-images\image-20220122233150725.png" alt="image-20220122233150725"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;stdio.h&quot;    </span><br><span class="line">#include &quot;stdlib.h&quot;  </span><br><span class="line">#include &quot;math.h&quot;  </span><br><span class="line">#include &quot;time.h&quot;</span><br><span class="line">#define OK 1</span><br><span class="line">#define ERROR 0</span><br><span class="line">#define TRUE 1</span><br><span class="line">#define FALSE 0</span><br><span class="line">//#define OVERFLOW -2</span><br><span class="line">#define INFEASIBLE -1</span><br><span class="line">#define MAXSIZE 20   </span><br><span class="line">typedef char ElemType;</span><br><span class="line">typedef int Status;</span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">ElemType *elem;</span><br><span class="line">int length;</span><br><span class="line">&#125;SqList;</span><br><span class="line">//1.线性表的初始化</span><br><span class="line">Status InitList_Sq(SqList* L)</span><br><span class="line">&#123;</span><br><span class="line">//分配空间</span><br><span class="line">L-&gt;elem = (ElemType*)malloc(sizeof(ElemType) * MAXSIZE);</span><br><span class="line">//L-&gt;elem = new ElemType[MAXSIZE]; C++写法</span><br><span class="line">if (!L-&gt;elem)exit(OVERFLOW);//分配失败</span><br><span class="line">L-&gt;length = 0; return OK;//空表长度为零</span><br><span class="line">&#125;</span><br><span class="line">//2.摧毁线性表L</span><br><span class="line">void DestroyList(SqList* L)</span><br><span class="line">&#123;</span><br><span class="line">if (L-&gt;elem)</span><br><span class="line">free(L-&gt;elem);//delete L-&gt;elem;释放空间</span><br><span class="line">&#125;</span><br><span class="line">//3.清空线性表</span><br><span class="line">void ClearList(SqList* L)</span><br><span class="line">&#123;</span><br><span class="line">L-&gt;length = 0;//将线性表长度为0</span><br><span class="line">&#125;</span><br><span class="line">int GetLength(SqList* L)</span><br><span class="line">&#123;</span><br><span class="line">return (L-&gt;length);</span><br><span class="line">&#125;</span><br><span class="line">//4判断线性表为空</span><br><span class="line">int IsEmpty(SqList L)</span><br><span class="line">&#123;</span><br><span class="line">if (L.length == 0) return 1;</span><br><span class="line">else return 0;</span><br><span class="line">&#125;</span><br><span class="line">//5顺序表的取值</span><br><span class="line">int GetElem(SqList L, int i, ElemType&amp; e)</span><br><span class="line">&#123;</span><br><span class="line">if (i&lt;1 || i&gt;L.length) return ERROR;</span><br><span class="line">e = L.elem[i - 1]; return OK;</span><br><span class="line">&#125;</span><br><span class="line">//6插入</span><br><span class="line">Status Listlnsert_Sq(SqList* L, int i, ElemType e)</span><br><span class="line">&#123;</span><br><span class="line">int j; if (i&lt;1 || i&gt;L-&gt;length + 1)return ERROR;</span><br><span class="line">if (L-&gt;length == MAXSIZE) return ERROR;</span><br><span class="line">for (j = L-&gt;length; j &gt;= i - 1; j--)</span><br><span class="line">L-&gt;elem[j+1] = L-&gt;elem[j];</span><br><span class="line">L-&gt;elem[i - 1] = e; L-&gt;length++;</span><br><span class="line">return OK;</span><br><span class="line">&#125;</span><br><span class="line">//7删除</span><br><span class="line">Status ListDelete_Sq(SqList* L, int i)</span><br><span class="line">&#123;</span><br><span class="line">int j;</span><br><span class="line">if (i&lt;1 || i&gt;L-&gt;length) return ERROR;</span><br><span class="line">for (j = i; j &lt;= L-&gt;length; j++)</span><br><span class="line">L-&gt;elem[j - 1] = L-&gt;elem[j];</span><br><span class="line">L-&gt;length--; return OK;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">SqList L;</span><br><span class="line">InitList_Sq(&amp;L);</span><br><span class="line">GetLength(&amp;L);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优点</p><ul><li>存储量大 可以随机读取表中的元素</li></ul><p>缺点</p><ul><li>增删要移动大量元素 浪费存储空间 静态</li></ul><h2 id="4线性表的链式"><a href="#4线性表的链式" class="headerlink" title="4线性表的链式"></a>4线性表的链式</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201232213304.png" alt></p><ol><li>结点：数据元素的存储映像。由数据域和指针域</li><li>链表：N个结点由<strong>指针域</strong>组成链表 它是线性表的链式存储映像名称为线性表的链性存储</li></ol><h3 id="1-单链表"><a href="#1-单链表" class="headerlink" title="1.单链表"></a>1.单链表</h3><p>结点只有一个指针域的链表  </p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201232221651.png" alt></p><p>特点</p><ol><li>结点在存储器的位置是任意的，即逻辑上相邻的数据元素，在物理上不一定</li><li>访问时只能通过头指针进入链表，并通过每个结点的指针域依次向后，寻找第一个和最后一个结点</li></ol><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202201241140063.png" alt></p><h1 id="栈与队列"><a href="#栈与队列" class="headerlink" title="栈与队列"></a>栈与队列</h1><p>栈与队列是两个常用的</p><p>栈与队列是限定插入和删除只能在表的端点进行的<strong>线性表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Insert(S,n+1,x) Delete(S,n)</span><br><span class="line">Insert(Q,n+1,x) Delete(Q,1)</span><br></pre></td></tr></table></figure><ol><li>栈—后进先出</li></ol><p>使得栈成为有用的工具，数据转换，表达式，函数调用，递归，括号</p><ul><li>2队列—先进先出</li></ul><p>解决排队问题 脱机打印 多用户系统 等</p><h2 id="栈stack"><a href="#栈stack" class="headerlink" title="栈stack"></a>栈stack</h2><p>特殊的线性表，是限定在一段，通常是表尾，进行插入和删除操作的线性表</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220426215250.png" alt></p><h3 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h3><p>后进an top栈顶 表头a1为base</p><p>插入元素到栈顶叫入栈（压）push，反之为入栈（弹出）pop</p><h3 id="栈的定义"><a href="#栈的定义" class="headerlink" title="栈的定义"></a>栈的定义</h3><ol><li>定义：限定在表的一端进行插入和删除的运算线性表</li><li>逻辑结构：通线性表一对一的关系</li><li>存储结构：顺序表更常见</li><li>只能在栈顶运算</li><li>入栈和出栈函数</li></ol><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h4 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h4><p>十进制N想其他进制数d（二八十六）</p><p><strong>法则为：</strong>除以d倒取余</p><p>n=（n div d）*d + n mod d</p><p>div为整除运算 mod为求余</p><p><strong>例子</strong>十进制159转八进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">159/8=19...7</span><br><span class="line">19/8=2...3</span><br><span class="line">2/8=0..2</span><br><span class="line">（237）8</span><br></pre></td></tr></table></figure><h4 id="括号匹配的验证"><a href="#括号匹配的验证" class="headerlink" title="括号匹配的验证"></a>括号匹配的验证</h4><h4 id="表达式求值"><a href="#表达式求值" class="headerlink" title="表达式求值"></a>表达式求值</h4><p>操作数和运算符和界限符</p><p>为了实现表达式求值设置两个栈</p><p>OPTR寄存运算符 操作数栈OPND用于寄存运算数和运算结果</p><h3 id="栈的表示和操作"><a href="#栈的表示和操作" class="headerlink" title="栈的表示和操作"></a>栈的表示和操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ADK Stack&#123;</span><br><span class="line">数据对象D=&#123;ai|ai属于ElemSet&#125;</span><br><span class="line">数据关系R1=&#123;&lt;ai-1,ai&gt;&#125;</span><br><span class="line">an端为栈顶，a1为栈底</span><br><span class="line">初始化 进栈出栈 取栈顶等</span><br><span class="line"></span><br><span class="line">&#125;ADT Stack</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">InitStack(&amp;S)初始化操作 构造一个空栈S</span><br><span class="line">DestoryStack(&amp;S) 销毁栈操作</span><br><span class="line">初始条件S存在，结果销毁</span><br><span class="line"></span><br><span class="line">StackEmpty 判断是否为空</span><br><span class="line">S存在 空true 否为false</span><br><span class="line"></span><br><span class="line">StackLength(S)求栈的长度</span><br><span class="line">S存在 返回S的个数，即栈长度</span><br><span class="line"></span><br><span class="line">GetTop(S,&amp;e)去栈顶</span><br><span class="line">S存在且为空</span><br><span class="line">用e返回S的栈顶元素</span><br><span class="line"></span><br><span class="line">ClearStack清空</span><br><span class="line"></span><br><span class="line">Push(&amp;S,e)入栈</span><br></pre></td></tr></table></figure><p>顺序栈的实现，同一般线性表的顺序存完全相同</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220427101348.png" alt></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    SElemType *base;</span><br><span class="line">    SElemType *top;</span><br><span class="line">    <span class="type">int</span> stacksize</span><br><span class="line">&#125;Sqstack;</span><br></pre></td></tr></table></figure><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">InitStack</span><span class="params">(SqStack &amp;S)</span>&#123;</span><br><span class="line">    S.base=(SElemType*)<span class="built_in">malloc</span>(MAXSIZE*<span class="keyword">sizeof</span>(SElemType));</span><br><span class="line">    <span class="keyword">if</span>(!S.base)exiu(OBERFLOW);</span><br><span class="line">    S.top=S.base;</span><br><span class="line">    S.stacksize=MAXSIZE;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断是否为空</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">StackEmpty</span><span class="params">(SqStack S)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(S.top==S.base)<span class="keyword">return</span> TRUE;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顺序栈长度</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">StackLength</span><span class="params">(SqStack S)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> S.top-S.base;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>清空</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">ClearStack</span><span class="params">(Sqstack &amp;S)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(S.base)S,top=S.base;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>销毁</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">DestroyStack</span><span class="params">(Sqstack &amp;S)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.base)&#123;</span><br><span class="line">        delete S.base;</span><br><span class="line">        S.stacksize=;</span><br><span class="line">        S.base=S.top=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>入栈</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">Push</span> <span class="params">(SqStack &amp;S,SElemType e)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top-S.base==S.stacksize)<span class="keyword">return</span> ERROR;</span><br><span class="line">    *S.top=e;</span><br><span class="line">    S.top++;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出栈</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">Ppo</span><span class="params">(SqStack &amp;S,SElemType&amp;e)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(S.top==S.base)<span class="keyword">return</span> ERROEL;</span><br><span class="line">    E=*--s.TOP;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="链栈"><a href="#链栈" class="headerlink" title="链栈"></a>链栈</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">StackNode</span>&#123;</span></span><br><span class="line">    SElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">StackNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;StackNode,*LinkStack;</span><br><span class="line"></span><br><span class="line">LinkStack S;</span><br></pre></td></tr></table></figure><p>链表的初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InitStack</span><span class="params">(LinkStack &amp;S)</span>&#123;</span><br><span class="line">    S=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>入栈</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">Push</span><span class="params">(LinkStack &amp;S,SElemType e)</span>&#123;</span><br><span class="line">    p=new stacknoode;</span><br><span class="line">    p-&gt;data=e;</span><br><span class="line">    p-&gt;newt=S;</span><br><span class="line">    S=p;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出栈</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Status <span class="title function_">Pop</span><span class="params">(LinkStack&amp;S,SElemTyoe &amp;e)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S==<span class="literal">NULL</span>)<span class="keyword">return</span> ERROE;</span><br><span class="line">    e=s-&gt;data;</span><br><span class="line">    p=S;</span><br><span class="line">    S=S-&gt;next;</span><br><span class="line">    delete p;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="栈与递归"><a href="#栈与递归" class="headerlink" title="栈与递归"></a>栈与递归</h3><p>递归定义的函数 递归数据结构 递归解法</p><h2 id="队列queue"><a href="#队列queue" class="headerlink" title="队列queue"></a>队列queue</h2><p>先进先出FiFO</p><p>表一插入，在另一端表头删除</p><h3 id="队列的相关概念"><a href="#队列的相关概念" class="headerlink" title="队列的相关概念"></a>队列的相关概念</h3><ol><li>定义 头删尾插</li><li>逻辑结构 一对一先信标</li><li>循环和链队</li><li>之恶能在对手和队尾</li><li>入和出 队</li></ol><h1 id="树"><a href="#树" class="headerlink" title="树"></a>树</h1><h2 id="树的定义"><a href="#树的定义" class="headerlink" title="树的定义"></a>树的定义</h2><p>Tree是由包括零，多个结点的有限集，分为空树 </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;Algorithms + Data Structures = Programs&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>C++学习笔记</title>
    <link href="http://example.com/2022/01/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/CPP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/01/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/CPP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-01-12T11:52:47.000Z</published>
    <updated>2022-04-19T15:09:27.630Z</updated>
    
    <content type="html"><![CDATA[<p>C++的学习笔记，恐怕要22年暑假才能学完吧</p><span id="more"></span><h1 id="1-C-认识"><a href="#1-C-认识" class="headerlink" title="1.C++认识"></a>1.C++认识</h1><h2 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;hello world&quot;</span>&lt;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">&lt;</span><br></pre></td></tr></table></figure><p>因为一些事情，突然有了这样的创意。两人之间如果只用手机而且对方不看手机，来通过震动来传递简单的信息，我想到了用摩斯密码的短长可以用震动来代替，因此可以传达简单的信息，比如说测视力上下左右，就可以用摩斯密码来表示出来。<br>目前我打算学习java，先了解安卓的程序语言基础，然后再研究下。<br>2022/2/21</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;C++的学习笔记，恐怕要22年暑假才能学完吧&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="cpp" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/cpp/"/>
    
    
    <category term="cpp" scheme="http://example.com/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>通信学院期末C复习题</title>
    <link href="http://example.com/2021/12/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95C%E8%AF%AD%E8%A8%80%E5%A4%8D%E4%B9%A0%E9%A2%98/"/>
    <id>http://example.com/2021/12/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95C%E8%AF%AD%E8%A8%80%E5%A4%8D%E4%B9%A0%E9%A2%98/</id>
    <published>2021-12-16T08:12:14.000Z</published>
    <updated>2022-07-06T08:45:08.016Z</updated>
    
    <content type="html"><![CDATA[<p><strong>BISTU    通信学院2021C语言期末考试题</strong></p><p>每道题一定有多个写法，碍于时间我不能全部写出来，也没有这个能力，所以这些答案仅仅用于参考</p><p>因为写的时间紧所以可能有些小的错误<br>请多见谅</p><span id="more"></span><h1 id="A易"><a href="#A易" class="headerlink" title="A易"></a>A易</h1><p>A阶段中大多数都是简单的题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">主要的知识点为</span><br><span class="line">if，math.h里面的函数</span><br><span class="line">ASCII</span><br><span class="line">%d %f</span><br><span class="line">int char float等类型</span><br></pre></td></tr></table></figure><h2 id="1-温度转换"><a href="#1-温度转换" class="headerlink" title="1.温度转换"></a>1.温度转换</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112161614847.png" alt></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> f,c;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入华氏温度:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;f);</span><br><span class="line">    c=(<span class="number">5.0</span>/<span class="number">9</span>)*(f<span class="number">-32</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;转换成摄氏度是:%f\n&quot;</span>,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-BMl计算"><a href="#2-BMl计算" class="headerlink" title="2.BMl计算"></a>2.BMl计算</h2><p>输入身高（米）和体重（千克）计算 BMI 值，其中 BMI 值计算公式为，BMI = 体 重/身高^2。（实验一题目）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> bmi, h, w;</span><br><span class="line">    scanf_s(<span class="string">&quot;%f %f&quot;</span>, &amp;h, &amp;w);</span><br><span class="line">    bmi = w / (h * h);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f&quot;</span>, bmi);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-大写转小写"><a href="#3-大写转小写" class="headerlink" title="3.大写转小写"></a>3.大写转小写</h2><p>给定一个大写字母，要求用小写字母输出。提示：大写字母比小写字母的 ASCII 码 小 32。（第 3 章例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;a);</span><br><span class="line">    a=a+<span class="number">32</span>;<span class="comment">//ASCii中大写在前面</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-由小到大排列"><a href="#4-由小到大排列" class="headerlink" title="4.由小到大排列"></a>4.由小到大排列</h2><p>输入两个实数，按由小到大的顺序输出这两个数。（第 4 章例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">if</span>(a&lt;b)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&lt;%d&quot;</span>,a,b);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&lt;%d&quot;</span>,b,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-一元二次方程"><a href="#5-一元二次方程" class="headerlink" title="5.一元二次方程"></a>5.一元二次方程</h2><p>求 ax2+bx+c=0 方程的根。a,b,c 由键盘输入。需要在程序中进行判别，如果 b2- 4ac≥0，就计算并输出方程的两个实根，如果 b2-4ac&lt;0，就输出“此方程无实根” 的信息。（第 4 章例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span><span class="comment">//提供sqrt函数</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> a, b, c;</span><br><span class="line">    scanf_s(<span class="string">&quot;%f %f %f&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    <span class="type">float</span> data;</span><br><span class="line">    data = (b * b - <span class="number">4</span> * a * c);</span><br><span class="line">    <span class="keyword">if</span> (data &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;没有实数根&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (data == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;x=%f&quot;</span>, ((-b) / <span class="number">2</span> * a));</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;x1=%f x2=%f&quot;</span>, (<span class="built_in">sqrt</span>(data)) - b / <span class="number">2</span> * a, (-<span class="built_in">sqrt</span>(data)) - b / <span class="number">2</span> * a);</span><br><span class="line">    &#125;</span><br><span class="line">       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-计算三角形面积"><a href="#6-计算三角形面积" class="headerlink" title="6.计算三角形面积"></a>6.计算三角形面积</h2><p>给出三角形的三边长，求三角形面积。<br>这题可以通过海伦公式快速解题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> a, b, c;</span><br><span class="line">    <span class="type">float</span> p;</span><br><span class="line">    scanf_s(<span class="string">&quot;%f %f %f&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    p = (a + b + c) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (a + b &gt; c &amp;&amp; a + c &gt; b &amp;&amp; b + c &gt; a)</span><br><span class="line">    &#123; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%f&quot;</span>, <span class="built_in">sqrt</span>(p * (p - a) * (p - b) * (p - c)));</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;三角形不存在\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-判断是否为大写"><a href="#7-判断是否为大写" class="headerlink" title="7.判断是否为大写"></a>7.判断是否为大写</h2><p>输入一个字符，判别它是否为大写字母，如果是，将它转换成小写字母；如果不是， 不转换。然后输出最后得到的字符。（第 4 章例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 输入一个字符，判断它是否为大写字母，如果是，将它转换成小写字母，如果不是不转换</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ch);</span><br><span class="line"><span class="keyword">if</span>(ch &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">ch = ch + <span class="number">32</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-成绩等级"><a href="#8-成绩等级" class="headerlink" title="8.成绩等级"></a>8.成绩等级</h2><p>输入一个学生的成绩，使用 if else 语句输出该同学的成绩属于以下哪个等级。（实 验二） 60 分以下：不及格 60-70 分：及格 70-90 分：良好 90-100 分：优秀</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span>  score;</span><br><span class="line">    scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;score);</span><br><span class="line">    <span class="keyword">if</span> (score &gt;= <span class="number">90</span>) <span class="built_in">printf</span>(<span class="string">&quot;优\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt;= <span class="number">80</span> &amp;&amp; score &lt;= <span class="number">89</span>) <span class="built_in">printf</span>(<span class="string">&quot;良\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt;= <span class="number">70</span> &amp;&amp; score &lt;= <span class="number">79</span>) <span class="built_in">printf</span>(<span class="string">&quot;中\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (score &gt;= <span class="number">60</span> &amp;&amp; score &lt; <span class="number">69</span>) <span class="built_in">printf</span>(<span class="string">&quot;及格\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (score&lt;<span class="number">60</span>) <span class="built_in">printf</span>(<span class="string">&quot;不及格\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9国民生产"><a href="#9国民生产" class="headerlink" title="9国民生产"></a>9国民生产</h2><p>假如我国国民生产总值的年增长率为 7%，计算 10 年后我国国民生产总值与现在 相比增长多少百分比。计算公式为p=(1+r)^n</p><p>n为年 r为增长率</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> p,r,n;</span><br><span class="line">    r=<span class="number">0.07</span>;    </span><br><span class="line">    n=<span class="number">10</span>;</span><br><span class="line">    p=<span class="built_in">pow</span>(<span class="number">1</span>+r,n);   </span><br><span class="line">    <span class="comment">//pow(a,b)a的b次幂</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;p=%f\n&quot;</span>,p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-破解密码"><a href="#10-破解密码" class="headerlink" title="10.破解密码"></a>10.破解密码</h2><p>请编程序将“China”译成密码，密码规律是：用原来的字母后面的第 4 个字 母代替原来的字母。例如，字母“A”后面第 4 个字母是“E”，用“E”代替“A”。 字母表最后四个字母“WXYZ”，替代为“ABCD”。因此，“China”应译为“Glmre”。 （第 3 章课后习题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span>  c1=<span class="string">&#x27;C&#x27;</span>,c2=<span class="string">&#x27;h&#x27;</span>,c3=<span class="string">&#x27;i&#x27;</span>,c4=<span class="string">&#x27;n&#x27;</span>,c5=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">c1 = c1 + <span class="number">4</span>;</span><br><span class="line">c2 = c2 + <span class="number">4</span>;</span><br><span class="line">c3 = c3 + <span class="number">4</span>;</span><br><span class="line">c4 = c4 + <span class="number">4</span>;</span><br><span class="line">c5 = c4 + <span class="number">4</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c%c\n&quot;</span>, c1, c2, c3, c4, c5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B中"><a href="#B中" class="headerlink" title="B中"></a>B中</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">到这里就开始出现</span><br><span class="line">if while for switch等函数</span><br></pre></td></tr></table></figure><h2 id="11-闰年"><a href="#11-闰年" class="headerlink" title="11.闰年"></a>11.闰年</h2><p>典中典的题了</p><p>判断分两种情况，一个是能被400整除，一个是能被4整数但不能被100整除<br><strong>四年一闰,百年不闰    四百年再闰</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a%<span class="number">400</span>==<span class="number">0</span>||a%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;a%<span class="number">100</span>!=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="12-阶乘"><a href="#12-阶乘" class="headerlink" title="12.阶乘"></a>12.阶乘</h2><p>用 C 语言求 12!，并画出流程图。（第 5 章课后习题）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n, sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">        sum = sum * i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="13-判断位数"><a href="#13-判断位数" class="headerlink" title="13.判断位数"></a>13.<strong>判断位数</strong></h2><p>使用循环结构设计一个程序，用户从终端输入一个整数，输出其是几位整数。 （实验二）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, a;</span><br><span class="line">    scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">    <span class="keyword">while</span> (a &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        a = a / <span class="number">10</span>;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-逆转数字"><a href="#14-逆转数字" class="headerlink" title="14.逆转数字"></a>14.逆转数字</h2><p>从键盘输入一个四位的整数 num，将其个、十、百、千位倒序生成一个数字输 出。例如：输入 1234，输出 4321。（第 4 章课后习题）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a,b=<span class="number">0</span>;</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="keyword">while</span> (a&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">b = b * <span class="number">10</span> + a % <span class="number">10</span>;</span><br><span class="line">a = a / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="15-分段函数"><a href="#15-分段函数" class="headerlink" title="15.分段函数"></a>15.分段函数</h2><p>y=x  (x<1) 2x-1(1<="x<10)" 3x-11(x>10)</1)></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    scanf_s(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">1</span> &lt;= x &amp;&amp; x &lt; <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="number">2</span>*x - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x &gt;= <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="number">3</span>*x - <span class="number">11</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="16-流程控制"><a href="#16-流程控制" class="headerlink" title="16.流程控制"></a>16.流程控制</h2><p>用 switch 语句处理菜单命令。在许多应用程序中，用菜单对流程进行控制，例 如从键盘输入一个字符个’A’或’a’字符，就会执行 A 操作，输入一个’B’或’b’字符， 就会执行 B 操作。A 操作和 B 操作可以用<strong>自定义函数</strong>的形式实现，例如 A 操作是 执行加法计算，B 操作是执行减法计算。（第 4 章例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x-y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ch);</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">   <span class="keyword">switch</span>(ch)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,add(a,b));<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,min(a,b));<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:<span class="built_in">putchar</span>(<span class="string">&#x27;\a&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="17-高斯算法"><a href="#17-高斯算法" class="headerlink" title="17.高斯算法"></a>17.高斯算法</h2><p> 1+2+3+…+100。并画出流程图。（第 5 章例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum=sum+i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="18-pi"><a href="#18-pi" class="headerlink" title="18.pi"></a>18.pi</h2><p>用公式 π/4≈1−1/3+1/5−1/7+⋯求 π 的近似值，直到发现某一项的绝对值小 于 10-6为止(该项不累加)。（第 5 章例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span> </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> a=<span class="number">0.0</span>,b=<span class="number">1.0</span>,t=<span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;<span class="built_in">fabs</span>(b)&gt;<span class="number">1e-6</span>;i+=<span class="number">2</span>)<span class="comment">//fabs函数为double型的绝对值，1e-6表示1*10的-6次方</span></span><br><span class="line">&#123;</span><br><span class="line">a=a+b;</span><br><span class="line">t=-t;</span><br><span class="line">b=t/i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;PI=%f\n&quot;</span>,<span class="number">4</span>*a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="19-e"><a href="#19-e" class="headerlink" title="19.e"></a>19.e</h2><p>数学常量 e 的值可以用一个无穷级数表示：e = 1 + 1/1! + 1/2! + 1/3!  +……。编写程序，用下面的公式计算 e 的近似值：1 + 1/1! +1/2! + 1/3!  +……+ 1/n!，其中 n 是用户输入的整数。请给出 n=50 时，e 的近似值。（循环 嵌套，pi 值程序的提升</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n; scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">double</span> e=<span class="number">1</span>,sum=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum * j;</span><br><span class="line">&#125;</span><br><span class="line">e = (<span class="number">1</span>/sum) + e;</span><br><span class="line">sum = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>, e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="20-百钱百鸡"><a href="#20-百钱百鸡" class="headerlink" title="20.百钱百鸡"></a>20.百钱百鸡</h2><p>百钱百鸡：中国古代数学家张丘建在他的《算经》中提出了一个著名的“百钱 百鸡问题”：一只公鸡值五钱，一只母鸡值三钱，三只小鸡值一钱，现在要用百钱 买百鸡，请问公鸡、母鸡、小鸡各多少只？（第 5 章例题）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//穷举法</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;=<span class="number">100</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">100</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">100</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">5</span> * i + <span class="number">3</span> * j + k / <span class="number">3</span> == <span class="number">100</span> &amp;&amp; k % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; i + k + j == <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;公鸡%d 母鸡%d 小鸡%d\n&quot;</span>, i, j, k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="21-捐钱"><a href="#21-捐钱" class="headerlink" title="21.捐钱"></a>21.捐钱</h2><p>在全系 1000 名学生中举行慈善募捐，当总数达到 10 万元时就结束，统计此 时捐款的人数以及平均每人捐款的数目。（第 5 章例题）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, a, counter = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入每人捐款的钱数：\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">sum += a;</span><br><span class="line">counter++;</span><br><span class="line"><span class="keyword">if</span> (sum &gt;= <span class="number">100000</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, counter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="22-整除"><a href="#22-整除" class="headerlink" title="22.整除"></a>22.整除</h2><p>要求输出 100～200 之间的不能被 3 整除的数。（第 5 章例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">100</span>;i&lt;=<span class="number">200</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="23-质数（素数）"><a href="#23-质数（素数）" class="headerlink" title="23.质数（素数）"></a>23.质数（素数）</h2><p>判断是不是质数分两种情况</p><p>一个是1它不是质数<br>如果大于1不能被2到n-1整除它是素数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, n;</span><br><span class="line">    scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;不是\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i == n)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;是\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;不是\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="24-阶乘"><a href="#24-阶乘" class="headerlink" title="24.阶乘"></a>24.阶乘</h2><p>编程求 1！+2！+3！+4！+……+12！。（！为阶乘符号）（第 5 章课后习题</p><p>类似12题</p><h2 id="25-水仙花数"><a href="#25-水仙花数" class="headerlink" title="25.水仙花数"></a>25.水仙花数</h2><p>输出所有的水仙水仙花数花数，所谓水仙花数就是一个 3 位数，其各位数字立方和等于 该数本身。例如 153 是水仙花数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c,i;<span class="comment">//百位十位个位</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">100</span>; i &lt; <span class="number">1000</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a = i / <span class="number">100</span>; </span><br><span class="line">        b = i / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">        c = i % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (i == a * a * a + b * b * b + c * c * c)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="26-一道数学题"><a href="#26-一道数学题" class="headerlink" title="26.一道数学题"></a>26.一道数学题</h2><p>一个球从 100 米高度落下，每次落地后跳回原高度的一半，再落下，编程求第 10 次落地时，球共经过的距离为多少米？第 10 次落地后的反C弹高度是多少米？ （第 5 章课后习题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> gao=<span class="number">100.0</span>;</span><br><span class="line">    <span class="type">double</span> sum;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        gao=gao/<span class="number">2</span>;</span><br><span class="line">        sum=sum+gao*<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f %f&quot;</span>,gao,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="27-依次找到最大数"><a href="#27-依次找到最大数" class="headerlink" title="27.依次找到最大数"></a>27.依次找到最大数</h2><p>编写程序，找出用户输入的一串数中的最大数。程序需要提示用户一个一个地 输入数。当用户输入 0 或者负数时，程序必须显示出已输入的最大非负数。（循环、 输入函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">例</span><br><span class="line">Enter a number:60 Enter a number:78.5 Enter a number:1203 Enter a number:100</span><br><span class="line"></span><br><span class="line">The largest number entered was 1203</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> max = <span class="number">0</span>, n = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">if</span> (max &lt; n)</span><br><span class="line">&#123;</span><br><span class="line">max = n;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (n &gt; <span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, max);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="28-杨辉三角形"><a href="#28-杨辉三角形" class="headerlink" title="28.杨辉三角形"></a>28.杨辉三角形</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">6</span> <span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">10</span> <span class="number">10</span> <span class="number">5</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从第二行开始，每一个数=该数上面的数+该数上面数的前一个数，即：a[ i ][ j ]=a[ i-1 ][ j ]+a[ i-1 ][ j-1 ]</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, j, n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>][<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入行数：&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">a[i][<span class="number">0</span>] = <span class="number">1</span>;                                     <span class="comment">//每一行第一个数为1</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)                            </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">a[i][j] = a[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i - <span class="number">1</span>][j];    <span class="comment">//从每一行第二个数开始循环</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d   &quot;</span>, a[i][j]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);                                   <span class="comment">//输出（每一行输出完换行）</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="29-四个数字空格"><a href="#29-四个数字空格" class="headerlink" title="29.四个数字空格"></a>29.四个数字空格</h2><p>写一个函数，输入一个 4 位数字，要求输出这 4 个数字字符，但是每两个数字 间空一个空格。如输入 1990，应输出“1 9 9 0”。（第 7 章课后习题）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">prnnum</span><span class="params">(<span class="type">int</span> s)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    n=s % <span class="number">10</span>;</span><br><span class="line">    s/=<span class="number">10</span>;</span><br><span class="line">    prnnum(s);<span class="comment">//递归</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>,n);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    prnnum(<span class="number">5432</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="30-冒泡法"><a href="#30-冒泡法" class="headerlink" title="30.冒泡法"></a>30.冒泡法</h2><p>写一个函数，用“起泡法”对输入的 10 个字符按由小到大的顺序排序。（</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">qipaofa</span><span class="params">(<span class="type">int</span> a[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">10</span>-i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> swap;</span><br><span class="line">                swap=a[j];</span><br><span class="line">                a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">                a[j+<span class="number">1</span>]=swap;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="31-十六进制"><a href="#31-十六进制" class="headerlink" title="31.十六进制"></a>31.十六进制</h2><p>写一个函数，输入一个十六进制数，输出相应的十进制数。（第 7 章课后习题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">xtod</span><span class="params">(<span class="type">int</span> x)</span>;       </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%x&quot;</span>, &amp;i);           </span><br><span class="line">    xtod(i);                  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">xtod</span><span class="params">(<span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C难"><a href="#C难" class="headerlink" title="C难"></a>C难</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">**到这里后大多就接触到数组以及指针和函数结构体等重量级**</span><br><span class="line"></span><br><span class="line">**难度比较大**</span><br></pre></td></tr></table></figure><h2 id="32-打印字符串"><a href="#32-打印字符串" class="headerlink" title="32.打印字符串"></a>32.打印字符串</h2><p>编写一个函数，接受 3 个参数：一个字符和两个整数。字符参数是待打印的字 符，第 1 个整数指定一行中打印字符的次数，第 2 个整数指定打印字符的行数。编 写一个调用此函数的程序。（函数、循环、字符变量）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">Enter a <span class="title function_">character</span> <span class="params">(# to quit)</span>: s</span><br><span class="line">Enter number of columns and number of rows: 5 2</span><br><span class="line">sssss</span><br><span class="line">sssss</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">hanshu</span><span class="params">(<span class="type">char</span> c, <span class="type">int</span> n, <span class="type">int</span> m)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line">scanf_s(<span class="string">&quot;%c&quot;</span>, &amp;c);</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">hanshu(c, n, m);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="33-最大小之差"><a href="#33-最大小之差" class="headerlink" title="33.最大小之差"></a>33.最大小之差</h2><p>编写一个函数，返回存储在 double 类型数组中的最大值和最小值的差值，并 在一个简单的程序中调用测试该函数。（函数、一维数组、数组作为函数参数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">max_min</span><span class="params">(<span class="type">double</span> a[<span class="number">3</span>])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> min=<span class="number">9999999</span>,max=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; min)</span><br><span class="line">        &#123;</span><br><span class="line">            min = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[i]&gt;max)</span><br><span class="line">        &#123;</span><br><span class="line">            max = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max - min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">3</span>]=&#123;<span class="number">234.0</span>,<span class="number">324.0</span>,<span class="number">5.4</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f&quot;</span>, max_min(a));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="35-数组相加"><a href="#35-数组相加" class="headerlink" title="35.数组相加"></a>35.数组相加</h2><p>编写一个函数，把两个数组中相对应的元素相加，然后把结果储存到第 3 个数 组中。也就是说，如果数组 1 中包含的值是 2、4、5、8,数组 2 中包含的值是 1、 0、4、6，那么该函数把 3、4、9、14 赋给第 3 个数组。函数接受 3 个数组名和一 个数组大小。在一个简单的程序中调用测试该函数。（函数、一维数组、数组作为函 数参数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> b[], <span class="type">int</span> c[])</span><span class="comment">//两个数组相加</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">c[i] = a[i] + b[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="type">int</span> b[<span class="number">5</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="type">int</span> c[<span class="number">5</span>];</span><br><span class="line">add(a, b, c);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="36-数组扩大"><a href="#36-数组扩大" class="headerlink" title="36.数组扩大"></a>36.数组扩大</h2><p>编写一个程序，声明一个 int 类型的 3×5 二维数组，并用合适的值初始化它。 该程序打印数组中的值，然后各值翻倍(即是原值的 2 倍)，并显示出各元素的新值。 编写一个函数显示数组的内容，再编写一个函数把各元素的值翻倍。这两个函数都 以数组名和行数作为参数。（函数、二维数组、数组作为函数参数，实验三</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a[][<span class="number">5</span>], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">a[i][j] = a[i][j] * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> a[][<span class="number">5</span>], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">5</span>] = &#123;</span><br><span class="line">&#123;<span class="number">21</span>,<span class="number">321</span>,<span class="number">31</span>,<span class="number">23</span>,<span class="number">34</span>,&#125;,</span><br><span class="line">&#123;<span class="number">34</span>,<span class="number">324</span>,<span class="number">2343</span>,<span class="number">24</span>,<span class="number">423</span>&#125;,</span><br><span class="line">&#123;<span class="number">23</span>,<span class="number">432</span>,<span class="number">432</span>,<span class="number">4</span>,<span class="number">43</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;原来的\n&quot;</span>);</span><br><span class="line">print(a, <span class="number">3</span>);</span><br><span class="line">add(a, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">print(a, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="37-返回最大下标"><a href="#37-返回最大下标" class="headerlink" title="37.返回最大下标"></a>37.返回最大下标</h2><p>编写一个函数，返回储存在 int 类型数组中的最大值；编写一个函数，返回储 存在 double 类型数组中最大值的下标；编写一个函数，把 double 类型数组中的 数据倒序排列。在一个简单的程序中调用并测试这三个函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">funtion_1</span><span class="params">(<span class="type">int</span> funtion1[])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">funtion_1</span><span class="params">(<span class="type">int</span> funtion1[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第一个函数\n&quot;</span>);</span><br><span class="line"><span class="type">int</span> max = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (funtion1[i]&gt;max)</span><br><span class="line">&#123;</span><br><span class="line">max = funtion1[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, max);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">funtion_2</span><span class="params">(<span class="type">double</span> funtion2[])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">funtion_2</span><span class="params">(<span class="type">double</span> funtion2[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第二个函数\n&quot;</span>);</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> aa = funtion2[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (funtion2[i] &gt; aa) &#123;</span><br><span class="line">aa = funtion2[i];</span><br><span class="line">k = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, k+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">funtion_3</span><span class="params">(<span class="type">double</span> funtion3[])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">funtion_3</span><span class="params">(<span class="type">double</span> funtion3[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第三个函数\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f \n&quot;</span>,funtion3[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> funtion1[<span class="number">5</span>] = &#123; <span class="number">5</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">9</span> &#125;;</span><br><span class="line"><span class="type">double</span> funtion2[<span class="number">5</span>] = &#123; <span class="number">1.0</span>,<span class="number">6.0</span>,<span class="number">3.0</span>,<span class="number">7.0</span>,<span class="number">9.9</span> &#125;;</span><br><span class="line"><span class="type">double</span> funtion3[<span class="number">5</span>] = &#123; <span class="number">1.0</span>,<span class="number">2.0</span>,<span class="number">3.0</span>,<span class="number">4.0</span>,<span class="number">8.0</span>&#125;;</span><br><span class="line">funtion_1(funtion1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">funtion_2(funtion2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">funtion_3(funtion3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="38-多功能数组"><a href="#38-多功能数组" class="headerlink" title="38.多功能数组"></a>38.多功能数组</h2><p>编写一个程序，提示用户输入 3 组数，每组数包含 5 个 double 类型的数（假 设用户都正确地响应，不会输入非数值数据）。该程序应完成下列任务。</p><p> a.把用户输入的数据储存在 3×5 的数组中 </p><p>b.计算每组(5 个)数据的平均值</p><p> c.计算所有数据的平均值</p><p> d.找出这 15 个数据中的最大值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sc_anf</span><span class="params">(<span class="type">double</span> a[][<span class="number">5</span>],<span class="type">int</span> n)</span><span class="comment">//输入函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> val;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">scanf_s(<span class="string">&quot;%lf&quot;</span>, &amp;val);</span><br><span class="line">a[i][j] = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">average_zu</span><span class="params">(<span class="type">double</span> a[][<span class="number">5</span>], <span class="type">int</span> n)</span><span class="comment">//每组的平均数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> av_zu=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">av_zu = av_zu + a[i][j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">av_zu = av_zu / <span class="number">5</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, av_zu);</span><br><span class="line">av_zu = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">average_quanbu</span><span class="params">(<span class="type">double</span> a[][<span class="number">5</span>], <span class="type">int</span> n)</span><span class="comment">//所有的平均数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> av_zu=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">av_zu = av_zu + a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> av_zu / <span class="number">15</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">max</span><span class="params">(<span class="type">double</span> a[][<span class="number">5</span>], <span class="type">int</span> n)</span><span class="comment">//最大</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> max = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][j] &gt; max)</span><br><span class="line">&#123;</span><br><span class="line">max = a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, max);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">3</span>][<span class="number">5</span>];</span><br><span class="line">    sc_anf(a, <span class="number">3</span>);</span><br><span class="line">average_zu(a, <span class="number">3</span>);</span><br><span class="line">average_quanbu(a, <span class="number">3</span>);</span><br><span class="line"><span class="comment">/*for (int i = 0; i &lt; 3; i++)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">for (int j = 0; j &lt; 5; j++)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">printf(&quot;%f\n&quot;, a[i][j]);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">max(a, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="39-平均数等计算"><a href="#39-平均数等计算" class="headerlink" title="39.平均数等计算"></a>39.平均数等计算</h2><p>编写程序读入一个整数数组，用于保存 5 个学生的课程成绩，然后用函数调用 的形式实现课程的平均分、最高分和最低分的计算。（数组、循环</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">hanshu</span><span class="params">(<span class="type">int</span> a[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> max = <span class="number">-1</span>, min = <span class="number">999</span>;</span><br><span class="line"><span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum + a[i];</span><br><span class="line"><span class="keyword">if</span> (a[i]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a[i]&gt;max)</span><br><span class="line">&#123;</span><br><span class="line">max=a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;课程平均分是：%.2f 最高分是：%d 最低分是 %d&quot;</span>, sum / <span class="number">5</span>, max, min);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> chengji[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入%d位同学的成绩;&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;chengji[i]);</span><br><span class="line">&#125;</span><br><span class="line">hanshu(chengji);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="40-指针数组"><a href="#40-指针数组" class="headerlink" title="40.指针数组"></a>40.指针数组</h2><p>编写一个程序，输入月份号，输出该月的英文月名。例如，输入 3，输出“March”， 要求按照指针数组处理。（第 8 章课后习题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> *p[<span class="number">12</span>] = &#123;<span class="string">&quot;January&quot;</span>,<span class="string">&quot;February&quot;</span>,<span class="string">&quot;March&quot;</span>,<span class="string">&quot;April&quot;</span>,<span class="string">&quot;May&quot;</span>,<span class="string">&quot;June&quot;</span>,<span class="string">&quot;July&quot;</span>,<span class="string">&quot;August&quot;</span>,<span class="string">&quot;September&quot;</span>,<span class="string">&quot;October&quot;</span>,<span class="string">&quot;November&quot;</span>,<span class="string">&quot;December&quot;</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入月份：\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;英文是：%s\n&quot;</span>,*(p + n - <span class="number">1</span>));<span class="comment">//因为*(p)z</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="41-相反顺序"><a href="#41-相反顺序" class="headerlink" title="41.相反顺序"></a>41.相反顺序</h2><p>编写一个程序，将数组 a 中 n 个整数按相反顺序存放，需使用指针变量作为实 参。（第 8 章课程例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">xiangfan</span><span class="params">(<span class="type">int</span> a[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span>* p, * q, tmp;</span><br><span class="line">    <span class="keyword">for</span> (p = a, q = a + <span class="number">9</span>; p &lt; q; ++p, --q) </span><br><span class="line">    &#123;</span><br><span class="line">        tmp = *p;</span><br><span class="line">        *p = *q;</span><br><span class="line">        *q = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (p = a; p &lt; a + <span class="number">10</span>; ++p)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    xiangfan(a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="42-复制字符串"><a href="#42-复制字符串" class="headerlink" title="42.复制字符串"></a>42.复制字符串</h2><p>[编写一个程序，将字符串 a 复制为字符串 b，然后输出字符串 b。要求使用指 针变量处理。（第 8 章课程例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">strcpy</span><span class="params">(<span class="type">char</span>* a, <span class="type">char</span>* b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> ((*b++ = *a++) != <span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">10</span>] = <span class="string">&quot;love you&quot;</span>;</span><br><span class="line">    <span class="type">char</span> b[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="43-输出结构体"><a href="#43-输出结构体" class="headerlink" title="43.输出结构体"></a>43.输出结构体</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">把一个学生的信息(包括学号、姓名、性别、住址)放在一个结构体变量中，然后</span><br><span class="line">输出这个学生的信息。（第 <span class="number">9</span> 章课程例题</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MyStruct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> xuehao;</span><br><span class="line"><span class="type">char</span> name[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> sex[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> zhizhu[<span class="number">100</span>];</span><br><span class="line">&#125;MyStruct = &#123; <span class="number">20210000</span>,<span class="string">&quot;syr&quot;</span>,<span class="string">&quot;nan&quot;</span>,<span class="string">&quot;beijing&quot;</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, MyStruct.xuehao);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, MyStruct.name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, MyStruct.sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, MyStruct.zhizhu);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="44-民主选票"><a href="#44-民主选票" class="headerlink" title="44.民主选票"></a>44.民主选票</h2><p>结构体数组：有 3 个候选人，每个选民只能投票选一人，要求编一个统计选票 的程序，先后输入被选人的名字，最后输出各人得票结果（第 9 章课程例题）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PEOPLE 10</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person</span>                            </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];                         </span><br><span class="line">    <span class="type">int</span> count;                               </span><br><span class="line">&#125;people[<span class="number">3</span>] = &#123; <span class="string">&quot;SYR&quot;</span>,<span class="number">0</span>,<span class="string">&quot;LCJ&quot;</span>,<span class="number">0</span>,<span class="string">&quot;WJL&quot;</span>,<span class="number">0</span> &#125;;   </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="type">char</span> people_name[<span class="number">20</span>];                </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= PEOPLE; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        scanf_s(<span class="string">&quot;%s&quot;</span>, &amp;people_name,<span class="number">20</span>);            </span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(people_name, people[j].name) == <span class="number">0</span>) <span class="comment">//strcmp(a,b)如果a和b字符相同返回0</span></span><br><span class="line">                people[j].count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s:%d\n&quot;</span>, people[i].name, people[i].count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="46-结构体指针"><a href="#46-结构体指针" class="headerlink" title="46.结构体指针"></a>46.结构体指针</h2><p>有 3 个学生的信息，放在结构体数组中，要求输出全部学生的信息。要求使用 <strong>结构体指针</strong>有关知识。（第 9 章课程例题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stduents</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> sex[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stduents</span> <span class="title">st</span>[3] =</span> &#123;&#123;<span class="string">&quot;syr&quot;</span>,<span class="string">&quot;nan&quot;</span>,<span class="number">19</span>,&#125;,&#123;<span class="string">&quot;lcj&quot;</span>,<span class="string">&quot;nv&quot;</span>,<span class="number">19</span>&#125;,&#123;<span class="string">&quot;wjl&quot;</span>,<span class="string">&quot;nv&quot;</span>,<span class="number">19</span>&#125;&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stduents</span>* <span class="title">p</span>;</span></span><br><span class="line"><span class="comment">//*p = st[0];</span></span><br><span class="line"><span class="keyword">for</span> (p=st;p&lt;st+<span class="number">3</span>; p++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s  %s   %d\n&quot;</span>, p-&gt;name,p-&gt;sex, p-&gt;age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D难"><a href="#D难" class="headerlink" title="D难"></a>D难</h1><p><strong>到这里后就开始对指针和结构体进一步深入学习</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">到这里应该会灵活运用指针来修改结构体数</span><br></pre></td></tr></table></figure><h2 id="47-用指针排序"><a href="#47-用指针排序" class="headerlink" title="47.用指针排序"></a>47.用指针排序</h2><p>编写一个程序，用指针方法对 10 个整数按由大到小顺序排序，要求使用选择 排序法。（指针、数组、排序算法）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">paixu</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>], * p, i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    paixu(a, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">paixu</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, temp;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - <span class="number">1</span> - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                temp = a[j];</span><br><span class="line">                a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">                a[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="48-平方排序"><a href="#48-平方排序" class="headerlink" title="48.平方排序"></a>48.平方排序</h2><p>给定一个按非递减顺序排序的整数数组 A，返回每个数字的平方组成的新数组， 要求也按非递减顺序排序。要求用函数实现。（函数、一维数组、数组作为函数参数， 排序算法</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">输入：<span class="number">-4</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">10</span></span><br><span class="line">输出：<span class="number">0</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">100</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">-5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">-9</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="type">int</span> b[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">b[i] = a[i] * a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>-i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (b[j] &gt; b[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> swap;</span><br><span class="line">swap = b[j];</span><br><span class="line">b[j] = b[j + <span class="number">1</span>];</span><br><span class="line">b[j + <span class="number">1</span>] = swap;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="49-结构体的IO"><a href="#49-结构体的IO" class="headerlink" title="49.结构体的IO"></a>49.结构体的IO</h2><p>编写一个函数 print，打印一个学生的成绩数组，该数组有 5 个学生的数据记 录，每个记录包括 num，nam，score[3]，用 input 函数输入这些记录，用 print 函数输出这些记录。（第 9 章例题）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> score[<span class="number">3</span>];</span><br><span class="line">&#125;stu[<span class="number">5</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> student* stu1)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="keyword">struct</span> student* stu1)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    input(stu);</span><br><span class="line">    print(stu);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="keyword">struct</span> student *stu1)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, n = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请依次输入学生信息：\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No.&quot;</span>);</span><br><span class="line">        scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;stu[i].num);</span><br><span class="line">        scanf_s(<span class="string">&quot;%s&quot;</span>, stu[i].name, <span class="number">20</span>);</span><br><span class="line">        scanf_s(<span class="string">&quot; %d %d %d&quot;</span>,&amp;stu[i].score[<span class="number">0</span>], &amp; stu[i].score[<span class="number">1</span>], &amp;stu[i].score[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> student *stu1)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;No.%d   %s    %d  %d  %d\n&quot;</span>, stu1[i].num, stu1[i].name, stu1[i].score[<span class="number">0</span>], stu1[i].score[<span class="number">1</span>], stu1[i].score[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="50-难"><a href="#50-难" class="headerlink" title="50.难"></a>50.难</h2><p>用指针实现以下程序，输入一个字符串，包括数字和非数字字符，例如： abddf90333?&lt;&gt;2308nfdiufoien8dsuf。其中连续的数字作为一个整数，依次放入一 个数组 a 中，例如 90333 放在 a[0]中，2308 放在 a[1]中……统计一共出现了多少个整 数，并输出这些整数。（第 8 章课后习题）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这题我写错了，有时间我再改改</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">st</span><span class="params">(<span class="type">char</span>* str)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (*str != <span class="string">&#x27;\0&#x27;</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*str&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp; *str &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, *str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*if (*str != &#x27;0&#x27; &amp;&amp; *str != &#x27;9&#x27;)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">printf(&quot;\n&quot;);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">str++;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">100</span>];</span><br><span class="line">scanf_s(<span class="string">&quot;%s&quot;</span>, str, <span class="number">100</span>);</span><br><span class="line">st(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="51-计算日期是第几天"><a href="#51-计算日期是第几天" class="headerlink" title="51.计算日期是第几天"></a>51.计算日期是第几天</h2><p>定义一个结构体变量（包括年、月、日），编写一个函数能够计算一个日期在本 年中是第几天（注意闰年的问题），在主函数中将年、月、日传递给功能函数，计算 结果返回主函数输出显示。（第 9 章课后习题）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DATA</span><span class="params">(<span class="keyword">struct</span> days today)</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">days</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> nian;</span><br><span class="line"><span class="type">int</span> yue;</span><br><span class="line"><span class="type">int</span> ri;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">days</span> <span class="title">today</span>;</span></span><br><span class="line">scanf_s(<span class="string">&quot;%d %d %d&quot;</span>, &amp;today.nian, &amp;today.yue, &amp;today.ri);</span><br><span class="line">DATA(today);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DATA</span><span class="params">(<span class="keyword">struct</span> days today)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> data = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> yue[<span class="number">12</span>] = &#123; <span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; today.yue<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">data = data + yue[i];</span><br><span class="line">&#125;</span><br><span class="line">data = data + today.ri;</span><br><span class="line"><span class="keyword">if</span> (today.yue!=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((today.nian % <span class="number">400</span> == <span class="number">0</span>) || (today.nian % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; today.nian != <span class="number">00</span>))</span><br><span class="line">&#123;</span><br><span class="line">data = data + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="52-日期结构体"><a href="#52-日期结构体" class="headerlink" title="52.日期结构体"></a>52.日期结构体</h2><p>定义一个表示日期的结构体变量（包括年、月、日），并实现以下要求：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) 编写一个函数，用于让用户输入年、月、日，函数参数为结构体指针；</span><br><span class="line"><span class="number">2</span>) 编写一个函数，实现用“日/月/年”格式输出日期（例如 <span class="number">21</span>/<span class="number">12</span>/<span class="number">2020</span>），函数</span><br><span class="line">参数为结构体变量；</span><br><span class="line"><span class="number">3</span>) 编写一个函数，计算一个日期在本年中是第几天（注意闰年的问题），函数参数</span><br><span class="line">为要计算的日期（年、月、日），计算结果为函数返回值；</span><br><span class="line"><span class="number">4</span>) 编写一个 main 函数，可以测试以上函数的功能，并给出 <span class="number">2020</span> 年 <span class="number">5</span> 月 <span class="number">15</span> 日</span><br><span class="line">是这一年中的第几天。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DATA</span><span class="params">(<span class="keyword">struct</span> day *p)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="keyword">struct</span> day* p)</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">day</span> &#123;</span></span><br><span class="line"><span class="type">int</span> nian;</span><br><span class="line"><span class="type">int</span> yue;</span><br><span class="line"><span class="type">int</span> ri;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">day</span> <span class="title">today</span>;</span></span><br><span class="line"></span><br><span class="line">input(&amp;today);</span><br><span class="line">DATA(&amp;today);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="keyword">struct</span> day* p)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入年月日\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d %d %d&quot;</span>,&amp;p-&gt;nian,&amp;p-&gt;yue,&amp;p-&gt;ri);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DATA</span><span class="params">(<span class="keyword">struct</span> day *today)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> data = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> yue[<span class="number">12</span>] = &#123; <span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; (today-&gt;yue) - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">data = data + yue[i];</span><br><span class="line">&#125;</span><br><span class="line">data = data + today-&gt;ri;</span><br><span class="line"><span class="keyword">if</span> (today-&gt;yue != <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((today-&gt;nian % <span class="number">400</span> == <span class="number">0</span>) || (today-&gt;nian % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; today-&gt;nian != <span class="number">00</span>))</span><br><span class="line">&#123;</span><br><span class="line">data = data + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="53-结构体和函数和指针"><a href="#53-结构体和函数和指针" class="headerlink" title="53.结构体和函数和指针"></a>53.结构体和函数和指针</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">编写一个程序，录入每位同学的信息，包括学号，姓名，c 语言成绩，数学成</span><br><span class="line">绩以及英语成绩。要求：</span><br><span class="line">1) 从键盘上输入 N 名同学的成绩；</span><br><span class="line">2) 求出每名同学的总成绩和平均分；</span><br><span class="line">3) 输出每名同学的信息，包括学号，姓名，总分，平均分；</span><br><span class="line">4) 按照 c 语言成绩排序输出</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="keyword">struct</span> student* p,<span class="type">int</span> n)</span>;<span class="comment">//输入函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> student* p, <span class="type">int</span> n)</span>;<span class="comment">//输出函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">pingjunfen</span><span class="params">(<span class="keyword">struct</span> student* p, <span class="type">int</span> n)</span>;<span class="comment">//平均分和总成绩</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">paixu</span><span class="params">(<span class="keyword">struct</span> students* p, <span class="type">int</span> n)</span>;<span class="comment">//根据c语言成绩</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line"><span class="type">char</span> name[<span class="number">55</span>];</span><br><span class="line"><span class="type">int</span> score[<span class="number">3</span>];<span class="comment">//c 英语 高数</span></span><br><span class="line">&#125;stu[<span class="number">50</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum; scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;sum);</span><br><span class="line"><span class="comment">//struct student students,*p=&amp;students;</span></span><br><span class="line">input(stu, sum);</span><br><span class="line">print(stu, sum);</span><br><span class="line">pingjunfen(stu, sum);</span><br><span class="line">paixu(stu, sum);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="keyword">struct</span> student* p,<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No.&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>, &amp;stu[i].id);</span><br><span class="line">scanf_s(<span class="string">&quot;%s&quot;</span>, stu[i].name, <span class="number">20</span>);</span><br><span class="line">scanf_s(<span class="string">&quot; %d %d %d&quot;</span>, &amp;stu[i].score[<span class="number">0</span>], &amp;stu[i].score[<span class="number">1</span>], &amp;stu[i].score[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> student* p, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No.%d   %s    %d  %d  %d\n&quot;</span>, stu[i].id, stu[i].name, stu[i].score[<span class="number">0</span>], stu[i].score[<span class="number">1</span>], stu[i].score[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">pingjunfen</span><span class="params">(<span class="keyword">struct</span> student* p, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> pingjun;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum + stu[i].score[<span class="number">0</span>] + stu[i].score[<span class="number">1</span>] + stu[i].score[<span class="number">2</span>];</span><br><span class="line">pingjun = sum / <span class="number">3</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s   总成绩;%d    平均分;%.2f\n&quot;</span>,stu[i].name, sum, pingjun);</span><br><span class="line">pingjun = <span class="number">0</span>; sum = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">paixu</span><span class="params">(<span class="keyword">struct</span> students* p, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">swap</span>;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[j].score[<span class="number">0</span>] &lt; stu[j + <span class="number">1</span>].score[<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line">swap = stu[j];</span><br><span class="line">stu[j] = stu[j + <span class="number">1</span>];</span><br><span class="line">stu[j + <span class="number">1</span>] = swap;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No.%d   %s    %d  %d  %d\n&quot;</span>, stu[i].id, stu[i].name, stu[i].score[<span class="number">0</span>], stu[i].score[<span class="number">1</span>], stu[i].score[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="E期末大挑战"><a href="#E期末大挑战" class="headerlink" title="E期末大挑战"></a>E期末大挑战</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">未写完 待续</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">（2）学生具备下面功能：</span></span><br><span class="line"><span class="comment">a）当用户尚未登录，可以注册账号。通过输入学号，姓名，班级，密码后注册。注意已注册的学号不能重复注册。</span></span><br><span class="line"><span class="comment">b）当用户尚未登录，可以通过输入学号和密码登录，学号和密码与注册一致则成功登录，否则登录失败。</span></span><br><span class="line"><span class="comment">（3）老师具备下面功能：</span></span><br><span class="line"><span class="comment">a）当用户尚未登录，可以注册账号。通过输入工号，姓名，密码后注册。注意已注册的工号不能重复注册。</span></span><br><span class="line"><span class="comment">b）当用户尚未登录，可以通过输入工号和密码登录，工号和密码与注册一致则成功登录，否则登录失败。</span></span><br><span class="line"><span class="comment">c）登录成功后可以查看所有自己开授课程的信息（包含课程编号，课程名称）。</span></span><br><span class="line"><span class="comment">d）登录成功后可以设定自己要开设的课程信息。</span></span><br><span class="line"><span class="comment">e）登录成功后可以通过输入课程编号查看选修改课程的同学姓名、学号、和成绩。</span></span><br><span class="line"><span class="comment">f）登录成功后可以通过输入课程编号开始录入该课程的成绩信息，系统逐条输出学生姓名和学号，老师随后录入成绩。</span></span><br><span class="line"><span class="comment">g）登录成功后可以通过输入课程编号，选择查看成绩分阶段统计结果（90以上，80-89,70-79,60-69,60以下等）。</span></span><br><span class="line"><span class="comment">h）登录成功后可以通过输入课程编号，选择正序和逆序查看成绩和学生名单。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;BISTU    通信学院2021C语言期末考试题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每道题一定有多个写法，碍于时间我不能全部写出来，也没有这个能力，所以这些答案仅仅用于参考&lt;/p&gt;
&lt;p&gt;因为写的时间紧所以可能有些小的错误&lt;br&gt;请多见谅&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="考试" scheme="http://example.com/tags/%E8%80%83%E8%AF%95/"/>
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Python基础</title>
    <link href="http://example.com/2021/12/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/Python%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2021/12/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/Python%E5%9F%BA%E7%A1%80/</id>
    <published>2021-12-04T07:22:31.000Z</published>
    <updated>2022-04-19T15:17:39.963Z</updated>
    
    <content type="html"><![CDATA[<p>学习笔记</p><span id="more"></span><h1 id="1-Python的基本语法"><a href="#1-Python的基本语法" class="headerlink" title="1.Python的基本语法"></a>1.Python的基本语法</h1><h2 id="1Python的交互和脚本式"><a href="#1Python的交互和脚本式" class="headerlink" title="1Python的交互和脚本式"></a>1Python的交互和脚本式</h2><p>交互式是不创建脚本文件，通过解释器的交互模式来编写代码<br>脚本式，为创建.py格式进行执行</p><h2 id="2标识符"><a href="#2标识符" class="headerlink" title="2标识符"></a>2标识符</h2><p>在 Python 里，标识符由<strong>字母、数字、下划线</strong>组成。</p><p>在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。</p><p>Python 中的标识符是区分<strong>大小写</strong>的。</p><p>以下划线开头的标识符是有特殊意义的。以单下划线开头 <strong>_foo</strong> 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 <strong>from xxx import *</strong> 而导入。</p><p>Python 可以同一行显示多条语句，方法是用分号 <strong>;</strong> </p><div class="table-container"><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td><code>[]</code> <code>[:]</code></td><td>下标，切片</td></tr><tr><td><code>**</code></td><td>指数</td></tr><tr><td><code>~</code> <code>+</code> <code>-</code></td><td>按位取反, 正负号</td></tr><tr><td><code>*</code> <code>/</code> <code>%</code> <code>//</code></td><td>乘，除，模，整除</td></tr><tr><td><code>+</code> <code>-</code></td><td>加，减</td></tr><tr><td><code>&gt;&gt;</code> <code>&lt;&lt;</code></td><td>右移，左移</td></tr><tr><td><code>&amp;</code></td><td>按位与</td></tr><tr><td><code>^</code> `\</td><td>`</td><td>按位异或，按位或</td></tr><tr><td><code>&lt;=</code> <code>&lt;</code> <code>&gt;</code> <code>&gt;=</code></td><td>小于等于，小于，大于，大于等于</td></tr><tr><td><code>==</code> <code>!=</code></td><td>等于，不等于</td></tr><tr><td><code>is</code>  <code>is not</code></td><td>身份运算符</td></tr><tr><td><code>in</code> <code>not in</code></td><td>成员运算符</td></tr><tr><td><code>not</code> <code>or</code> <code>and</code></td><td>逻辑运算符</td></tr><tr><td><code>=</code> <code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code> <code>//=</code> <code>**=</code> <code>&amp;=</code> `</td><td>=<code>`^=</code> <code>&gt;&gt;=</code> <code>&lt;&lt;=</code></td><td>（复合）赋值运算符</td></tr></tbody></table></div><h2 id="3-保留字"><a href="#3-保留字" class="headerlink" title="3.保留字"></a>3.保留字</h2><div class="table-container"><table><thead><tr><th style="text-align:center">and</th><th style="text-align:center">exec</th><th style="text-align:center">not</th></tr></thead><tbody><tr><td style="text-align:center">assert</td><td style="text-align:center">finally</td><td style="text-align:center"><strong>or</strong></td></tr><tr><td style="text-align:center"><strong>break</strong></td><td style="text-align:center"><strong>for</strong></td><td style="text-align:center"><strong>pass</strong></td></tr><tr><td style="text-align:center"><strong>class</strong></td><td style="text-align:center">from</td><td style="text-align:center"><strong>print</strong></td></tr><tr><td style="text-align:center">continue</td><td style="text-align:center">global</td><td style="text-align:center">raise</td></tr><tr><td style="text-align:center">def</td><td style="text-align:center"><strong>if</strong></td><td style="text-align:center"><strong>return</strong></td></tr><tr><td style="text-align:center">del</td><td style="text-align:center"><strong>import</strong></td><td style="text-align:center">try</td></tr><tr><td style="text-align:center"><strong>elif</strong></td><td style="text-align:center"><strong>in</strong></td><td style="text-align:center"><strong>while</strong></td></tr><tr><td style="text-align:center"><strong>else</strong></td><td style="text-align:center"><strong>is</strong></td><td style="text-align:center">with</td></tr><tr><td style="text-align:center">except</td><td style="text-align:center">lambda</td><td style="text-align:center">yield</td></tr></tbody></table></div><h1 id="2数据类型"><a href="#2数据类型" class="headerlink" title="2数据类型"></a>2数据类型</h1><h2 id="1整数"><a href="#1整数" class="headerlink" title="1整数"></a>1整数</h2><p>python可以写<strong>任意大</strong>的整数</p><p>如果出现很大的数比如说10000000可以写成10000_000</p><h2 id="2浮点数"><a href="#2浮点数" class="headerlink" title="2浮点数"></a>2浮点数</h2><p>浮点数可以用科学计数法来表示<br>比如说1.23*10七次幂可以写1.23e9, 0.0015等于1.5e-3</p><h3 id="数值运算函数"><a href="#数值运算函数" class="headerlink" title="数值运算函数"></a>数值运算函数</h3><h4 id="round"><a href="#round" class="headerlink" title="round"></a>round</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">round(11.111,2)这个函数是四舍五入round(x[,d])d为保留位数默认为0</span><br><span class="line">// 11.11</span><br></pre></td></tr></table></figure><h4 id="abs"><a href="#abs" class="headerlink" title="abs"></a>abs</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abs（x）绝对值</span><br></pre></td></tr></table></figure><h4 id="pow"><a href="#pow" class="headerlink" title="pow"></a>pow</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pow(x,y[,z])</span><br><span class="line">幂余</span><br><span class="line">pow(2,3,3)</span><br><span class="line">//2</span><br></pre></td></tr></table></figure><h4 id="divmod"><a href="#divmod" class="headerlink" title="divmod"></a>divmod</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">商余</span><br><span class="line">divmod(10，3）</span><br><span class="line">//（3，1）</span><br></pre></td></tr></table></figure><h2 id="3-字符串"><a href="#3-字符串" class="headerlink" title="3.字符串"></a>3.字符串</h2><p>字符串是以单引号或者双引号写出来的  </p><p>字符串内部中有”或者‘可以通过\来表示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;I\&#x27;m \&quot;OK\&quot;!&#x27;</span></span><br><span class="line">I<span class="string">&#x27;m &quot;OK&quot;!</span></span><br><span class="line"><span class="string">str1 = &#x27;</span>hello, world!<span class="string">&#x27;</span></span><br><span class="line"><span class="string"># 通过内置函数len计算字符串的长度</span></span><br><span class="line"><span class="string">print(len(str1)) # 13</span></span><br><span class="line"><span class="string"># 获得字符串首字母大写的拷贝</span></span><br><span class="line"><span class="string">print(str1.capitalize()) # Hello, world!</span></span><br><span class="line"><span class="string"># 获得字符串每个单词首字母大写的拷贝</span></span><br><span class="line"><span class="string">print(str1.title()) # Hello, World!</span></span><br><span class="line"><span class="string"># 获得字符串变大写后的拷贝</span></span><br><span class="line"><span class="string">print(str1.upper()) # HELLO, WORLD!</span></span><br><span class="line"><span class="string"># 从字符串中查找子串所在位置</span></span><br><span class="line"><span class="string">print(str1.find(&#x27;</span>o<span class="string">r&#x27;)) # 8</span></span><br><span class="line"><span class="string">print(str1.find(&#x27;</span>shit<span class="string">&#x27;)) # -1</span></span><br><span class="line"><span class="string"># 与find类似但找不到子串时会引发异常</span></span><br><span class="line"><span class="string"># print(str1.index(&#x27;</span>o<span class="string">r&#x27;))</span></span><br><span class="line"><span class="string"># print(str1.index(&#x27;</span>shit<span class="string">&#x27;))</span></span><br><span class="line"><span class="string"># 检查字符串是否以指定的字符串开头</span></span><br><span class="line"><span class="string">print(str1.startswith(&#x27;</span>He<span class="string">&#x27;)) # False</span></span><br><span class="line"><span class="string">print(str1.startswith(&#x27;</span>hel<span class="string">&#x27;)) # True</span></span><br><span class="line"><span class="string"># 检查字符串是否以指定的字符串结尾</span></span><br><span class="line"><span class="string">print(str1.endswith(&#x27;</span>!<span class="string">&#x27;)) # True</span></span><br><span class="line"><span class="string"># 将字符串以指定的宽度居中并在两侧填充指定的字符</span></span><br><span class="line"><span class="string">print(str1.center(50, &#x27;</span>*<span class="string">&#x27;))</span></span><br><span class="line"><span class="string"># 将字符串以指定的宽度靠右放置左侧填充指定的字符</span></span><br><span class="line"><span class="string">print(str1.rjust(50, &#x27;</span> <span class="string">&#x27;))</span></span><br><span class="line"><span class="string">str2 = &#x27;</span>abc123456<span class="string">&#x27;</span></span><br><span class="line"><span class="string"># 检查字符串是否由数字构成</span></span><br><span class="line"><span class="string">print(str2.isdigit())  # False</span></span><br><span class="line"><span class="string"># 检查字符串是否以字母构成</span></span><br><span class="line"><span class="string">print(str2.isalpha())  # False</span></span><br><span class="line"><span class="string"># 检查字符串是否以数字和字母构成</span></span><br><span class="line"><span class="string">print(str2.isalnum())  # True</span></span><br><span class="line"><span class="string">str3 = &#x27;</span>  jackfrued@<span class="number">126.</span>com <span class="string">&#x27;</span></span><br><span class="line"><span class="string">print(str3)</span></span><br><span class="line"><span class="string"># 获得字符串修剪左右两侧空格之后的拷贝</span></span><br><span class="line"><span class="string">print(str3.strip())</span></span><br></pre></td></tr></table></figure><p>字符串函数</p><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><p>返回从左边第一个指定的字符索引，找不到返回-1</p><h3 id="index"><a href="#index" class="headerlink" title="index"></a>index</h3><p>返回从左边第一个字符索引，找不到报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&quot;abcde&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.find(<span class="string">&#x27;c&#x27;</span>))//<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;hello world&quot;</span></span><br><span class="line">a = <span class="built_in">str</span>.index(<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a)//<span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="sqlit"><a href="#sqlit" class="headerlink" title="sqlit"></a>sqlit</h3><p>字符串的拆分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.split(<span class="string">&#x27; &#x27;</span>))//[<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="chr-x-ord-x"><a href="#chr-x-ord-x" class="headerlink" title="chr(x) ord(x)"></a>chr(x) ord(x)</h3><h2 id><a href="#" class="headerlink" title=" "></a> </h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220323200124.png" alt></p><h5 id="字符串的方法"><a href="#字符串的方法" class="headerlink" title="字符串的方法"></a>字符串的方法</h5><p>方法必须用.方式</p><p>八种重要字符串的方法</p><ul><li>str.lower str.upper() 返回字符串的副本，全部为大小写</li><li>str.split(sep=None)返回一个列表，由str根据sep被分割的部分组成</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;a,b,c&quot;</span>.split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line"><span class="comment"># [&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;]</span></span><br></pre></td></tr></table></figure><ul><li>str.count(sub)返回子串sub在str中中出现个数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;aabbaa&quot;</span>,count(<span class="string">&quot;a&quot;</span>)</span><br><span class="line"><span class="comment"># 4</span></span><br></pre></td></tr></table></figure><ul><li><p>str.replace(old,new)返回str的副本，所以old子串被替换为new</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">“python<span class="string">&quot;.replace(&quot;</span>n<span class="string">&quot;,&quot;</span>n123.io<span class="string">&quot;)</span></span><br><span class="line"><span class="string"># python123.io</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="字符串的格式化"><a href="#字符串的格式化" class="headerlink" title="字符串的格式化"></a>字符串的格式化</h3><p>python用于槽方式以及format方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&#123;&#125;是世界上最好用的语言之一，而&#123;&#125;是效率最高的语言&quot;.format(&quot;python&quot;,&quot;c++&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220323205617.png" alt></p><h4 id="-1"><a href="#-1" class="headerlink" title></a><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220323205818.png" alt></h4><h2 id="4布尔值"><a href="#4布尔值" class="headerlink" title="4布尔值"></a>4布尔值</h2><p>只有两个True和False</p><p>布尔值可以tong过and or not表达</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">False</span> <span class="keyword">and</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span> &gt; <span class="number">3</span> <span class="keyword">and</span> <span class="number">3</span> &gt; <span class="number">1</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">or</span> <span class="literal">True</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">not</span> <span class="literal">False</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="5-空值"><a href="#5-空值" class="headerlink" title="5.空值"></a>5.空值</h2><p>用None表示，不能单纯理解为0</p><h2 id="6变量"><a href="#6变量" class="headerlink" title="6变量"></a>6变量</h2><p><strong>重点</strong><br>python中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&#x27;abc&#x27;</span></span><br></pre></td></tr></table></figure><p>python解释器干了两个事情</p><ul><li>在内存中创建了‘abc’的字符串</li><li>在内存中创建a的变量指向‘abc’</li></ul><h2 id="7-常量"><a href="#7-常量" class="headerlink" title="7.常量"></a>7.常量</h2><h2 id="8-list"><a href="#8-list" class="headerlink" title="8.list"></a>8.list</h2><p>list是一种有序的集合，可以进行修改或者删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">classmates=[<span class="string">&#x27;song&#x27;</span>,<span class="string">&#x27;wang&#x27;</span>,<span class="string">&#x27;zhang&#x27;</span>]</span><br></pre></td></tr></table></figure><p>使用len可获取list元素的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(classmates)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="索引-切片-start-end-step"><a href="#索引-切片-start-end-step" class="headerlink" title="索引 切片[start: end:step]"></a>索引 切片[start: end:step]</h3><p>用索引可以访问list的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[<span class="number">0</span>]</span><br><span class="line"><span class="string">&#x27;song&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;wang&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[<span class="number">2</span>]</span><br><span class="line"><span class="string">&#x27;zhang&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[<span class="number">3</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">IndexError: <span class="built_in">list</span> index out of <span class="built_in">range</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    list1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>]</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 3, 5, 7, 100]</span></span><br><span class="line"><span class="comment"># 乘号表示列表元素的重复</span></span><br><span class="line">list2 = [<span class="string">&#x27;hello&#x27;</span>] * <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(list2) <span class="comment"># [&#x27;hello&#x27;, &#x27;hello&#x27;, &#x27;hello&#x27;]</span></span><br><span class="line"><span class="comment"># 计算列表长度(元素个数)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(list1)) <span class="comment"># 5</span></span><br><span class="line"><span class="comment"># 下标(索引)运算</span></span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">0</span>]) <span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">4</span>]) <span class="comment"># 100</span></span><br><span class="line"><span class="comment"># print(list1[5])  # IndexError: list index out of range</span></span><br><span class="line"><span class="built_in">print</span>(list1[-<span class="number">1</span>]) <span class="comment"># 100</span></span><br><span class="line"><span class="built_in">print</span>(list1[-<span class="number">3</span>]) <span class="comment"># 5</span></span><br><span class="line">list1[<span class="number">2</span>] = <span class="number">300</span></span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 3, 300, 7, 100]</span></span><br><span class="line"><span class="comment"># 通过循环用下标遍历列表元素</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list1)):</span><br><span class="line">    <span class="built_in">print</span>(list1[index])</span><br><span class="line"><span class="comment"># 通过for循环遍历列表元素</span></span><br><span class="line"><span class="keyword">for</span> elem <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="built_in">print</span>(elem)</span><br><span class="line"><span class="comment"># 通过enumerate函数处理列表之后再遍历可以同时获得元素索引和值</span></span><br><span class="line"><span class="keyword">for</span> index, elem <span class="keyword">in</span> <span class="built_in">enumerate</span>(list1):</span><br><span class="line">    <span class="built_in">print</span>(index, elem)</span><br></pre></td></tr></table></figure><p>当然我们也可以通过负数来索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates[-<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;zhang&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="增删"><a href="#增删" class="headerlink" title="增删"></a>增删</h3><p>因为list为可变的有序表 append</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.append(<span class="string">&#x27;zhao&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">classmates=[<span class="string">&#x27;song&#x27;</span>,<span class="string">&#x27;wang&#x27;</span>,<span class="string">&#x27;zhang&#x27;</span>,<span class="string">&#x27;zhao&#x27;</span>]</span><br></pre></td></tr></table></figure><p>元素想插入到指定的位置中.insert</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.insert(<span class="number">1</span>, <span class="string">&#x27;Jack&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.append(<span class="string">&#x27;zhao&#x27;</span>)</span><br><span class="line"></span><br><span class="line">classmates=[<span class="string">&#x27;song&#x27;</span>,<span class="string">&#x27;jack&#x27;</span>,<span class="string">&#x27;wang&#x27;</span>,<span class="string">&#x27;zhang&#x27;</span>,<span class="string">&#x27;zhao&#x27;</span>]</span><br></pre></td></tr></table></figure><p>删除末尾用 pop()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.pop()</span><br><span class="line"><span class="string">&#x27;zhao&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">&#x27;song&#x27;</span>,<span class="string">&#x27;jack&#x27;</span>,<span class="string">&#x27;wang&#x27;</span>,<span class="string">&#x27;zhang&#x27;</span>]</span><br></pre></td></tr></table></figure><p>想删除指定的位置用pop(i)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates.pop(<span class="number">1</span>)</span><br><span class="line"><span class="string">&#x27;Jack&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmates</span><br><span class="line">[<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>]</span><br><span class="line"><span class="comment"># 添加元素</span></span><br><span class="line">list1.append(<span class="number">200</span>)</span><br><span class="line">list1.insert(<span class="number">1</span>, <span class="number">400</span>)</span><br><span class="line"><span class="comment"># 合并两个列表</span></span><br><span class="line"><span class="comment"># list1.extend([1000, 2000])</span></span><br><span class="line">list1 += [<span class="number">1000</span>, <span class="number">2000</span>]</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 400, 3, 5, 7, 100, 200, 1000, 2000]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(list1)) <span class="comment"># 9</span></span><br><span class="line"><span class="comment"># 先通过成员运算判断元素是否在列表中，如果存在就删除该元素</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">3</span> <span class="keyword">in</span> list1:</span><br><span class="line">list1.remove(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">1234</span> <span class="keyword">in</span> list1:</span><br><span class="line">    list1.remove(<span class="number">1234</span>)</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 400, 5, 7, 100, 200, 1000, 2000]</span></span><br><span class="line"><span class="comment"># 从指定的位置删除元素</span></span><br><span class="line">list1.pop(<span class="number">0</span>)</span><br><span class="line">list1.pop(<span class="built_in">len</span>(list1) - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [400, 5, 7, 100, 200, 1000]</span></span><br><span class="line"><span class="comment"># 清空列表元素</span></span><br><span class="line">list1.clear()</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># []</span></span><br></pre></td></tr></table></figure><h3 id="生成式和生成器"><a href="#生成式和生成器" class="headerlink" title="生成式和生成器"></a>生成式和生成器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>)]</span><br><span class="line"><span class="built_in">print</span>(f)</span><br><span class="line">f = [x + y <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">&#x27;ABCDE&#x27;</span> <span class="keyword">for</span> y <span class="keyword">in</span> <span class="string">&#x27;1234567&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(f)</span><br></pre></td></tr></table></figure><p>list中可以有不同类型的甚至list</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = [<span class="number">22141</span>, <span class="literal">True</span>, [<span class="string">&#x27;asp&#x27;</span>, <span class="string">&#x27;php&#x27;</span>], <span class="string">&#x27;scheme&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(s)</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="9-tuple"><a href="#9-tuple" class="headerlink" title="9.tuple"></a>9.tuple</h2><p>有序的列表叫tuple，tuple不能被修改</p><p>不可变的tuple有什么意义？因为tuple不可变，所以代码更安全。如果可能，能用tuple代替list就尽量用tuple。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>如果tuple中出现list也是可以修改的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">2</span>][<span class="number">0</span>] = <span class="string">&#x27;X&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">2</span>][<span class="number">1</span>] = <span class="string">&#x27;Y&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>])</span><br></pre></td></tr></table></figure><h2 id="10dict（dictionary）"><a href="#10dict（dictionary）" class="headerlink" title="10dict（dictionary）"></a>10dict（dictionary）</h2><p>其他的语言叫map</p><p>使用key-value</p><p>dict实现，只需要一个“名字”-“成绩”的对照表，直接根据名字查找成绩，无论这个表有多大，查找速度都不会变慢。用Python写一个dict如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">&#x27;Michael&#x27;</span>: <span class="number">95</span>, <span class="string">&#x27;Bob&#x27;</span>: <span class="number">75</span>, <span class="string">&#x27;Tracy&#x27;</span>: <span class="number">85</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&#x27;Michael&#x27;</span>]</span><br><span class="line"><span class="number">95</span></span><br></pre></td></tr></table></figure><p>必须要有key才能读取value<br>一个key只能有一个value<br>key不存在报错</p><p>如果想删除只要删除key就可以了</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112052215177.png" alt></p><h2 id="11-set"><a href="#11-set" class="headerlink" title="11.set"></a>11.set</h2><p>set和dict类型</p><p>是存放key的但是不存放value key不能重复</p><p>set具有数学上的set性质</p><p>比如无序，没有重复元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="built_in">set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.remove(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure><h1 id="3-基本函数"><a href="#3-基本函数" class="headerlink" title="3.基本函数"></a>3.基本函数</h1><h2 id="1-判断"><a href="#1-判断" class="headerlink" title="1.判断"></a>1.判断</h2><p>和c语言基本相似</p><p><strong>注意不要少写了冒号</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">3</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;your age is&#x27;</span>, age)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;adult&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;your age is&#x27;</span>, age)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;teenager&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">3</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;adult&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;= <span class="number">6</span>: <span class="comment">#elif等于else if</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;teenager&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;kid&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> &lt;条件判断<span class="number">1</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">1</span>&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;条件判断<span class="number">2</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">2</span>&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;条件判断<span class="number">3</span>&gt;:</span><br><span class="line">    &lt;执行<span class="number">3</span>&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;执行<span class="number">4</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220329214551.png" alt></p><h2 id="2-循环"><a href="#2-循环" class="headerlink" title="2.循环"></a>2.循环</h2><p>python中的循环分为for in依次将list或者tuple中元素<strong>迭代</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line">    </span><br><span class="line">//</span><br><span class="line">Michael</span><br><span class="line">Bob</span><br><span class="line">Tracy</span><br></pre></td></tr></table></figure><h2 id="3-输出"><a href="#3-输出" class="headerlink" title="3.输出"></a>3.输出</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line"><span class="comment"># 可以输出字符串</span></span><br><span class="line"><span class="comment"># 含有运算符的表达式</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">88</span> * <span class="number">88</span> - <span class="number">55</span>)</span><br><span class="line"><span class="comment"># 将数据输出文件中 主要盘符要存在 使用file=p a+以读写状态，没有就新建</span></span><br><span class="line">fp = <span class="built_in">open</span>(<span class="string">&#x27;E:/编程/python/text.txt&#x27;</span>, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello world&#x27;</span>, file=fp)</span><br><span class="line"><span class="comment"># 输出到这个文件夹</span></span><br><span class="line">fp.close()</span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a, b = <span class="number">5</span>, <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;a&#125;</span> * <span class="subst">&#123;b&#125;</span> = <span class="subst">&#123;a * b&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="4-针对数据类型的特征"><a href="#4-针对数据类型的特征" class="headerlink" title="4.针对数据类型的特征"></a>4.针对数据类型的特征</h1><h2 id="1-Slice"><a href="#1-Slice" class="headerlink" title="1.Slice"></a>1.Slice</h2><p>在list或者tuple取元素</p><p>range函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">0</span>, <span class="number">30</span>, <span class="number">5</span>))</span><br><span class="line">[<span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">25</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>, <span class="number">2</span>))</span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">0</span>, -<span class="number">10</span>, -<span class="number">1</span>))</span><br><span class="line">[<span class="number">0</span>, -<span class="number">1</span>, -<span class="number">2</span>, -<span class="number">3</span>, -<span class="number">4</span>, -<span class="number">5</span>, -<span class="number">6</span>, -<span class="number">7</span>, -<span class="number">8</span>, -<span class="number">9</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">5</span>))</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>中可以通过<span class="keyword">for</span>来切片</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n = <span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line"><span class="meta">... </span>    r.append(L[i])</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r</span><br><span class="line">[<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Sarah&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br></pre></td></tr></table></figure><p>python有更简单的方法实现切片操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">[<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Sarah&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[:<span class="number">3</span>]</span><br><span class="line">[<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Sarah&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">[<span class="string">&#x27;Sarah&#x27;</span>, <span class="string">&#x27;Tracy&#x27;</span>]</span><br><span class="line">如果<span class="number">0</span>-<span class="number">99</span>提取前十</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>L=<span class="built_in">list</span>(rang(<span class="number">100</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l</span><br><span class="line">[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2.</span>..<span class="number">.99</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>l[:<span class="number">10</span>]</span><br><span class="line">l [<span class="number">0</span>,<span class="number">1</span>,..<span class="number">.9</span>]</span><br><span class="line"></span><br><span class="line">前十个，每两个取一个</span><br><span class="line">l[:<span class="number">10</span>:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">l[::<span class="number">5</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-lteration"><a href="#2-lteration" class="headerlink" title="2.lteration"></a>2.lteration</h2><p>在python中通过for循环遍历list或者tuple叫迭送</p><h2 id="3-列表生成式"><a href="#3-列表生成式" class="headerlink" title="3.列表生成式"></a>3.列表生成式</h2><h1 id="5基本库"><a href="#5基本库" class="headerlink" title="5基本库"></a>5基本库</h1><h2 id="1time库"><a href="#1time库" class="headerlink" title="1time库"></a>1time库</h2><h3 id="time"><a href="#time" class="headerlink" title="time"></a>time</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1648043734.0478468</span><br></pre></td></tr></table></figure><h3 id="ctime"><a href="#ctime" class="headerlink" title="ctime"></a>ctime</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wed Mar 23 21:57:29 2022</span><br></pre></td></tr></table></figure><h3 id="gmtine"><a href="#gmtine" class="headerlink" title="gmtine"></a>gmtine</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time.struct_time(tm_year=2022, tm_mon=3, tm_mday=23, tm_hour=13, tm_min=58, tm_sec=1, tm_wday=2, tm_yday=82, tm_isdst=0)</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220323221530.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220323221701.png" alt></p><h1 id="2022"><a href="#2022" class="headerlink" title="2022"></a>2022</h1><h2 id="天天向上的力量"><a href="#天天向上的力量" class="headerlink" title="天天向上的力量"></a>天天向上的力量</h2><p>一年365进步与退步千分之一<br>365中工作五天进步百分之一，周末退步百分之一<br>你和365天都在进步百分之一的卷仙一起工作，你工作日学习，但是休息日两天下降百分之一，那么你至少要在工作日学习百分之多少呢？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># daydayup.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dayUp</span>(<span class="params">df</span>):</span><br><span class="line">    dayup = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">365</span>):</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">7</span> <span class="keyword">in</span>[<span class="number">6</span>,<span class="number">0</span>]:</span><br><span class="line">            dayup=dayup*(<span class="number">0.99</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            dayup =dayup*(<span class="number">1</span>+df)</span><br><span class="line">    <span class="keyword">return</span> dayup</span><br><span class="line">dayfactor = <span class="number">0.01</span></span><br><span class="line"><span class="keyword">while</span> dayUp(dayfactor) &lt; <span class="number">37.78</span>:</span><br><span class="line">    dayfactor+=<span class="number">0.001</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;他工作日努力参数为&#123;:.3f&#125;&quot;</span>.<span class="built_in">format</span>(dayfactor))</span><br><span class="line"></span><br><span class="line">//<span class="number">0.019</span></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220321212958.png" alt></p><h2 id="文本进度条"><a href="#文本进度条" class="headerlink" title="文本进度条"></a>文本进度条</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TextProBar1.py</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">scale = <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;........执行开始........&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(scale+<span class="number">1</span>):</span><br><span class="line">    a=<span class="string">&#x27;*&#x27;</span>*i</span><br><span class="line">    b = <span class="string">&#x27;.&#x27;</span>*(scale-i)</span><br><span class="line">    c = (i/scale)*<span class="number">100</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\r&#123;:^3.0f&#125;%[&#123;&#125;-&gt;&#123;&#125;]&quot;</span>.<span class="built_in">format</span>(c,a,b))</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;........结束........&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;学习笔记&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Python/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CSS基础</title>
    <link href="http://example.com/2021/12/03/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E7%A1%80%E4%B8%89%E4%BB%B6%E5%A5%97/CSS%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2021/12/03/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E7%A1%80%E4%B8%89%E4%BB%B6%E5%A5%97/CSS%E5%9F%BA%E7%A1%80/</id>
    <published>2021-12-03T06:46:59.000Z</published>
    <updated>2022-04-19T15:09:58.416Z</updated>
    
    <content type="html"><![CDATA[<p>CSS前端三剑客的老二</p><span id="more"></span><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20211205012928.png"></p><h1 id="1-CSS简介"><a href="#1-CSS简介" class="headerlink" title="1.CSS简介"></a>1.CSS简介</h1><h2 id="1html自身的局限性"><a href="#1html自身的局限性" class="headerlink" title="1html自身的局限性"></a>1html自身的局限性</h2><h2 id="2CSS选择器"><a href="#2CSS选择器" class="headerlink" title="2CSS选择器"></a>2CSS选择器</h2><p>css的规则主要由两个部分组成的 <strong>选择器</strong>和一条或者多条<strong>声明</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;选择器   属性   值  coor red这句话是声明&gt;</span><br><span class="line">h1     &#123;color:red; font-size:25px;&#125;</span><br></pre></td></tr></table></figure><p>简单来说，选择标签用的</p><p>选择器分为 <strong>基础选择器</strong>和<strong>复合选择器</strong></p><p>基础又分为 <strong>标签选择器 类选择器 id选择器 通配符选择器</strong></p><h3 id="1-标签选择器"><a href="#1-标签选择器" class="headerlink" title="1.标签选择器"></a>1.标签选择器</h3><p>html标签名词作为选择器</p><p>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">标签名&#123;</span><br><span class="line">属性1：属性值1；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span> &#123;<span class="attribute">color</span>: burlywood;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1234455<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1234455<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1234455<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>优点为快速为同类型的标签同意设置样态</p><p>但是如果是出现多个相同的属性，会一同全部修改</p><h3 id="2-类选择器-（常用）"><a href="#2-类选择器-（常用）" class="headerlink" title="2.类选择器 （常用）"></a>2.类选择器 （常用）</h3><h4 id="1-使用"><a href="#1-使用" class="headerlink" title="1.使用"></a>1.使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.类名&#123;</span><br><span class="line">属性1:属性值；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span> &#123;<span class="attribute">color</span>: burlywood;&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.red</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1234455<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1234455<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1234455<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>我想变成红色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20211205013026.png" alt="mark"></p><p>盒子</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*背景颜色*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.green</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>hong<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;green&quot;</span>&gt;</span>绿色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>hong<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20211205012811.png" alt="mark"></p><h4 id="2-多类名"><a href="#2-多类名" class="headerlink" title="2.多类名"></a>2.多类名</h4><p>在标签中class文件属性中写多个类名<br><strong>但是类名中间必须要用空格</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.red</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.font35</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red font35&quot;</span>&gt;</span>神乐同学<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-ID选择器"><a href="#3-ID选择器" class="headerlink" title="3.ID选择器"></a>3.ID选择器</h3><p>id可以选择特定的属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#pink</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pink&quot;</span>&gt;</span>dsadasda<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>id选择用#定义 只能调用一次</p><p>二者区别在于<strong>使用次数</strong><br>id选择器一般用于页面唯一的元素，所以一般和JavaScript使用</p><h3 id="4通配符选择器"><a href="#4通配符选择器" class="headerlink" title="4通配符选择器"></a>4通配符选择器</h3><p>用*号定义，它可以表示所有的元素</p><h1 id="2属性"><a href="#2属性" class="headerlink" title="2属性"></a>2属性</h1><h2 id="1-文字"><a href="#1-文字" class="headerlink" title="1.文字"></a>1.文字</h2><h3 id="1font-family"><a href="#1font-family" class="headerlink" title="1font-family"></a>1font-family</h3><p>字体可用网络字体等</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;宋体&#x27;</span>,<span class="string">&#x27;微软雅黑&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是来自北京信息科技大学的神乐<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是来自北京信息科技大学的神乐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是来自北京信息科技大学的神乐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-font-size"><a href="#2-font-size" class="headerlink" title="2.font-size"></a>2.font-size</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="attribute">font-size</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>px像素大小是网页中最常用的单位</p><p>谷歌浏览器默认字体问=为16px</p><p>不同浏览器字号大小不相同</p><p>body指定整个页面字体大小</p><h3 id="3-font-weight"><a href="#3-font-weight" class="headerlink" title="3.font-weight"></a>3.font-weight</h3><p>css中使用font-weight修改粗细程度  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.bold</span>&#123;<span class="attribute">font-weight</span>: bold;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>神乐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>bold就是相当于加粗效果 相当于number700<br>属性值 为400等于默认 700等于加粗 </p><h3 id="4font-style"><a href="#4font-style" class="headerlink" title="4font-style"></a>4font-style</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.bold</span>&#123;<span class="attribute">font-style</span>: normal;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>神乐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性值中 normal为默认 italic为显示斜体<br>如果em标签和属性为italic的会变正</p><h3 id="5-font的复合用法"><a href="#5-font的复合用法" class="headerlink" title="5.font的复合用法"></a>5.font的复合用法</h3><p>比如说div字体斜体 加粗 字号16 微软雅黑</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>:<span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-family</span>:<span class="string">&#x27;Microsoft yahei&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-weight</span>:<span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-style</span>:italic;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    古道西风瘦马</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者</p><ul><li>位置严格要求不能换 </li><li>除了size和family不能省略</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">font: font-style font-weight font-size/font-height font-family;</span><br><span class="line">*/        类         粗              大                   家</span><br><span class="line"></span><br><span class="line">div&#123;</span><br><span class="line">font: itailc 700 16px &quot;微软雅黑&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051701977.png" alt></p><h2 id="2-文本"><a href="#2-文本" class="headerlink" title="2.文本"></a>2.文本</h2><p>文本属性分为 颜色 对齐 装饰文本 缩进 行间距</p><h3 id="1-color"><a href="#1-color" class="headerlink" title="1.color"></a>1.color</h3><p>颜色表示方法分为三种</p><ul><li>预定义颜色值</li><li>十六进制</li><li>RGB代码</li></ul><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051756815.png" alt></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">color: deeppink;</span><br><span class="line">color: #ff0000;</span><br><span class="line">color: rgb(200,0,0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-text-align"><a href="#2-text-align" class="headerlink" title="2.text-align"></a>2.text-align</h3><p>样态文本<br>属性值分为：left默认,center居中,right右对齐</p><h3 id="3-text-decoration"><a href="#3-text-decoration" class="headerlink" title="3.text-decoration"></a>3.text-decoration</h3><p>属性值为none默认,underline下划线,overlines上划线,line-through删除线</p><h3 id="4text-indent"><a href="#4text-indent" class="headerlink" title="4text-indent"></a>4text-indent</h3><p>文本缩进 通常是首行的缩进</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text-indent:10px;</span><br><span class="line">text-indent:2em;</span><br><span class="line">/*em的意思为相对单位*/</span><br></pre></td></tr></table></figure><h3 id="5line-height"><a href="#5line-height" class="headerlink" title="5line-height"></a>5line-height</h3><p>控制行间距离的高度</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051916814.png" alt></p><p>文本高度默认为16px</p><p>所以line-height:16px；就是没有行间距</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051922317.png" alt></p><h1 id="3-css引入方式"><a href="#3-css引入方式" class="headerlink" title="3.css引入方式"></a>3.css引入方式</h1><h2 id="1内部样态表"><a href="#1内部样态表" class="headerlink" title="1内部样态表"></a>1内部样态表</h2><p>单独放在style中</p><p>方便 没有完全分离 </p><h2 id="2-行内样态表"><a href="#2-行内样态表" class="headerlink" title="2.行内样态表"></a>2.行内样态表</h2><p>直接在标签内部使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:red;&quot;</span>&gt;</span>我是内容&lt;/p？</span><br></pre></td></tr></table></figure><p>style就是属性 写法要符合css规范 </p><h2 id="3外部样态表"><a href="#3外部样态表" class="headerlink" title="3外部样态表"></a>3外部样态表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这是文件名字为：style.css </span><br><span class="line">div&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;syy.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;我是内容&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051946467.png" alt></p><h1 id="4chrome调试工具"><a href="#4chrome调试工具" class="headerlink" title="4chrome调试工具"></a>4chrome调试工具</h1><p><a href="https://www.bilibili.com/video/BV14J4114768?p=92">点我查看</a></p><h1 id="5-Emmet语法"><a href="#5-Emmet语法" class="headerlink" title="5.Emmet语法"></a>5.Emmet语法</h1><h1 id="6-CSS复合选择器"><a href="#6-CSS复合选择器" class="headerlink" title="6.CSS复合选择器"></a><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112062325330.png" alt>6.CSS复合选择器</h1><p>后代选择器,子选择器,并集选择器,</p><h2 id="1-后代选择器-主要"><a href="#1-后代选择器-主要" class="headerlink" title="1.后代选择器 主要"></a>1.后代选择器 主要</h2><p>元素1 元素2{}</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;<span class="attribute">color</span>:pink&#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.name</span> <span class="selector-tag">li</span>&#123;<span class="attribute">color</span>: seagreen;&#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是后代<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是孙子<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是神乐<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-子选择器-重要"><a href="#2-子选择器-重要" class="headerlink" title="2.子选择器 重要"></a>2.子选择器 重要</h2><h2 id="3-并集选择器"><a href="#3-并集选择器" class="headerlink" title="3,并集选择器"></a>3,并集选择器</h2><p>用逗号分隔开了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">div,p&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-伪类选择器"><a href="#4-伪类选择器" class="headerlink" title="4.伪类选择器"></a>4.伪类选择器</h2><p>用：表示</p><h3 id="1-链接伪类"><a href="#1-链接伪类" class="headerlink" title="1.链接伪类"></a>1.链接伪类</h3><p>有很多种链接伪类</p><p>link visited hover active</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112082243432.png" alt></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a:hover&#123;</span><br><span class="line">color:gray;</span><br><span class="line">&#125;</span><br><span class="line">鼠标经过显示gray颜色</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a&#123;</span><br><span class="line">color:gray;</span><br><span class="line">&#125;</span><br><span class="line">a:hover&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-focus伪类选择器"><a href="#2-focus伪类选择器" class="headerlink" title="2.:focus伪类选择器"></a>2.:focus伪类选择器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">input:focus&#123;</span><br><span class="line">background-color:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-CSS元素显示模式（重点"><a href="#7-CSS元素显示模式（重点" class="headerlink" title="7.CSS元素显示模式（重点)"></a><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112082232499.png" alt>7.CSS元素显示模式（重点)</h1><p>html元素分为<strong>块元素</strong>和<strong>行内元素</strong>两类型</p><h2 id="1-块元素"><a href="#1-块元素" class="headerlink" title="1.块元素"></a>1.块元素</h2><p>h p div ul ol li等是最常见的div是最典型的</p><ul><li>特点独占一行</li><li>高度宽度外内边距等可以控制</li><li>宽度默认为容器（父级宽度）100%</li><li>是一个容器以及盒子 可以放行内以及块级元素</li></ul><p>文字类的元素不能使用块级元素</p><p>p里面只能放文字</p><h2 id="2-行内元素"><a href="#2-行内元素" class="headerlink" title="2.行内元素"></a>2.行内元素</h2><p>a strong b em i del s ins u span</p><p>span是最典型的行内元素</p><ul><li>高宽无效</li><li>一行可以显示多个</li><li>默认宽度就是本身内容宽度</li></ul><h2 id="3-行内块元素"><a href="#3-行内块元素" class="headerlink" title="3.行内块元素"></a>3.行内块元素</h2><p>img input td 两个特点都有比较特殊</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112082344551.png" alt></p><p>总结</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112082351810.png" alt></p><h2 id="4-元素显示模式转换"><a href="#4-元素显示模式转换" class="headerlink" title="4.元素显示模式转换"></a>4.元素显示模式转换</h2><p>display:block;转换块元素</p><p>display:inline;转换行内元素</p><p>display:inline-block行内块元素 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>:block;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-实例简洁版本侧边档"><a href="#5-实例简洁版本侧边档" class="headerlink" title="5.实例简洁版本侧边档"></a>5.实例简洁版本侧边档</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>:  darkgray;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span> ;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: coral;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>手机<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>电视<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>盒子<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&lt;/bod》</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112092315986.png" alt></p><h3 id="6单行文字垂直居中"><a href="#6单行文字垂直居中" class="headerlink" title="6单行文字垂直居中"></a>6单行文字垂直居中</h3><p>可以通过文字的行高等于盒子的高度，就可以垂直居中</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220322203440.png" alt></p><h1 id="8CSS的背景"><a href="#8CSS的背景" class="headerlink" title="8CSS的背景"></a>8CSS的背景</h1><p>小图片或者logo大图片</p><p>背景颜色图片 平铺 位置 固定等等</p><h2 id="1-background-color"><a href="#1-background-color" class="headerlink" title="1.background-color"></a>1.background-color</h2><p>background-color一般默认为transparent</p><h2 id="2-background-image"><a href="#2-background-image" class="headerlink" title="2.background-image"></a>2.background-image</h2><p>使用方法为</p><p>background-image:url ();</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">5000px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">1500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">![](https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112101445712.png</span>));</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112101445712.png" alt></p><h2 id="3-background-repeat"><a href="#3-background-repeat" class="headerlink" title="3.background-repeat"></a>3.background-repeat</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">background-repeat:;/*默认平铺*/</span><br><span class="line"></span><br><span class="line">no-repeat</span><br><span class="line">repeat</span><br><span class="line">repeat-x</span><br><span class="line">repeat-y</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112101447940.png" alt="no-repeat"></p><h2 id="4-background-position"><a href="#4-background-position" class="headerlink" title="4.background-position"></a>4.background-position</h2><p>可以修改图片位置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">background-position:x y;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">参数分为两种</span><br><span class="line">length 百分数</span><br><span class="line">position 方位名词 top center bottom left center right</span><br><span class="line"></span><br><span class="line">如果都是方位名词，与前后无关</span><br><span class="line">如left top和top left</span><br><span class="line"></span><br><span class="line">在一些情况下 想要精准</span><br><span class="line">也可以通过精确坐标 d</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h2 id="5-background-attachment"><a href="#5-background-attachment" class="headerlink" title="5.background-attachment"></a>5.background-attachment</h2><p>背景固定  背景附着</p><p>这个设置设置背景图片是否固定还是滚动</p><p>scroll为滚动<br>fixed为固定</p><h2 id="6背景属性混合写法"><a href="#6背景属性混合写法" class="headerlink" title="6背景属性混合写法"></a>6背景属性混合写法</h2><p>前五个复合写法可以像font一样节约代码量</p><p>一般没有要求但是，一般习惯写为一下</p><p>background:背景颜色 背景图片 背景平铺 背景滚动 位置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: red url() no-repeat fixed top;</span><br></pre></td></tr></table></figure><h2 id="7-背景色半透明"><a href="#7-背景色半透明" class="headerlink" title="7.背景色半透明"></a>7.背景色半透明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background:(0,0,0,alpht)</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112121915735.png" alt></p><h2 id="7-综合案例-五彩导航"><a href="#7-综合案例-五彩导航" class="headerlink" title="7.综合案例 五彩导航"></a>7.综合案例 五彩导航</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>综合案例-五彩导航<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>:inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">58px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-class">.bg1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">images/bg1.png</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-class">.bg2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">images/bg2.png</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-class">.bg1</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">images/bg11.png</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-class">.bg2</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">images/bg22.png</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bg1&quot;</span>&gt;</span>五彩导航<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bg2&quot;</span>&gt;</span>五彩导航<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>五彩导航<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>五彩导航<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>五彩导航<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112122148579.gif" alt></p><h1 id="9-CSS三大特征"><a href="#9-CSS三大特征" class="headerlink" title="9.CSS三大特征"></a>9.CSS三大特征</h1><h2 id="1-层叠性"><a href="#1-层叠性" class="headerlink" title="1.层叠性"></a>1.层叠性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: royalblue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:seagreen</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        大江东去</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里div有三个选择</p><p>但是只执行的只有fintsize和最后一个color</p><ul><li>就近原则，哪个近就执行哪个</li><li>样态不冲突 不会重叠</li></ul><h2 id="2-继承性"><a href="#2-继承性" class="headerlink" title="2.继承性"></a>2.继承性</h2><p>现实的继承 我们继承了父亲的姓</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>龙生龙,凤生凤,老鼠生的孩子会打洞<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>p继承了父div的性质</p><p>继承性就是简化代码 降低复杂性text font line</p><h2 id="行高的继承"><a href="#行高的继承" class="headerlink" title="行高的继承"></a><strong>行高的继承</strong></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>行高的继承<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font: 12px/24px &#x27;Microsoft YaHei&#x27;; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 子元素继承了父元素 body 的行高 1.5 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 这个1.5 就是当前元素文字大小 font-size 的1.5倍   所以当前div 的行高就是21像素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>; </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1.5 * 16 =  24 当前的行高 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* li 么有手动指定文字大小  则会继承父亲的 文字大小  body 12px 所以 li 的文字大小为 12px </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        当前li 的行高就是  12 * 1.5  =  18</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>粉红色的回忆<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>粉红色的回忆<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我没有指定文字大小<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-优先性"><a href="#3-优先性" class="headerlink" title="3.优先性"></a>3.优先性</h2><ul><li>选择器相同 则执行层叠层</li><li>不同 根据选择器权重决定</li></ul><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112122202837.png" alt></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">       </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.test</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink<span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#demo</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: purple&quot;</span>&gt;</span>你笑起来真好看<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="10-盒子模型（超重点）Box-Model"><a href="#10-盒子模型（超重点）Box-Model" class="headerlink" title="10.盒子模型（超重点）Box Model"></a>10.<strong>盒子模型</strong>（超重点）Box Model</h1><p>学习页面布局有三大模型</p><p>盒子 浮动 定位</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">盒子中要有</span><br><span class="line">border边框</span><br><span class="line">content内容</span><br><span class="line">padding内边距</span><br><span class="line">margin外边距</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112122211209.png" alt></p><h2 id="1-border边框"><a href="#1-border边框" class="headerlink" title="1.border边框"></a>1.border边框</h2><p>border中有</p><p>宽度 边框样态 颜色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-style</span>: solid;<span class="comment">/*solib实线 dashed 虚线 dotted点线边框*/</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-width</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">边框的复合写法 没有顺序</span><br><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">     <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-width: 5px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            border-style: solid;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            border-color: pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 边框的复合写法 简写:  */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border: 5px solid pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 上边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">5px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 下边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">10px</span> dashed purple;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:red <span class="number">5px</span> solid;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220326145143.png" alt></p><h2 id="2-padding内边距"><a href="#2-padding内边距" class="headerlink" title="2.padding内边距"></a>2.padding内边距</h2><p>padding控制内边距<img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220326150257.png" alt></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">         width: 300px;</span><br><span class="line">         height: 160px;</span><br><span class="line">         background-color: pink;</span><br><span class="line">         padding-top: 20px;</span><br><span class="line">         padding-left: 22px;</span><br><span class="line">         padding-right: 22px;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220326151856.png" alt></p><p>padding影响了盒子的大小 会撑大盒子</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220326180758.png" alt></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.nav &#123;</span><br><span class="line">    height: 41px;</span><br><span class="line">    border-top: 3px solid red;</span><br><span class="line">    border-bottom: 1px solid beige;</span><br><span class="line">    background-color: #fcfcfc;</span><br><span class="line">    line-height: 41px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.nav a &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    color: blue;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    padding: 0 20px;</span><br><span class="line">    height: 41px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-margin外边距"><a href="#3-margin外边距" class="headerlink" title="3.margin外边距"></a>3.margin外边距</h2><p>两个盒子的距离</p><p>还是和内边距相似</p><p>top right bottom left</p><p>外边距作用为水平居中</p><ol><li>指定宽度</li><li>盒子左右外边距为auto</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">margin-left:auto;margin-right:auto;</span><br><span class="line">margin:auto;</span><br><span class="line">margin:0 auto;</span><br></pre></td></tr></table></figure><p>行内和行内块用text-alignLcenter</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220326214217.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220326230226.png" alt></p><h1 id="11-浮动float"><a href="#11-浮动float" class="headerlink" title="11.浮动float"></a>11.浮动float</h1><p>传统网页布局三种方式</p><p>普通流 浮动 定位</p><p>标准流（普通 文档）按照标签规定默认排序</p><p>块单独一行 从上香下排序又div hr h1-h6 ui ol form table</p><p>行内按照左右排序如 span a i em</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220327225550.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220327230720.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220329215409.png" alt></p><p>3浮动元素具有行内吧块元素特征</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220329221132.png" alt></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">  &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        li &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line">        .box &#123;</span><br><span class="line">            width: 1226px;</span><br><span class="line">            height: 285px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line">        .box li &#123;</span><br><span class="line">            width: 296px;</span><br><span class="line">            height: 285px;</span><br><span class="line">            background-color: purple;</span><br><span class="line">            float: left;</span><br><span class="line">            margin-right: 14px;</span><br><span class="line">        &#125;</span><br><span class="line">        .box .last &#123;</span><br><span class="line">            margin-right: 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul class=&quot;box&quot;&gt;</span><br><span class="line">        &lt;li&gt;1&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;2&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;3&lt;/li&gt;</span><br><span class="line">        &lt;li class=&quot;last&quot;&gt;4&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220329224816.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330082040.png" alt></p><h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330083325.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330083417.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330083739.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330084151.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330084342.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330084416.png" alt></p><h1 id="12定位"><a href="#12定位" class="headerlink" title="12定位"></a>12定位</h1><p>有些效果无法用标准流和浮动，这时候要用定位</p><p>浮动可以让多个块级元素在一行没有空袭</p><p>定位用于自由控制盒子</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330094452.png" alt></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330094715.png" alt></p><h2 id="1static静态定位"><a href="#1static静态定位" class="headerlink" title="1static静态定位"></a>1static静态定位</h2><p>没有边偏移</p><h2 id="2relative相对定位"><a href="#2relative相对定位" class="headerlink" title="2relative相对定位"></a>2relative相对定位</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220330110943.png" alt></p><h2 id="3absolute绝对定位"><a href="#3absolute绝对定位" class="headerlink" title="3absolute绝对定位"></a>3absolute绝对定位</h2><p>子绝父相</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;CSS前端三剑客的老二&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/CSS/"/>
    
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript入门</title>
    <link href="http://example.com/2021/12/01/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E7%A1%80%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2021/12/01/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E7%A1%80%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript%E5%85%A5%E9%97%A8/</id>
    <published>2021-12-01T11:19:12.000Z</published>
    <updated>2022-04-19T15:11:22.372Z</updated>
    
    <content type="html"><![CDATA[<p>前端三剑客的大哥捏</p><span id="more"></span><h1 id="1-关于JavaScript"><a href="#1-关于JavaScript" class="headerlink" title="1.关于JavaScript"></a>1.关于JavaScript</h1><h2 id="1-JavaScript是什么？"><a href="#1-JavaScript是什么？" class="headerlink" title="1.JavaScript是什么？"></a>1.JavaScript是什么？</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051137720.png" alt></p><ol><li><strong>HTML</strong> 定义了网页的内容</li><li><strong>CSS</strong> 描述了网页的布局</li><li><strong>JavaScript</strong> 控制了网页的行为</li></ol><p>浏览器不会执行js，通过js解释器</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220331195129.png" alt></p><p>js的引入有三种 行内式的内嵌式</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220331210023.png" alt></p><h1 id="输入输出语句"><a href="#输入输出语句" class="headerlink" title="输入输出语句"></a>输入输出语句</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">JavaScript</span> 显示数据</span><br><span class="line"><span class="title class_">JavaScript</span> 可以通过不同的方式来输出数据：</span><br><span class="line"></span><br><span class="line">使用 <span class="variable language_">window</span>.<span class="title function_">alert</span>() 弹出警告框。</span><br><span class="line">使用 <span class="variable language_">document</span>.<span class="title function_">write</span>() 方法将内容写到 <span class="variable constant_">HTML</span> 文档中。</span><br><span class="line">使用 innerHTML 写入到 <span class="variable constant_">HTML</span> 元素。</span><br><span class="line">使用 <span class="variable language_">console</span>.<span class="title function_">log</span>() 写入到浏览器的控制台。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="字面量和变量"><a href="#字面量和变量" class="headerlink" title="字面量和变量"></a>字面量和变量</h1><p>js是一种弱类型或者动态的语言，不用提前声明类型，类型被自动确定</p><p><strong>数字（Number）字面量</strong> 可以是整数或者是小数，或者是科学计数(e)。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">isNaN来判断是否为非数字，并返回一个值 如果是数字返回false，反之true</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220402000950.png" alt></p><p><strong>字符串（String）字面量</strong> 可以使用单引号或双引号:<strong>表达式字面量</strong> 用于计算：</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220402000903.png" alt></p><p><strong>数组（Array）字面量</strong> 定义一个数组：</p><p>[40, 100, 1, 5, 25, 10]</p><p><strong>对象（Object）字面量</strong> 定义一个对象：</p><p>{firstName:”John”, lastName:”Doe”, age:50, eyeColor:”blue”}</p><p><strong>函数（Function）字面量</strong> 定义一个函数：</p><p>function myFunction(a, b) { return a * b;}</p><p>在编程语言中，变量用于存储数据值。</p><p>JavaScript 使用关键字 <strong>var</strong> 来定义变量， 使用等号来为变量赋值：</p><h2 id="JavaScript-数据类型"><a href="#JavaScript-数据类型" class="headerlink" title="JavaScript 数据类型"></a>JavaScript 数据类型</h2><p>JavaScript 有多种数据类型：数字，字符串，数组，对象等等：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var length = 16;                  // Number 通过数字字面量赋值</span><br><span class="line">var points = x * 10;               // Number 通过表达式字面量赋值</span><br><span class="line">var lastName = &quot;Johnson&quot;;             // String 通过字符串字面量赋值</span><br><span class="line">var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];       // Array 通过数组字面量赋值</span><br><span class="line">var person = &#123;firstName:&quot;John&quot;, lastName:&quot;Doe&quot;&#125;; // Object 通过对象字面量赋值</span><br></pre></td></tr></table></figure><p>var cars = new Array();<br>cars[0] = “Saab”;<br>cars[1] = “Volvo”;<br>cars[2] = “BMW”;</p><p>对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔：</p><p>var person={firstname:”John”, lastname:”Doe”, id:5566};</p><p>上面例子中的对象 (person) 有三个属性：firstname、lastname 以及 id。</p><p>var person={<br>firstname : “John”,<br>lastname : “Doe”,<br>id    : 5566<br>};</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var person=</span><br><span class="line">&#123;</span><br><span class="line">firstname : &quot;John&quot;,</span><br><span class="line">lastname  : &quot;Doe&quot;,</span><br><span class="line">id        :  5566</span><br><span class="line">&#125;;</span><br><span class="line">document.write(person.lastname + &quot;&lt;br&gt;&quot;);</span><br><span class="line">document.write(person[&quot;lastname&quot;] + &quot;&lt;br&gt;&quot;);</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">语句</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">break</td><td style="text-align:left">用于跳出循环。</td></tr><tr><td style="text-align:left">catch</td><td style="text-align:left">语句块，在 try 语句块执行出错时执行 catch 语句块。</td></tr><tr><td style="text-align:left">continue</td><td style="text-align:left">跳过循环中的一个迭代。</td></tr><tr><td style="text-align:left">do … while</td><td style="text-align:left">执行一个语句块，在条件语句为 true 时继续执行该语句块。</td></tr><tr><td style="text-align:left">for</td><td style="text-align:left">在条件语句为 true 时，可以将代码块执行指定的次数。</td></tr><tr><td style="text-align:left">for … in</td><td style="text-align:left">用于遍历数组或者对象的属性（对数组或者对象的属性进行循环操作）。</td></tr><tr><td style="text-align:left">function</td><td style="text-align:left">定义一个函数</td></tr><tr><td style="text-align:left">if … else</td><td style="text-align:left">用于基于不同的条件来执行不同的动作。</td></tr><tr><td style="text-align:left">return</td><td style="text-align:left">退出函数</td></tr><tr><td style="text-align:left">switch</td><td style="text-align:left">用于基于不同的条件来执行不同的动作。</td></tr><tr><td style="text-align:left">throw</td><td style="text-align:left">抛出（生成）错误 。</td></tr><tr><td style="text-align:left">try</td><td style="text-align:left">实现错误处理，与 catch 一同使用。</td></tr><tr><td style="text-align:left">var</td><td style="text-align:left">声明一个变量。</td></tr><tr><td style="text-align:left">while</td><td style="text-align:left">当条件语句为 true 时，执行语句块。</td></tr></tbody></table></div><p><strong>值类型(基本类型)</strong>：字符串（String）、数字(Number)、布尔(Boolean)、对空（Null）、未定义（Undefined）、Symbol。</p><p><strong>引用数据类型（对象类型）</strong>：对象(Object)、数组(Array)、函数(Function)，还有两个特殊的对象：正则（RegExp）和日期（Date）。</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var fun =funtion()&#123;</span><br><span class="line">console.log(&quot;hello world&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220402215127.png" alt></p><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="创建方法"><a href="#创建方法" class="headerlink" title="创建方法"></a>创建方法</h2><h3 id="1利用对象字面量创建对象"><a href="#1利用对象字面量创建对象" class="headerlink" title="1利用对象字面量创建对象"></a>1利用对象字面量创建对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var obj-&#123;</span><br><span class="line">uname: &quot;songyuran&quot;,</span><br><span class="line">age: 18,</span><br><span class="line">sayhi: funtion()&#123;</span><br><span class="line">console.log(&quot;log&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220402231346.png" alt></p><h3 id="利用new-object创建对象"><a href="#利用new-object创建对象" class="headerlink" title="利用new object创建对象"></a>利用new object创建对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var obj=new Object();</span><br><span class="line">obj,uname=&#x27;songyiran&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p>因为一上只能创建一个对象，有了构造函数可以让相同的属性和方法抽象出来封装出来到函数里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">funtion Star(uname,age,sex)&#123;</span><br><span class="line">this.name=uname;</span><br><span class="line">this.age=age;</span><br><span class="line">this,sex=sex;</span><br><span class="line">&#125;</span><br><span class="line">var ldh=new Star(&quot;songyuran&quot;,18,&#x27;nan&#x27;);</span><br></pre></td></tr></table></figure><h3 id="遍历对象"><a href="#遍历对象" class="headerlink" title="遍历对象"></a>遍历对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for(var k in obj)&#123;</span><br><span class="line">console.log(k);</span><br><span class="line">console.log(obj[k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220403222738.png" alt></p><h1 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h1><h2 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h2><h3 id="random-max-min-1-min"><a href="#random-max-min-1-min" class="headerlink" title="random()*(max-min+1)+min"></a>random()*(max-min+1)+min</h3><p>0《=x《1</p><h2 id="date"><a href="#date" class="headerlink" title="date"></a>date</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220403233219.png" alt></p><h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><h2 id="DOM树"><a href="#DOM树" class="headerlink" title="DOM树"></a>DOM树</h2><h2 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h2><h3 id="获取ID"><a href="#获取ID" class="headerlink" title="获取ID"></a>获取ID</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">getElementByld()</span><br><span class="line">get element by id</span><br><span class="line"></span><br><span class="line">console.dir打印返回的元素对象，更好查看里面的属性和方法</span><br></pre></td></tr></table></figure><h3 id="根据标签名"><a href="#根据标签名" class="headerlink" title="根据标签名"></a>根据标签名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getElementByTagName</span><br><span class="line">element.getElementByTagName</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220404220517.png" alt></p><h3 id="根据类名"><a href="#根据类名" class="headerlink" title="根据类名"></a>根据类名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getElementByClassName</span><br></pre></td></tr></table></figure><h3 id="返回指定选择器第一个元素对象"><a href="#返回指定选择器第一个元素对象" class="headerlink" title="返回指定选择器第一个元素对象"></a>返回指定选择器第一个元素对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">querySelector </span><br></pre></td></tr></table></figure><h3 id="返回指定所有的选择器所以元素对象"><a href="#返回指定所有的选择器所以元素对象" class="headerlink" title="返回指定所有的选择器所以元素对象"></a>返回指定所有的选择器所以元素对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query.SelectorAll</span><br></pre></td></tr></table></figure><h3 id="获取特殊元素body"><a href="#获取特殊元素body" class="headerlink" title="获取特殊元素body"></a>获取特殊元素body</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.body</span><br></pre></td></tr></table></figure><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.documentElemnt</span><br></pre></td></tr></table></figure><h2 id="事件基础"><a href="#事件基础" class="headerlink" title="事件基础"></a>事件基础</h2><p>事件源 事件类型 事件处理程序 三要素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var btn =document.getElemnent.byId(&#x27;btn&#x27;)</span><br><span class="line">btn.onclick =funtion()&#123;</span><br><span class="line">alert(&quot;hello world&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> <img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220404231801.png" alt></p><h3 id="修改元素"><a href="#修改元素" class="headerlink" title="修改元素"></a>修改元素</h3><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/20220404232751.png" alt></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;前端三剑客的大哥捏&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="javascript" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/javascript/"/>
    
    
    <category term="javascript" scheme="http://example.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>美化博客出现的问题</title>
    <link href="http://example.com/2021/11/25/%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/11/25/%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-11-25T09:00:41.000Z</published>
    <updated>2022-06-27T04:19:40.639Z</updated>
    
    <content type="html"><![CDATA[<p>总结hexo错误的原因和措施</p><span id="more"></span><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051134404.png" alt="1"></p><p>我今天在美化我的博客的时候本地启动的时候出现了奇怪的问题，导致不能添加新的Md文章。</p><!--more--><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">ERROR &#123;</span><br><span class="line">  err: TypeError: Cannot read properties of null (reading &#x27;utcOffset&#x27;)</span><br><span class="line">      at exports.timezone (E:\kagura blog\myblog\1125错误\node_modules\hexo\lib\plugins\processor\common.js:56:42)</span><br><span class="line">      at E:\kagura blog\myblog\1125错误\node_modules\hexo\lib\plugins\processor\post.js:81:38</span><br><span class="line">      at tryCatcher (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">      at Promise._settlePromiseFromHandler (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:544:35)</span><br><span class="line">      at Promise._settlePromise (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:604:18)</span><br><span class="line">      at Promise._settlePromise0 (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">      at Promise._settlePromises (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">      at Promise._fulfill (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:673:18)</span><br><span class="line">      at PromiseArray._resolve (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:127:19)      at PromiseArray._promiseFulfilled (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:145:14)</span><br><span class="line">      at PromiseArray._iterate (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:115:31)      at PromiseArray.init [as _init] (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:79:10)</span><br><span class="line">      at Promise._settlePromise (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:601:21)</span><br><span class="line">      at Promise._settlePromise0 (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">      at Promise._settlePromises (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">      at Promise._fulfill (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:673:18)</span><br><span class="line">      at PromiseArray._resolve (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:127:19)      at PromiseArray._promiseFulfilled (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:145:14)</span><br><span class="line">      at Promise._settlePromise (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:609:26)</span><br><span class="line">      at Promise._settlePromise0 (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">      at Promise._settlePromises (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">      at _drainQueueStep (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\async.js:93:12)</span><br><span class="line">&#125; Process failed: %s _posts/111.md</span><br><span class="line">ERROR &#123;</span><br><span class="line">  err: TypeError: Cannot read properties of null (reading &#x27;utcOffset&#x27;)</span><br><span class="line">      at exports.timezone (E:\kagura blog\myblog\1125错误\node_modules\hexo\lib\plugins\processor\common.js:56:42)</span><br><span class="line">      at E:\kagura blog\myblog\1125错误\node_modules\hexo\lib\plugins\processor\post.js:81:38</span><br><span class="line">      at tryCatcher (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">      at Promise._settlePromiseFromHandler (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:544:35)</span><br><span class="line">      at Promise._settlePromise (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:604:18)</span><br><span class="line">      at Promise._settlePromise0 (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">      at Promise._settlePromises (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">      at Promise._fulfill (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:673:18)</span><br><span class="line">      at PromiseArray._resolve (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:127:19)      at PromiseArray._promiseFulfilled (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:145:14)</span><br><span class="line">      at PromiseArray._iterate (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:115:31)      at PromiseArray.init [as _init] (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:79:10)</span><br><span class="line">      at Promise._settlePromise (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:601:21)</span><br><span class="line">      at Promise._settlePromise0 (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">      at Promise._settlePromises (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">      at Promise._fulfill (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:673:18)</span><br><span class="line">      at PromiseArray._resolve (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:127:19)      at PromiseArray._promiseFulfilled (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise_array.js:145:14)</span><br><span class="line">      at Promise._settlePromise (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:609:26)</span><br><span class="line">      at Promise._settlePromise0 (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">      at Promise._settlePromises (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">      at _drainQueueStep (E:\kagura blog\myblog\1125错误\node_modules\bluebird\js\release\async.js:93:12)</span><br><span class="line">&#125; Process failed: %s _posts/博客记录.md</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>幸亏有备份将我的源文件备份好了，否则恐怕就要重新去配置了。</p><p>为了防止下次再出现这种情况</p><ul><li>源文件必须要在GitHub备份</li><li>历史更新记录描述一定要描述清楚了</li></ul><p><strong>6/27</strong></p><p>乐了，日期和title出现 null情况</p><p>是因为scaffolds里面的post中两个大括号出现了空格</p><p>title: 美化博客出现的问题<br>date: 1637830841000<br>tags:<br>categories:<br>hide: false<br>cover: </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;总结hexo错误的原因和措施&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="http://example.com/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="问题" scheme="http://example.com/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="踩过的坑" scheme="http://example.com/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>Html基础</title>
    <link href="http://example.com/2021/11/23/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E7%A1%80%E4%B8%89%E4%BB%B6%E5%A5%97/html%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2021/11/23/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E7%A1%80%E4%B8%89%E4%BB%B6%E5%A5%97/html%E5%9F%BA%E7%A1%80/</id>
    <published>2021-11-23T15:49:10.000Z</published>
    <updated>2022-04-19T15:10:14.788Z</updated>
    
    <content type="html"><![CDATA[<p>前端三剑客的弟弟</p><span id="more"></span><p>[TOC]</p><h1 id="1-HTML入门"><a href="#1-HTML入门" class="headerlink" title="1.HTML入门"></a>1.HTML入门</h1><p>​         html是创建网页的标准标记语言。网页有很多的格式,html,jsp,asp等 ，html并不是编程语言，因为编程语言具有逻辑能力，html超越了传统的txt文本，具有超文本性，是一种标记语言。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;<span class="comment">//这是文档的声明，声明文档为html</span></span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;<span class="comment">//en  zh-CN</span></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;这是网页标题&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;p&gt;这是一段文本&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">    &lt;a href=<span class="string">&quot;http://c.biancheng.net/&quot;</span>&gt;这个一个超链接&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;HTML教程&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;CSS教程&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;JavaScript教程&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">     &lt;input type=<span class="string">&quot;text&quot;</span> placeholder=<span class="string">&quot;请输入内容&quot;</span> /&gt;</span><br><span class="line">    &lt;h1&gt;这是一个标题&lt;/h1&gt;<span class="comment">//h1-h6</span></span><br><span class="line">    &lt;p&gt;这是一个段落&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;这是另一个段落&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>以上这个就是最基本的网页格式，每个html标签(Tag)都有不同的含义</p><ul><li><p>&lt;.html&gt;当作所有的html代码，可以把它当作外壳</p></li><li><p>&lt;.head&gt; 标签表示网页的头部，用来设置一些网页的参数</p></li></ul><ul><li><p>&lt;.meta charset=”UTF-8”&gt; 指明当前网页编码格式 UTF-8；</p></li><li><p>&lt;.title&gt; 网页的标题，它会显示在浏览器的标题栏。<br>&lt;./head&gt;</p></li><li><p>&lt;.body&gt;表示正文</p><p>&lt;.p&gt;表示段落，能容纳一段文字</p><p>&lt;.a&gt;用来表示一个超链接<br>&lt;.ul&gt;表示一个列表，里面的<li>是子标签</li></p></li></ul><p>HTML语言中最推荐vscode写</p><p>&lt;!DOCTYPE&gt;<!--html标记--></p><p><html>      <!--html总标记-->    <head><!--头信息标签-->        <meta charset="utf-8"><!--utf-8编码-->        <title>html小白入门</title><!--页面标题-->    <head>    </head></head><body><!--网页显示标签，body标签内的信息都会在页面中显示-->        <h1>这是文本标题，下面是一张图片</h1><!--文本标题标签-->        <imgsrc="tupian.jpg"><br><!--图片标签，br是换行标签-->        <input type="text" value="这是输入框，请输入内容！"><br><!--输入框标签-->        <button type="submit">按钮</button><!--按钮标签-->    </imgsrc="tupian.jpg"></body>d</html><br>​        </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE&gt;&lt;!--html标记--&gt;</span><br><span class="line">&lt;html&gt;      &lt;!--html总标记--&gt;</span><br><span class="line">    &lt;head&gt;&lt;!--头信息标签--&gt;</span><br><span class="line">        &lt;meta charset=&quot;utf-8&quot;&gt;&lt;!--utf-8编码--&gt;</span><br><span class="line">        &lt;title&gt;html小白入门&lt;/title&gt;&lt;!--页面标题--&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">    &lt;body&gt;&lt;!--网页显示标签，body标签内的信息都会在页面中显示--&gt;</span><br><span class="line">        &lt;h1&gt;这是文本标题，下面是一张图片&lt;/h1&gt;&lt;!--文本标题标签--&gt;</span><br><span class="line">        &lt;h2 href=&quot;baidu.com&quot;&gt;点我百度搜索&lt;/a&gt;&lt;!--超链接--&gt;</span><br><span class="line">        &lt;imgsrc=&quot;tupian.jpg&quot;&gt;&lt;br&gt;&lt;!--图片标签，br是换行标签--&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; value=&quot;这是输入框，请输入内容！&quot;&gt;&lt;br&gt;&lt;!--输入框标签--&gt;</span><br><span class="line">        &lt;button type=&quot;submit&quot; &gt;按钮&lt;/button&gt;&lt;!--按钮标签--&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这个就是最基本的使用方法</p><h1 id="2-HMTL的语法"><a href="#2-HMTL的语法" class="headerlink" title="2.HMTL的语法"></a>2.HMTL的语法</h1><h2 id="1-html标签的语法格式-请忽略"><a href="#1-html标签的语法格式-请忽略" class="headerlink" title="1.html标签的语法格式(请忽略.)"></a>1.html标签的语法格式(请忽略.)</h2><p>&lt;.div class=”foo”&gt;我是内容&lt;/div.&gt;<br>foo<strong>为属性</strong>  前后div为<strong>开始结束标签</strong>  开始标签可以写除了class的比如id title等</p><p>html标签是成对出现的，称之为双标签<br>有些特殊的比如说<br .></p><p>div为内容划分元素 是出现最高的</p><h2 id="2-标签关系HTML标签"><a href="#2-标签关系HTML标签" class="headerlink" title="2.标签关系HTML标签"></a>2.标签关系HTML标签</h2><h3 id="包含关系"><a href="#包含关系" class="headerlink" title="包含关系"></a>包含关系</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">h1</span>&gt;</span>神楽の魂<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span> <span class="attr">color</span>=<span class="string">&quot;#666&quot;</span>&gt;</span>自我介绍<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        这是北京普通的双非<span class="tag">&lt;<span class="name">b</span>&gt;</span>大学生<span class="tag">&lt;/<span class="name">b</span>&gt;</span>的个人博客，目前 <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span>18岁<span class="tag">&lt;<span class="name">sup</span>&gt;</span>①<span class="tag">&lt;/<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span>，<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://kaguranotamashii.github.io/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>猛击这里<span class="tag">&lt;/<span class="name">a</span>&gt;</span>查看我的博客<span class="tag">&lt;<span class="name">i</span>&gt;</span>C语言<span class="tag">&lt;/<span class="name">i</span>&gt;</span>、<span class="tag">&lt;<span class="name">i</span>&gt;</span>python<span class="tag">&lt;/<span class="name">i</span>&gt;</span>、<span class="tag">&lt;<span class="name">i</span>&gt;</span>html<span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span>&gt;</span>css<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">small</span>&gt;</span>03年出生<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&lt;!包含关系&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对代码的说明</p><ul><li>&lt;.font&gt;  size改变大小 clor改变颜色</li><li>&lt;.b&gt;加粗</li><li>&lt;.sup&gt;上方的小标</li><li>&lt;.i&gt;斜</li><li>&lt;.hr&gt;分割线，它是自闭和标签</li><li>&lt;.a&gt;为打开超链接 其中&lt;.target&gt;为打开方式 ——blank表示在新标签打开</li></ul><h3 id="并列关系-兄弟关系"><a href="#并列关系-兄弟关系" class="headerlink" title="并列关系(兄弟关系)"></a>并列关系(兄弟关系)</h3><p>&lt;.head&gt;&lt;/.head&gt;</p><h3 id="基本标签"><a href="#基本标签" class="headerlink" title="基本标签"></a>基本标签</h3><div class="table-container"><table><thead><tr><th><html.></html.></th><th style="text-align:center">html标签</th><th>根标签</th></tr></thead><tbody><tr><td><head.></head.></td><td style="text-align:center">头部</td><td>在head中我们必须要设计的标签是title</td></tr><tr><td><title.></title.></td><td style="text-align:center">标题</td><td>属于自己的网页标题</td></tr><tr><td><body.></body.></td><td style="text-align:center">主体</td><td>元素包含的所有内容，页面内容基本都是放在body中的</td></tr></tbody></table></div><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/1201214410649.png" alt="mark"></p><h1 id="3-HTML属性"><a href="#3-HTML属性" class="headerlink" title="3.HTML属性"></a>3.HTML属性</h1><h2 id="1-属性"><a href="#1-属性" class="headerlink" title="1.属性"></a>1.属性</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attr=&quot;value&quot;</span><br></pre></td></tr></table></figure><p>attr为属性名字 value表示属性值 </p><h3 id="1-专用属性"><a href="#1-专用属性" class="headerlink" title="1.专用属性"></a>1.<strong>专用属性</strong></h3><p>有些属性适合大部分 叫通用属性<br>有些只适合小部分 叫专用属性<br>比如说img中src和alt就是专用属性  a中href和target也是专用属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;xxxx.png&quot; alt=&quot;xxxxx&quot; width=&quot;100&quot; height=&quot;50&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="2-通用属性"><a href="#2-通用属性" class="headerlink" title="2.通用属性"></a><strong>2.通用属性</strong></h3><p>如id,title,class,style</p><h5 id="1-id"><a href="#1-id" class="headerlink" title="1.id"></a>1.id</h5><p>id属性是用来赋值给某个标签名字，当使用css或者js时候，可以通过id来找到这个标签。</p><p>id可以快速找到定位，id可以方便区分，id具有唯一性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; id=&quot;name&quot; /&gt;</span><br><span class="line">&lt;div id=&quot;content&quot;&gt;我的博客&lt;/div&gt;</span><br><span class="line">&lt;p id=&quot;url&quot;&gt;kaguranotamashii.github.io/&lt;/p&gt;</span><br></pre></td></tr></table></figure><h5 id="2-class"><a href="#2-class" class="headerlink" title="2.class"></a>2.class</h5><p>class与id不同在于，class可以定义多个相同值</p><p>class=”  “</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;className1 className2 className3&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;p class=&quot;content&quot;&gt;神楽の魂的博客&lt;/p&gt;</span><br><span class="line">&lt;div class=&quot;content&quot;&gt;kaguranotamashii.github.io&lt;/div&gt;</span><br></pre></td></tr></table></figure><h5 id="3-title"><a href="#3-title" class="headerlink" title="3.title"></a>3.title</h5><p>title属性是用来标签内容的描述说明</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>演示文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://c.biancheng.net/html/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;HTML教程&quot;</span>&gt;</span>HTML教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051303396.png" alt="mark"></p><h5 id="4-style"><a href="#4-style" class="headerlink" title="4.style"></a>4.style</h5><p>style属性我们可以在html标签内部定义css样态，比如颜色，字体等等</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>演示文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:red;&quot;</span>&gt;</span>kaguranotamashii,github.io<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./logo.png&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height:50px;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;C语言中文网LOGO&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding:10px;border:2px solid #999;text-align:center;&quot;</span>&gt;</span>C语言中文网<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&lt;!这里做个批注padding表示内边距，内容区与边框之间的区域</span><br><span class="line">    border表示设置元素的边框--&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="4-HTML标题"><a href="#4-HTML标题" class="headerlink" title="4.HTML标题"></a>4.HTML标题</h1><h2 id="1-lt-h1-gt-到-lt-h6-gt-（head"><a href="#1-lt-h1-gt-到-lt-h6-gt-（head" class="headerlink" title="1.&lt;.h1&gt;到&lt;.h6&gt;（head)"></a>1.&lt;.h1&gt;到&lt;.h6&gt;（head)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML标题标签演示<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>h1 标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>h2 标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>h3 标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>h4 标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h5</span>&gt;</span>h5 标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span>h6 标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051304374.png" alt="mark" style="zoom:33%;"></p><p>标题标签的使用只能用于定义标签，不能加粗</p><h1 id="5-HTML段落标签-lt-p-gt"><a href="#5-HTML段落标签-lt-p-gt" class="headerlink" title="5.HTML段落标签&lt;.p&gt;"></a>5.HTML段落标签&lt;.p&gt;</h1><p>paragraph</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span></span></span><br><span class="line"><span class="tag"> &lt;<span class="attr">title</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是神楽の魂的博客网站为<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;kaguranotamashii.github.io&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我的博客会写一些技术向的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-lt-p-gt-的用法"><a href="#1-lt-p-gt-的用法" class="headerlink" title="1.&lt;.p&gt;的用法"></a>1.&lt;.p&gt;的用法</h2><p>段落标签由开始标签<code>&lt;p&gt;</code>和结束标签<code>&lt;/p&gt;</code>组成，开始和结束标签之间的内容会被视为一个段落。段落标签是一个非常基本的标签，我们在网页上发布文章时就会用到</p><h2 id="2-段落中的空白符"><a href="#2-段落中的空白符" class="headerlink" title="2.段落中的空白符"></a>2.段落中的空白符</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;HTML段落中的空白符&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;p&gt;神    </span><br><span class="line">    </span><br><span class="line">    楽の魂</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    的   博        客&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051304921.png" alt="mark"></p><p>如果想要在段落中换行，需要使用专门的换行标签<code>&lt;br /&gt;</code>，<code>&lt;br /&gt;</code>标签属于自闭和标签，因此不需要对应的结束标签`&lt; /br&gt;</p><ul><li>文本在一个段落中会根据浏览器窗口大小自动换行</li><li>段落与段落有空隙</li></ul><p><br .></p><h1 id="6-HTML文本格式化"><a href="#6-HTML文本格式化" class="headerlink" title="6.HTML文本格式化"></a>6.HTML文本格式化</h1><p>突出重要性 比普通文字更重要</p><div class="table-container"><table><thead><tr><th>标签</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td>&lt; b&gt;…&lt;/b&gt;</td><td style="text-align:center">加粗标签中的字体</td></tr><tr><td><strong>&lt; em&gt;…&lt;/em&gt;</strong></td><td style="text-align:center">强调标签中的内容，并使标签中的字体倾斜</td></tr><tr><td>&lt; i&gt;…&lt;/i&gt;</td><td style="text-align:center">定义标签中的字体为斜体</td></tr><tr><td>&lt; small&gt;…&lt;/small&gt;</td><td style="text-align:center">定义标签中的字体为小号字体</td></tr><tr><td><strong>&lt; strong&gt;…&lt;/strong&gt;</strong></td><td style="text-align:center">强调标签中的内容，并将字体加粗（推荐）</td></tr><tr><td>&lt; sub&gt;…&lt;/sub&gt;</td><td style="text-align:center">定义下标文本</td></tr><tr><td>&lt; sup&gt;…&lt;/sup&gt;</td><td style="text-align:center">定义上标文本</td></tr><tr><td><strong>&lt; ins&gt;…&lt;/ins&gt;</strong></td><td style="text-align:center">下划线</td></tr><tr><td><strong>&lt; del&gt;…&lt;/del&gt;</strong></td><td style="text-align:center">在文本内容上添加删除线</td></tr><tr><td>&lt; code&gt;…&lt;/code&gt;</td><td style="text-align:center">定义一段代码</td></tr><tr><td>&lt; kbd&gt;…&lt;/kbd&gt;</td><td style="text-align:center">用来表示文本是通过键盘输入的(不建议使用)</td></tr><tr><td>&lt; samp&gt;…&lt;/samp&gt;</td><td style="text-align:center">定义程序的样本</td></tr><tr><td>&lt; var&gt;…&lt;/var&gt;</td><td style="text-align:center">定义变量</td></tr><tr><td>&lt; pre&gt;…&lt;/pre&gt;</td><td style="text-align:center">定义预格式化的文本，被该标签包裹的文本会保留所有的空格和换行符，字体也会呈现为等宽字体</td></tr><tr><td>&lt; abbr&gt;…&lt;/abbr&gt;</td><td style="text-align:center">用来表示标签中的内容为缩写形式</td></tr><tr><td>&lt; address&gt;…&lt;/address&gt;</td><td style="text-align:center">用来定义文档作者的联系信息，被该标签包裹的文本通常会以斜体呈现，并在文本前面换行</td></tr><tr><td>&lt; bdo&gt;…&lt;/bdo&gt;</td><td style="text-align:center">定义标签中的文字方向</td></tr><tr><td>&lt; blockquote&gt;…&lt;/blockquote&gt;</td><td style="text-align:center">定义一段引用的文本，例如名人名言，文本会换行输出，并在左右两边进行缩进</td></tr><tr><td>&lt; q&gt;…&lt;/q&gt;</td><td style="text-align:center">定义一段短的引用，浏览器会将引用的内容使用双引号包裹起来</td></tr><tr><td>&lt; cite&gt;…&lt;/cite&gt;</td><td style="text-align:center">表示对某个文献的引用，例如书籍或杂志的名称，文本会以斜体显示</td></tr><tr><td>&lt; dfn&gt;…&lt;/dfn&gt;</td><td style="text-align:center">用来定义一个术语，标签中的文本会以斜体呈现</td></tr></tbody></table></div><h2 id="几个相似的格式化文本"><a href="#几个相似的格式化文本" class="headerlink" title="几个相似的格式化文本"></a>几个相似的格式化文本</h2><h3 id="1-strong和b"><a href="#1-strong和b" class="headerlink" title="1.strong和b"></a>1.strong和b</h3><p>前者表示加重语气,后者只是单纯的加粗,在无障碍模式中strong会比b的声音更特殊.</p><h2 id="2-em和i"><a href="#2-em和i" class="headerlink" title="2.em和i"></a>2.em和i</h2><p>em也是加重处理,i仅仅是单纯的斜体</p><h1 id="7div和span标签"><a href="#7div和span标签" class="headerlink" title="7div和span标签"></a>7div和span标签</h1><p>两者没有语义，他们就是一个盒子，用来放内容</p><p>div division表示分割 分区<br>span表示跨度 跨距</p><p>div用来布局 但是一行只能有一个div 大盒子<br>span相反 一行可以放多个span 小盒子</p><h1 id="8-特殊的字符"><a href="#8-特殊的字符" class="headerlink" title="8.特殊的字符"></a>8.特殊的字符</h1><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051305236.png" alt="mark"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;nbsp;</span>空格</span><br><span class="line"><span class="symbol">&amp;lt;</span>小于</span><br><span class="line"><span class="symbol">&amp;gt;</span>大于</span><br></pre></td></tr></table></figure><h1 id="7-HTML超链接-lt-a-gt"><a href="#7-HTML超链接-lt-a-gt" class="headerlink" title="7.HTML超链接&lt;.a&gt;"></a>7.HTML超链接&lt;.a&gt;</h1><h2 id="1-用法"><a href="#1-用法" class="headerlink" title="1.用法"></a>1.用法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;url&quot;</span>  <span class="attr">target</span>=<span class="string">&quot;opentype&quot;</span>&gt;</span>链接文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2href的属性"><a href="#2href的属性" class="headerlink" title="2href的属性"></a>2href的属性</h2><p>anchor 瞄</p><p>href 属性指定链接的目标，也就是要跳转到什么位置。href 可以有多种形式，例如：</p><ul><li>href 可以指向一个网页（.html、.php、.jsp、.asp 等格式），这也是最常见的形式，例如 href=”<a href="http://c.biancheng.net/view/1719.html&quot;；">http://c.biancheng.net/view/1719.html&quot;；</a></li><li>href 可以指向图片（.jpg、.gif、.png 等格式）、音频（.mp3、.wav等格式）、视频（.mp4、.mkv格式）等媒体文件，例如 href=”/uploads/allimg/181221/134I32557-0.jpg”；</li><li>href 可以指向压缩文件（.zip、.rar 等格式）、可执行程序（.exe）等，一些下载网站的链接就可以写成这种形式，例如 href=”./../uploads/data_package/ComputerFoundation.zip”；</li><li>href 甚至还可以指向本机的文件，只是很少这样使用，例如 href=”D:/Program Files/360/360safe/360Safe.exe”。</li></ul><p>你看，href 本质上就是指向一个文件，这个文件几乎可以是任意格式的。如果浏览器支持这种格式，那么它就可以在浏览器上显示，比如常见的图片、音频、视频等，如果浏览器不支持这种格式，那么就提示用户下载。</p><h2 id="3-target的属性"><a href="#3-target的属性" class="headerlink" title="3.target的属性"></a>3.target的属性</h2><div class="table-container"><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>_self</td><td><strong>默认</strong>，在现有窗口中打开新页面，原窗口将被覆盖。</td></tr><tr><td>_blank</td><td>在新窗口中打开新页面，原窗口将被保留。</td></tr><tr><td>_parent</td><td>在当前框架的上一层打开新页面。</td></tr><tr><td>_top</td><td>在顶层框架中打开新页面。</td></tr></tbody></table></div><p>如果不设置默认为_self</p><h2 id="4-href的本地网页跳转"><a href="#4-href的本地网页跳转" class="headerlink" title="4.href的本地网页跳转"></a>4.href的本地网页跳转</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#sakura&quot;</span>&gt;</span>点我跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>忽略我<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>忽略我<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>忽略我<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>忽略我<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>忽略我<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;sakura&quot;</span>&gt;</span>我是sakura<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="#sakura">点我跳转</a></p><p>忽略我</p><p>忽略我</p><p>忽略我</p><p>忽略我</p><p>忽略我</p><p id="sakura">我是sakura</p><h1 id="8HTML插入图片-lt-img-gt"><a href="#8HTML插入图片-lt-img-gt" class="headerlink" title="8HTML插入图片&lt;.img&gt;"></a>8HTML插入图片&lt;.img&gt;</h1><h2 id="1-用法-1"><a href="#1-用法-1" class="headerlink" title="1.用法"></a>1.用法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;url alt=&quot;</span><span class="attr">text</span>&quot;&gt;</span></span><br></pre></td></tr></table></figure><ul><li>src(source)为必选<strong>属性</strong>,用来指明图片的地址和目录,支持多种图片类型</li><li>alt为可选属性,如果遇到图片加载不了,会显示alt的信息</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用绝对路径插入网络图片 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://c.biancheng.net/cpp/templets/new/images/logo.jpg?v=3.994&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;C语言中文网Logo&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在当前 HTML 文档的上层目录中有一个 images 文件夹，该文件夹下有一张图片 html5.png --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../images/html5.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;HTML5 Logo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051305957.png" alt="HTML插入图片示例"></p><h2 id="2-设置图片的宽高度"><a href="#2-设置图片的宽高度" class="headerlink" title="2.设置图片的宽高度"></a>2.设置图片的宽高度</h2><p>​             比如这张图片渚薰被吃</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051305711.png" alt="mark"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://r34tujk76.hb-bkt.clouddn.com/blog/20211126/195024889.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;渚薰被吃了&quot;</span><span class="attr">title</span>=<span class="string">&quot;渚薰被吃&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; height: 100px;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://r34tujk76.hb-bkt.clouddn.com/blog/20211126/195024889.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;渚薰被吃了&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; height: 150px;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://r34tujk76.hb-bkt.clouddn.com/blog/20211126/195024889.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;渚薰被吃了&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 200px;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://r34tujk76.hb-bkt.clouddn.com/blog/20211126/195024889.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;渚薰被吃了&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 150px; height: 200px;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id><a href="#" class="headerlink" title></a><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051305958.png" alt="mark"></h3><h2 id="3图片映射"><a href="#3图片映射" class="headerlink" title="3图片映射"></a>3图片映射</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML图片映射<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;logo.png&quot;</span> <span class="attr">usemap</span>=<span class="string">&quot;#objects&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;C语言中文网Logo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;objects&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;0,0,82,126&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://c.biancheng.net/html/&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;HTML教程&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;90,58,3&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.biancheng.net/css3/&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;CSS教程&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;124,58,8&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.biancheng.net/js/&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;JavaScript教程&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&lt;.map&gt;标签的name属性对应的是&lt;.img&gt;标签的usemap属性,&lt;.area&gt;用于定义点击图片的坐标shape 和 coords 属性</p><p>在 &lt;.area&gt; 标签中可以通过 shape 属性来定义可点击区域的形状，并通过 coords 属性来定义形状所对应的坐标。其中 shape 属性的可选值有三个，分别是 rect（矩形）、circle（圆形）和 poly（多边形），coords 属性中坐标的值则取决于可点击区域的形状。</p><p>假如定义一个矩形的可点击区域，示例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;area shape=&quot;rect&quot; coords=&quot;x1, y1, x2, y2&quot; href=&quot;http://c.biancheng.net/&quot; alt=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure><p>其中 x1、y1 代表矩形的左上角坐标，x2、y2 代表矩形的右下角坐标。</p><p>假如定义一个圆形的可点击区域，示例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;area shape=&quot;circle&quot; coords=&quot;x, y, radius&quot; href=&quot;&quot; alt=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure><p>其中 x、y 代表圆心的坐标，而 radius 则是圆的半径。</p><p>假如定义一个多边形的可点击区域，示例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;area shape=&quot;poly&quot; coords=&quot;x1, y1, x2, y2, x3, y3, ..., xn, yn&quot; href=&quot;http://c.biancheng.net/&quot; alt=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure><p>其中每对 x 和 y 的值都代表一个多边形的顶点坐标。</p><p>注意：所有坐标都是相对于图片的左上角来计算的。</p><div class="table-container"><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>图片路径</td><td>必须属性</td></tr><tr><td>alt</td><td>文字</td><td>图片显示不出</td></tr><tr><td>title</td><td>文字</td><td>鼠标放在图片上后显示的文字</td></tr><tr><td>width</td><td>像素</td><td>宽度</td></tr><tr><td>height</td><td>像素</td><td>高度</td></tr><tr><td>border</td><td>像素</td><td>边框粗细</td></tr></tbody></table></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://baidu.com&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://r34tujk76.hb-bkt.clouddn.com/blog/20211126/195024889.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                             </span><br></pre></td></tr></table></figure><h1 id="9HTML-lt-table-gt-表格"><a href="#9HTML-lt-table-gt-表格" class="headerlink" title="9HTML&lt;.table&gt;表格"></a>9HTML&lt;.table&gt;表格</h1><h2 id="1-表格使用代码"><a href="#1-表格使用代码" class="headerlink" title="1.表格使用代码"></a>1.表格使用代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span>&gt;</span>官网<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span>&gt;</span>性质<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>b站<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>bilibili.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>综合<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>http://www.baidu.com/<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>当当<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>http://www.dangdang.com/<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>图书<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在里面中出现了新的单词table tr td th</li><li>tr表示table row 表示行数</li><li>td表示table datacell 表示表格的单元格</li><li>th表示table heading表示表头</li></ul><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051306677.png" alt="mark"></p><h2 id="2-表格的边框合并"><a href="#2-表格的边框合并" class="headerlink" title="2.表格的边框合并"></a>2.表格的边框合并</h2><p>如果不进行修改会显示双层边框这时候利用css的border-collapse的属性为collapse</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot; style&quot;border-collapse:collapse&quot;</span><br></pre></td></tr></table></figure><h2 id="3-表格的标题-lt-caption-gt"><a href="#3-表格的标题-lt-caption-gt" class="headerlink" title="3.表格的标题&lt;.caption&gt;"></a>3.表格的标题&lt;.caption&gt;</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-collapse:collapse;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第一行并且居中显示</p><h2 id="4-合并"><a href="#4-合并" class="headerlink" title="4.合并"></a>4.合并</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051306585.png" alt="mark"><code>rowspan</code>跨行合并单元格<br><code>colspan</code>跨列合并单元格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-collapse: collapse;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span>&gt;</span>官网<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span>&gt;</span>性质<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>C语言中文网<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>http://c.biancheng.net/<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>教育<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>www.baidu.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>http://www.dangdang.com/<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-表格的属性"><a href="#5-表格的属性" class="headerlink" title="5.表格的属性"></a>5.表格的属性</h2><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051306327.png" alt="mark"></p><h1 id="10-HTML列表标签"><a href="#10-HTML列表标签" class="headerlink" title="10.HTML列表标签"></a>10.HTML列表标签</h1><p>&lt;.ul&gt;&lt;.ol&gt;&lt;.dl&gt;</p><p>html为我们提功了三个列表表达方式</p><h2 id="1-有序列表"><a href="#1-有序列表" class="headerlink" title="1.有序列表"></a>1.有序列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>煮米饭的步骤：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>将水煮沸<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>加入一勺米<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>搅拌均匀<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>继续煮10分钟<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ol为order list的意思为有序列表<br>li为 list item的意思为每一项</p><h2 id="2-无序列表"><a href="#2-无序列表" class="headerlink" title="2.无序列表"></a>2.无序列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>早餐的种类：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>鸡蛋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>牛奶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>面包<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>生菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>&lt;.ul&gt; 是 unordered list 的简称，表示无序列表。</li><li>&lt;..ul&gt; 和 &lt;.ol&gt; 中的 &lt;.li&gt; 一样，都表示列表中的每一项。默认情况下，无序列表的每一项都使用<code>●</code>符号表示。</li></ul><h2 id="3-自定义列表"><a href="#3-自定义列表" class="headerlink" title="3.自定义列表"></a>3.自定义列表</h2><p>定义如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;dl&gt;</span><br><span class="line">    &lt;dt&gt;标题1&lt;dt&gt;</span><br><span class="line">    &lt;dd&gt;描述文本2&lt;dd&gt;</span><br><span class="line">    &lt;dt&gt;标题2&lt;dt&gt;</span><br><span class="line">    &lt;dd&gt;描述文本2&lt;dd&gt;</span><br><span class="line">    &lt;dt&gt;标题3&lt;dt&gt;</span><br><span class="line">    &lt;dd&gt;描述文本3&lt;dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure><p>dl为定义列表 dt为定义术语 dd为定义描述</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>HTML 是一种专门用来开发网页的标记语言，您可以转到《<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://c.biancheng.net/html/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>HTML教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span>》了解更多。<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>CSS 层叠样式表可以控制 HTML 文档的显示样式，用来美化网页，您可以转到《<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://c.biancheng.net/css3/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>CSS教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span>》了解更多。<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>JavaScript 简称 JS，是一种用来开发网站（包括前端和后台）的脚本编程语言，您可以转到《<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://c.biancheng.net/js/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>JS教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span>》了解更多。<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-列表的默认样态"><a href="#4-列表的默认样态" class="headerlink" title="4.列表的默认样态"></a>4.列表的默认样态</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">ol</span> <span class="attr">style</span>=<span class="string">&quot;margin:0px auto; padding-left:20px; list-style:upper-latin;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>将水煮沸<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>加入一勺米<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>搅拌均匀<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>继续煮10分钟<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">对 CSS 样式的说明：</span><br><span class="line">margin:0px auto;将上下外边距设置为 0 像素，将左右外边距设置为自动。</span><br><span class="line">margin-bottom:0px;将下方外边距设置为 0 像素。</span><br><span class="line">margin:auto auto 10px 0px;将上方和右侧外边距设置为自动，将下方外边距设置为 10 像素，将左侧外边距设置为 0 像素。</span><br><span class="line">padding-left:20px;将左侧内边距设置为 20 像素。</span><br><span class="line">list-style:upper-latin;将列表项标记设置为大写拉丁字母。</span><br><span class="line">list-style:square;将列表项标记设置为实心方块。</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h1 id="11-⛤⛤⛤-lt-form-gt-标签"><a href="#11-⛤⛤⛤-lt-form-gt-标签" class="headerlink" title="11.⛤⛤⛤&lt;.form&gt;标签"></a>11.⛤⛤⛤&lt;.form&gt;标签</h1><p>如果想通过网页交互可以通过form实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;URL&quot;</span> <span class="attr">method</span>=<span class="string">&quot;GET|POST&quot;</span>&gt;</span></span><br><span class="line">    表单中的其它标签</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>action属性表示表单交到哪里</li><li>method属性表示使用什么方式提交数据</li><li>表单属于 HTML 文档的一部分，其中包含了如输入框、复选框、单选按钮、提交按钮等不同的表单控件，用户通过修改表单中的元素（例如输入文本，选择某个选项等）来完成表单，通过表单中的提交按钮将表单数据提交给后端程序。</li></ul><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051306949.png" alt="mark"></p><p>除了type以外input还有其它的属性</p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051307769.png" alt="mark"></p><p>注意这个name，如果说没有name属性，在这里如果没有name属性比如上例，点击male和female都可以<br>单选和复选name应该是相同的值</p><p>checked这个是默认勾选的，比如说用户同意这种的</p><h2 id="1文字域"><a href="#1文字域" class="headerlink" title="1文字域"></a>1文字域</h2><form>账号<input type="text" name="firstname" value="请输入"><br>密码<input type="text" name="lastname"></form><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">账号&lt;input type=&quot;text&quot; name=&quot;firstname&quot;&gt;&lt;br&gt;</span><br><span class="line">密码&lt;input type=&quot;text&quot; name=&quot;lastname&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h2 id="2密码字段"><a href="#2密码字段" class="headerlink" title="2密码字段"></a>2密码字段</h2><p>如果想输入密码的话 input type=”password”修改password</p><p>这样就输入字符串，会变成星号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">Password: &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><form>Password: <input type="password" name="pwd"></form><h2 id="3-按钮"><a href="#3-按钮" class="headerlink" title="3.按钮"></a>3.按钮</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>Male<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>Female</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form><input type="radio" name="sex" value="男">Male<br><input type="radio" name="sex" value="女">Female</form><h2 id="4-复选框checkboxes"><a href="#4-复选框checkboxes" class="headerlink" title="4.复选框checkboxes"></a>4.复选框checkboxes</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>&quot;男&quot;&gt;</span>男<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>&quot;女&quot;&gt;</span>女</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form><input type="checkbox" value"男">男<br>    <input type="checkbox" value"女" checked="checked">女</form><h2 id="5提交按钮"><a href="#5提交按钮" class="headerlink" title="5提交按钮"></a>5提交按钮</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;input&quot;</span> <span class="attr">action</span>=<span class="string">&quot;html_form_action.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">Username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form name="input" action="html_form_action.php" method="get">Username: <input type="text" name="user"><input type="submit" value="Submit"></form><form name="input" action="html_form_action.php" method="get">Username: <input type="text" name="user"><input type="submit" value="点我发送"></form><p>假如您在上面的文本框内键入几个字母，然后点击确认按钮，那么输入数据会传送到 “html_form_action.php” 的页面。该页面将显示出输入的结果。</p><h2 id="6-简单的下拉列表"><a href="#6-简单的下拉列表" class="headerlink" title="6.简单的下拉列表"></a>6.简单的下拉列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>你喜欢吃什么<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;cars&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;volvo&quot;</span>&gt;</span>洋芋<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;saab&quot;</span>　<span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span>&gt;</span>土豆<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p><p>你喜欢吃什么</p><p></p><form><select name="cars"><option value="volvo">洋芋</option><option value="saab">土豆</option></select></form>![mark](https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051307064.png)## 7重置reset<form>   <input type="reset" value="点我重新填写"></form><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我重新填写&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8定义点击按钮"><a href="#8定义点击按钮" class="headerlink" title="8定义点击按钮"></a>8定义点击按钮</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9上传文件"><a href="#9上传文件" class="headerlink" title="9上传文件"></a>9上传文件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-label标签"><a href="#10-label标签" class="headerlink" title="10.label标签"></a>10.label标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span><span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nan&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;nan&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span><span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nv&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;nv&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-表单元素"><a href="#11-表单元素" class="headerlink" title="11.表单元素"></a>11.表单元素</h2><p>textarea表单元素</p><p>当用户输入过多的元素的时候不用单纯的text了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span>今日反馈</span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;5&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form>今日反馈    <textarea cols="10" rows="1">    </textarea></form><h1 id="13-html综合学习"><a href="#13-html综合学习" class="headerlink" title="13.html综合学习"></a>13.html综合学习</h1><h2 id="1注册界面"><a href="#1注册界面" class="headerlink" title="1注册界面"></a>1注册界面</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;前端三剑客的弟弟&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="前端" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="HTML" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/HTML/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="html" scheme="http://example.com/tags/html/"/>
    
    <category term="css" scheme="http://example.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>我对程序员的再认知</title>
    <link href="http://example.com/2021/11/23/%E5%AE%9A%E6%9C%9F%E6%80%BB%E7%BB%93/%E6%88%91%E5%AF%B9%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%86%8D%E8%AE%A4%E8%AF%86/"/>
    <id>http://example.com/2021/11/23/%E5%AE%9A%E6%9C%9F%E6%80%BB%E7%BB%93/%E6%88%91%E5%AF%B9%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%86%8D%E8%AE%A4%E8%AF%86/</id>
    <published>2021-11-22T16:08:12.000Z</published>
    <updated>2022-07-06T08:41:13.339Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-接触"><a href="#1-接触" class="headerlink" title="1.接触"></a>1.接触</h1><p>在高三的时候，和同学讨论志愿报名的时候，一些学物理的男生就表示计算机挣钱多。“我的亲戚学历不高，就自学前端什么什么的，在北京挣了多多少钱”。</p><span id="more"></span><p>后来高考考上了信息科大的通信学院的电子信息工程（EE），没有考中我想去的CS（Computer Science），虽然很失望，但是可以尝试转专业。转专业的想法在我心中愈来愈强烈。因此从开始那天到Iflab社团招新那一段时候，我犯了很严重的错误。</p><h1 id="2-反思"><a href="#2-反思" class="headerlink" title="2.反思"></a>2.反思</h1><p>程序员的灵魂是什么？算法？代码？直到加入了iflab社团，导师为新生推荐的书籍中，部分都是哲学类的书籍，一时让我有了进入了文艺社的感觉。后来才明白，我用VS2019写出来的代码虽然有1G大，但是它没有思想，没有灵魂，没有‘生命力’的躯壳。</p><p>翁PJ学长的‘做一个天马行空的人’<a href="http://pjhubs.com/2021/07/26/talk12/">这封给新生的一封信</a>。让我反思起从这几周我的盲目性，单纯为学习而学习的思维是非常不正确的，Hr不会听你的大学当过什么什么，这个感觉太像我在高考后，渴望着明明考不上的大学听到我的故事，而破例录取，但现实是残酷的。</p><p>编程是为了什么？钱？自由？其实都有一定的存在。用代码创造出自己的世界。最近在学习前端语言的时候我注意到了一系列课叫应用无障碍。与此同时B站也推出了对聋人帮助的实时字幕。这就是编程给特殊群体带来的便利。再比如苹果以及安卓手机的无障碍模式，都是用代码来为特殊人群的帮助。</p><h1 id="3-继续行走"><a href="#3-继续行走" class="headerlink" title="3.继续行走"></a>3.继续行走</h1><p><del>自己也是其中之一，我也感受到了代码的”温暖”，计算机中的代码不再是冷冰冰的英文字母和符号了，它变成了照亮迷路的旅途者的灯塔。</del></p><p><del>大一上半年的我，继续探索吧，寻找属于自己的灯塔吧，自己的方向吧。</del></p><p><img src="https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051308290.png" alt="mark"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;1-接触&quot;&gt;&lt;a href=&quot;#1-接触&quot; class=&quot;headerlink&quot; title=&quot;1.接触&quot;&gt;&lt;/a&gt;1.接触&lt;/h1&gt;&lt;p&gt;在高三的时候，和同学讨论志愿报名的时候，一些学物理的男生就表示计算机挣钱多。“我的亲戚学历不高，就自学前端什么什么的，在北京挣了多多少钱”。&lt;/p&gt;</summary>
    
    
    
    <category term="生活趣闻" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB%E8%B6%A3%E9%97%BB/"/>
    
    
    <category term="思考" scheme="http://example.com/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>博客的搭建记录.</title>
    <link href="http://example.com/2021/11/22/%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/11/22/%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AE%B0%E5%BD%95/</id>
    <published>2021-11-22T06:35:49.000Z</published>
    <updated>2022-06-17T17:20:49.833Z</updated>
    
    <content type="html"><![CDATA[<p>对hexo的记录</p><span id="more"></span><h1 id="1-hexo的一些指令"><a href="#1-hexo的一些指令" class="headerlink" title="1.hexo的一些指令"></a>1.hexo的一些指令</h1><p><strong>本地预览</strong></p><p>hexo s</p><!--more--><p><strong>配置文件和主题</strong></p><p>hexo g<br><strong>清空 hexo g </strong></p><p><strong>生成的内容</strong><br>hexo clean</p><p><strong>标题名称</strong><br>        hexo new post 标题名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories: </span><br><span class="line">-</span><br><span class="line">cover: 图标</span><br></pre></td></tr></table></figure><h1 id="2-Typora和Hd的使用方法"><a href="#2-Typora和Hd的使用方法" class="headerlink" title="2.Typora和Hd的使用方法"></a>2.Typora和Hd的使用方法</h1><p><a href="https://blog.csdn.net/qq_45479404/article/details/115891144">typora的快捷键</a></p><h2 id="1-段落"><a href="#1-段落" class="headerlink" title="1.段落"></a><strong>1.段落</strong></h2><ul><li>标题：Ctrl+1/2/3/4/5</li><li>段落：Ctrl+0</li><li>增大标题级别：Ctrl+=</li><li>减少标题级别：Ctrl+-</li><li>表格：Ctrl+T</li><li>代码块：Ctrl+Shift+K</li><li>公式块：Ctrl+Shift+M</li><li>引用：Ctrl+Shift+Q</li><li>有序列表：Ctrl+Shift+[</li><li>无序列表：Ctrl+Shift+]</li><li>增加缩进：Ctrl+]</li><li>减少缩进：Ctrl+[</li></ul><h2 id="2-格式"><a href="#2-格式" class="headerlink" title="2.格式"></a><strong>2.格式</strong></h2><ul><li>加粗：Ctrl+B</li><li>斜体：Ctrl+I</li><li>下划线：Ctrl+U</li><li>代码：Ctrl+Shift+`</li><li>删除线：Alt+Shift+5</li><li>超链接：Ctrl+K</li><li>图像：Ctrl+Shift+I</li><li>清除样式：Ctrl+</li></ul><h2 id="3-部分常用的"><a href="#3-部分常用的" class="headerlink" title="3.部分常用的"></a>3.部分常用的</h2><p>标题：Ctrl+1、2、3…对应一、二、三…级标题（光标定位到需要设置为标题的行，按快捷键）<br><strong>加粗</strong>：Ctrl+B（选中要加粗的文本，按快捷键）<br><em>斜体</em>：Ctrl+I（选中要设置斜体的文本，按快捷键）<br>下划线：Ctrl+U（选中要加下划线的文本，按快捷键）<br>删除线：Alt+Shift+5（选中要加删除线的文本，按快捷键）<br><code>代码片段</code>：Ctrl+Shift+`（选中要设置为代码片段的文本，按快捷键）<br>代码块：Ctrl+Shift+K（任意位置按快捷键，选择编程语言然后在代码块中输入代码）<br>切换到下一行：Ctrl+Enter（任意位置按快捷键，在代码块中可以跳出代码块另起一行）<br><a href="https://link.zhihu.com/?target=https://www.baidu.com/">链接</a>：Ctrl+K（先复制链接，然后选中要加链接的文本，按快捷键。Ctrl+左键点击文本可跳转到对应链接）<br>取消格式：再次按相同的快捷键即可<br>有序列表：数字+点+空格<br>任务列表：加号或减号+空格<br>切换到列表下一行：Space+Enter<br>嵌套列表：按Tab键<br>退出列表：按 Shift+Tab<br>插入表格：Ctrl+T<br>引用：输入&gt;后面加空格，或者Ctrl+Shift+Q</p><h1 id="3-yilia的美化和修改（已经换蝴蝶主题）"><a href="#3-yilia的美化和修改（已经换蝴蝶主题）" class="headerlink" title="3.yilia的美化和修改（已经换蝴蝶主题）"></a>3.yilia的美化和修改（已经换蝴蝶主题）</h1><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">    - 小工具</span><br><span class="line">    - hexo</span><br><span class="line">    - yilia</span><br><span class="line">---</span><br><span class="line">或者tags: [xx,xxxx]</span><br></pre></td></tr></table></figure><h2 id="截断点"><a href="#截断点" class="headerlink" title="截断点"></a>截断点</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 在博客md文件中，设置截断位置</span><br><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><h2 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`theme/yilia/source`目录下添加`favicon.ico`图片</span><br></pre></td></tr></table></figure><h2 id="文章点击量"><a href="#文章点击量" class="headerlink" title="文章点击量"></a>文章点击量</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">themes/yilia/layout/_partial/article.ejs中</span><br><span class="line">&lt;%- partial(<span class="string">&#x27;post/title&#x27;</span>, &#123;<span class="attr">class_name</span>: <span class="string">&#x27;article-title&#x27;</span>&#125;) %&gt;</span><br><span class="line">后面加入</span><br><span class="line">&lt;!--显示阅读次数--&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (!index &amp;&amp; post.comments)&#123; %&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;cloud-tie-join-count&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:gray;font-size:14px;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-sort&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_page_pv&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#ef7522;font-size:14px;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    阅读数: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_page_pv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次 <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;!--显示阅读次数完毕--&gt;</span><br></pre></td></tr></table></figure><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image –save</span><br></pre></td></tr></table></figure><p>打开blog的_cofig.yml修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>新建文章的时候自动生成文章名字.filenname，将图片放入</p><h2 id="总文章数"><a href="#总文章数" class="headerlink" title="总文章数"></a>总文章数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">将*themes\yilia\layout_partial*left-col.ejs文件的</span><br><span class="line"></span><br><span class="line">&lt;nav <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;header-menu&quot;</span>&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">    &lt;% for (var i in theme.menu)&#123; %&gt;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;</span>&gt;</span>&lt;%= i %&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    &lt;%&#125;%&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><h2 id="不蒜子"><a href="#不蒜子" class="headerlink" title="不蒜子"></a>不蒜子</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在 themes\yilia\layout_partial\after-footer.ejs最后添加</span><br><span class="line">&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">修改 themes\yilia\layout\_partial\footer.ejs，包括访客数和站点访问总量</span><br><span class="line"></span><br><span class="line"># PV方式，单个用户连续点击 n 篇，记录 n 次记录值</span><br><span class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;    本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</span><br><span class="line"></span><br><span class="line"># UV方式，单个用户连续点击 n 篇，记录 1 次记录值</span><br><span class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;  本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">单篇</span><br><span class="line"># 使用 pv 记录方式，每访问一次，记录一次</span><br><span class="line">&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;  本文总阅读量&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</span><br></pre></td></tr></table></figure><h1 id="4蝴蝶主题"><a href="#4蝴蝶主题" class="headerlink" title="4蝴蝶主题"></a>4蝴蝶主题</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index-pin-top --save安装置顶</span><br><span class="line"></span><br><span class="line">md文件内部的配置</span><br><span class="line">top: <span class="number">1000</span></span><br><span class="line"><span class="comment">//数字越大置顶在前面</span></span><br><span class="line"><span class="comment">//这个也是z</span></span><br><span class="line">sticky:</span><br><span class="line">comments: <span class="literal">true</span>    添加上这个，如果这篇文章不需要评论改为<span class="literal">false</span>，默认开启</span><br></pre></td></tr></table></figure><p><a href="https://akilar.top/posts/615e2dec/">Butterfly主题美化日记 | Akilarの糖果屋</a></p><p><a href="https://tzy1997.com/articles/hexo541u/#图库">Hexo+Butterfly主题美化 | 唐先森の博客 (tzy1997.com)</a></p><p><a href="https://www.antmoe.com/posts/a811d614/">Hexo 博客之 butterfly 主题优雅魔改系列 | 小康博客 (antmoe.com)</a></p><p><a href="https://hassanwong.top/posts/277da8ad/#诗词标签-Poem">Butterfly主题外挂标签（个人常用） | Hassan’s Blog (hassanwong.top)</a></p><p><a href="https://fontawesome.com/search?s=solid%2Cbrands">Search | Font Awesome</a> 图标网站11</p><p>2022/6/17</p><p>隐藏文章</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-indexed</span><br><span class="line">---</span><br><span class="line">title: example</span><br><span class="line">hide: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;对hexo的记录&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="http://example.com/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="http://example.com/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo/"/>
    
    
    <category term="搭建博客" scheme="http://example.com/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="指令" scheme="http://example.com/tags/%E6%8C%87%E4%BB%A4/"/>
    
    <category term="记录" scheme="http://example.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>最初のBlog「神楽の魂という意味は？」</title>
    <link href="http://example.com/2021/11/22/%E7%A5%9E%E6%A5%BD%E3%81%AE%E9%AD%82%E3%81%A8%E3%81%84%E3%81%86%E6%84%8F%E5%91%B3%E3%81%AF%EF%BC%9F/"/>
    <id>http://example.com/2021/11/22/%E7%A5%9E%E6%A5%BD%E3%81%AE%E9%AD%82%E3%81%A8%E3%81%84%E3%81%86%E6%84%8F%E5%91%B3%E3%81%AF%EF%BC%9F/</id>
    <published>2021-11-22T04:57:13.000Z</published>
    <updated>2022-07-06T08:40:59.240Z</updated>
    
    <content type="html"><![CDATA[<p>关于我的网名</p><span id="more"></span><h1 id="1-ゲームから"><a href="#1-ゲームから" class="headerlink" title="1.ゲームから"></a>1.ゲームから</h1><p>初中的时候玩阴阳师，自动推荐的名字就是神乐之魂<strong>「かぐらのたましい」</strong>，也不知道怎么的就喜欢上了这个网名。</p><h1 id="2-激しい"><a href="#2-激しい" class="headerlink" title="2.激しい"></a>2.激しい</h1><p>后来，高二的时候买了日语网课(<strong>因为我是小语种考生</strong>),一开始我在群名批注就改为神乐之魂。</p><p>那时候我还以为<strong>乐</strong>这个字读为le，后来小王子老师叫我网名的时候就是读yue，当时我也经常读错。不过随着日语水平的提高我叫它为<strong>かぐら</strong>。</p><p>后来和群友混熟了，他们都叫我神乐老弟（现在退群了），我也习惯了神乐之魂这个网名。</p><p>我的GitHub就是以神乐之魂的假名为基础命名的，但是太过于长了（<del>kaguranotamashii</del>），待考虑改为kagura。</p><h1 id="3-新しいミライから"><a href="#3-新しいミライから" class="headerlink" title="3.新しいミライから"></a>3.新しいミライから</h1><p>我的博客主要打算写我的对计算机的学习，以及我的一些思考。</p><p>ボクノミライハマダ始まったバカリ！(<em>我的未来才刚开始！</em>)</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;关于我的网名&lt;/p&gt;</summary>
    
    
    
    <category term="生活趣闻" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB%E8%B6%A3%E9%97%BB/"/>
    
    
  </entry>
  
</feed>
