{"meta":{"title":"これは神楽の魂のブログ","subtitle":"","description":"吾魂兮无求乎永生,竭尽兮人事之所","author":"神楽の魂","url":"https://kaguranotamashii.github.io","root":"/"},"pages":[{"title":"about","date":"2021-12-07T16:06:22.000Z","updated":"2022-07-17T04:38:25.409Z","comments":true,"path":"about/index.html","permalink":"https://kaguranotamashii.github.io/about/index.html","excerpt":"","text":""},{"title":"categories |分类 |归档","date":"2021-11-27T05:46:32.000Z","updated":"2022-04-29T15:51:52.679Z","comments":false,"path":"categories/index.html","permalink":"https://kaguranotamashii.github.io/categories/index.html","excerpt":"","text":""},{"title":"说说","date":"2022-04-30T00:52:55.000Z","updated":"2022-08-08T15:59:42.180Z","comments":true,"path":"artitalk/index.html","permalink":"https://kaguranotamashii.github.io/artitalk/index.html","excerpt":"","text":"new Artitalk({ appId: 'uglz6tnJasD6sm9qHMVU1oJk-MdYXbMMI', appKey: 'UYbIjFxE6uFOHkNjLCUxHf6R' }) #a { background }"},{"title":"archives","date":"2021-11-27T05:33:58.000Z","updated":"2022-04-30T12:32:40.368Z","comments":true,"path":"archives/index.html","permalink":"https://kaguranotamashii.github.io/archives/index.html","excerpt":"","text":""},{"title":"我的相册","date":"2022-08-14T13:51:50.210Z","updated":"2022-08-14T13:51:50.210Z","comments":true,"path":"gallery/index.html","permalink":"https://kaguranotamashii.github.io/gallery/index.html","excerpt":"","text":"我的世界 和老朋友联机1.18截的风景... 我的世界 和老朋友联机1.18截的风景..."},{"title":"link","date":"2022-02-16T16:04:18.000Z","updated":"2022-04-19T14:10:30.578Z","comments":true,"path":"link/index.html","permalink":"https://kaguranotamashii.github.io/link/index.html","excerpt":"","text":""},{"title":"标签","date":"2021-11-27T05:46:37.000Z","updated":"2022-04-30T12:22:11.827Z","comments":false,"path":"tags/index.html","permalink":"https://kaguranotamashii.github.io/tags/index.html","excerpt":"","text":""},{"title":"thinking","date":"2022-08-03T17:05:28.000Z","updated":"2022-08-03T17:22:35.186Z","comments":true,"path":"thinking/index.html","permalink":"https://kaguranotamashii.github.io/thinking/index.html","excerpt":"","text":"关于旅行 出自2017年12月jlpt n2考试短篇阅读理解？篇阅读理解"},{"title":"关于自驾游","date":"2022-06-28T09:11:08.000Z","updated":"2022-08-03T17:10:11.683Z","comments":true,"path":"thinking/关于自驾游.html","permalink":"https://kaguranotamashii.github.io/thinking/%E5%85%B3%E4%BA%8E%E8%87%AA%E9%A9%BE%E6%B8%B8.html","excerpt":"","text":"出自2017年12月jlpt n2考试短篇阅读理解？篇阅读理解"},{"title":"gallery","date":"2022-05-07T02:56:02.804Z","updated":"2022-05-07T02:56:02.804Z","comments":true,"path":"gallery/2022/wdsj/index.html","permalink":"https://kaguranotamashii.github.io/gallery/2022/wdsj/index.html","excerpt":"","text":"废旧矿洞的冒险 世界最高峰! 雨林小家 雪山冒险 被追杀后，转角遇到了最美风景"},{"title":"gallery","date":"2022-05-07T01:31:46.804Z","updated":"2022-05-07T01:31:46.804Z","comments":true,"path":"gallery/gallery/marvel/marvel.html","permalink":"https://kaguranotamashii.github.io/gallery/gallery/marvel/marvel.html","excerpt":"","text":""},{"title":"评测","date":"2022-08-14T13:39:53.000Z","updated":"2022-08-16T12:22:23.551Z","comments":true,"path":"pingce/index.html","permalink":"https://kaguranotamashii.github.io/pingce/index.html","excerpt":"","text":"游戏 青い空のカミュ 青空下的加缪简评 旅行 拜访李卓吾墓 8月16日拜访李贽墓"},{"title":"青空下的加缪","date":"2022-08-14T13:58:05.000Z","updated":"2022-08-15T14:57:11.445Z","comments":true,"path":"pingce/游戏/青空下的加缪/index.html","permalink":"https://kaguranotamashii.github.io/pingce/%E6%B8%B8%E6%88%8F/%E9%9D%92%E7%A9%BA%E4%B8%8B%E7%9A%84%E5%8A%A0%E7%BC%AA/index.html","excerpt":"","text":"加缪说：“真正严肃的哲学问题只有一个，那就是——自杀。” 青空下的加缪 - 萌娘百科 万物皆可萌的百科全书 (moegirl.org.cn) 《青空下的加缪》是KAI-SOFT制作的以阿尔贝·加缪的哲学为主题思想，同时也融入宫泽贤治《银河铁道之夜》元素的双女主视觉小说，于2019年3月29日发布 ―――纵使世界错乱了、纵使迷失了世界――― 这是两个少女联结羁绊的三日物语。 仅仅是完美的日常中扭曲的不合理。 天空蔚蓝无尽，澄澈地如同毫无意义。 Qui a tué fille(是谁杀死了少女) 只想知道那件事情。 在疫情上网课期间我读了几本关于加缪的书籍的代表作《局外人》，《西西弗的神话》。在一次偶然的机会下，知道了这部被称之为“小素晴日”的青空下的加缪，画风也很符合胃口，以废萌的心态去玩了这部游戏。游戏的流程不长，仅仅五小时就能玩明白剧情大概。 故事的背是萤的家乡对座敷童子“仪式”，通过子嗣传承的方式来将“气运”这一不具有实体的概念作为“座敷童子”的实体概念来维系与留存，以此来将这一区域的气运变得高于周围，并且通过座敷童子的一代代“传承”来将这一气运保持在该地区。 了解过故事背景的读者应该明白，这种行为是一种不能为我们所接受的行为，因为我们不可以接受为了更多人的利益而去放弃一个人的行为。然而，这个地区却因为所谓地区发展的需要这样的借口，以及在此之上的强化认识的行为，即所谓“仪式”。初代座敷童子“大本大人”也在此时，因为和来自城市的青年相遇，但是缘于年幼等原因，而错过了向他表达自己心中感情的机会，最终青年离去，大本大人只在匆匆之间，制造了这一遗憾。 故事的下一段时间，是关于燐的小时候的经历的，燐小的时候，曾经过过一段十分幸福的生活，家庭的和睦让她快乐，感受到了来自家人的关怀与爱，体会到了家庭的温暖氛围。而来自哥哥聪的关心则让她获得了更多的爱，甚至在此基础上发展出了燐对聪的爱恋之情，后来，燐与从一起在外远足时，路过了羊胡子花田。 在那里，她体会到了自己最幸福的一段时光，并且和聪的关系也更近一步，后来，在另一次和聪一起因在外游玩而在外过夜时，燐尝试去将两人的关系更进一步的拉近，于是选择了向聪提出请求。此时的聪因为自身心中爱恋与欲望的两重心理状态的纠结，而险些迈出一步，但是最终，聪还是保持了自身的理智，没有回应燐的请求。但是在聪的心中，他仍然持续因为自己对于燐竟然有着欲望的不纯洁思想而感到愧疚与自责，这一矛盾持续在他心中凝结，并且最终将引发一场大变动。 至此，背景铺设完毕，故事开始正式展开。聪因为工作原因，来到萤家乡附近的森林调查，被正在寻找外乡人的仪式主持者找到，软禁在野外的旅馆，然后在软禁过程中，被小时候的大本大人留下的残像影响，准备直面自身的矛盾。另一方面，燐与萤乘坐火车，因为在火车上睡着，而来到萤的家乡站。此时，聪的决绝引动了世界的变动，造成了世界对这一地区的扭曲与修复。 燐与萤在车上醒来，发现所有人都失去响应，在与村民们化成的怪物交战以后，惊险逃脱。两人商议以后，决定前往萤的家里，在路上，他们在分化为狗的聪的帮助下，从分化为猩猩的聪手中逃脱，到达了萤的家里，经过探索，发现了小时候的大本大人所经历的“仪式”，随后逃到萤的房间，进行休息。睡梦之中，两人被唤到了蓝白房子的世界，在那里遇到了大人状态的大本大人，在她的指引下，懂得了回到房间的方法。两人醒来以后，发现此时的世界处于永夜状态。月亮收敛以后，怪物闯进了萤的家，并且在家中大肆翻找破坏，所幸两人躲在阁楼逃过一劫。见门已被打开，认为呆在原地没有意义的两人决定去寻找仪式主持者询问缘由，却在路上发现来了已经变身怪物，失去理智只剩下邪恶思想与欲望的主持者。两人决定去萤初中的校图书馆自己寻找资料，但是在那里被变身怪物的老师堵在墙角。随着萤极度恐惧的求救期望，两人再度被召唤到了蓝白房子的世界，与大本大人交流以后，萤在此处了解了自己的家族背景，以及自己身为座敷童子的身世，甚至是未来本应就要进行“仪式”的所谓事实，也大致了解了现在这个世界的状态，了解要尽快离开这个区域。两人于是经过一番波折，在突然下起的大雨下开着车冲破怪物的阻拦，在巨大的脚的巧合帮助下逃离了怪物聚集的城镇，前往该地区的边界。在路上，两人通过收音机，收到了一个叫DJ戈多的电台的电台节目，在电台中，主持人似乎在描述这两人的行动轨迹，并且在说话中不时掺杂这一些哲学意义的话。萤与燐也以此为契机，讨论起了自己以往听过的，关于《等待戈多》，加缪的《局外人》等具有哲学色彩的内容 回到故事，两人骤降的大雨下，经历的汽车之旅中，慢慢深刻的认识到自己的一切，萤对自己的身世有了了解，甚至突然意识到自己没有父母，没有亲近的人，在和燐相遇相识之前甚至好像一个仅仅只是或者的空壳，而她在此之前甚至没有自觉。这一点与加缪观点所强调的，人在异己世界的孤独不谋而合，短短的几段对话就让我们认识到了萤一直以来的艰苦和不易。而燐则在思考大本大人给自己的提示中，渐渐感受到了自己的残缺不全。两人同样也在聊天中，感受到了对方对于自己的意义所在。两人到达地区边界时，却被临时生成的树挡住了去路，一筹莫展的两人决定先回到城镇，在路上，两人遇到了一个临时收拾过的疗养所，其实根据剧情我们知道这个疗养院其实也就是燐的哥哥聪被软禁的地方。在此处，她们遭遇了猩猩，并且在聪的帮助下暂时击退了猩猩。燐拿起了从猩猩身上掉落的指南针，意识到了什么，决定前往风车探寻哥哥隐藏起来的事情。在风车那里，燐了解到了哥哥正是被居民们软禁来要求完成仪式的外乡人。两人再次来到蓝白房子的世界，降落在了一群风车的顶上，在这里，她们和大本大人一同，整理了世界的本质，明白了世界因为聪对自己的决绝导致了这片区域的转变，燐也见解认识到，聪已经很难和她一起安然的回去了。最后，她们在这片永恒的蓝白色世界，放飞了不会降落的纸飞机。回归到现实，两人决定从另一条荒废的轨道上，向外面走去，尝试远离这个区域。在路上，他们面临了驶来的火车，面临了发狂的伐木机，被怪物追赶。 在此期间，大本大人也终于回忆起了自己儿时的想法，向着相似于曾经那个青年的聪，表达了自己的爱恋之情。两人在劳累之时，回到了蓝白房子的世界，和大本大人进行了最后的讨论，此处蓝白色房子的世界尤其描述了一个概念“蜗牛壳”，翻开它，只剩下空空的一具躯壳，属于它的悲伤与记忆已经消失，属于它的历史与经历也已经被人淡忘。我觉得此处的蜗牛壳应该是大本大人在暗示自己，暗示蓝白房子，正如最后蓝白房子失去了蓝色的门和窗户一样，它也像蜗牛壳一样，只是证明着一些东西的存在，证明那些已经画作回忆的希望，失望，经历，情感。 两人休息结束，穿过树林环绕的铁轨，到达了一个转车台，即用于调整火车行进轨道的一个大型设备。在这里，聪与燐和猩猩展开了最后的决斗。萤为了帮助燐，选择尝试去扭动转车台的方向，在他成功的部分扭动转车台后，月亮现身照相了大地，那些原来在外围觊觎着萤与燐的怪物化为了光电，在萤的请求下，回复一定理智的他们选择了帮助萤将转车台转回了原本的位置。随着转车台回归正轨，聪和猩猩的决战也落下帷幕，两者互相打出了致命的一击，只留下燐在两者之间。随着事情的解决，永夜的天空化作了碎片，失去生机的怪物上，慢慢飘散出了一个个灯烛，他们填满了天空。 见证着萤与燐回到蓝天与白云下的蓝白房子世界，但是不同的是，蓝白房子失去了窗户与门，大本大人也不见所踪。萤感慨着劫后余生，燐还因为哥哥离去的事实而没有彻底回过神来。此时，两人发现一直以来空荡荡的轨道正有一辆列车开过。萤登上了列车，但是回过神来，却发现燐已经被抛下，燐尝试去追逐列车，萤也努力的尝试抓住燐的手，然而，最终燐还是没有搭上这辆车，独自一人，在这一片消散中的蓝白中看着萤的远去。回过神的萤发觉自己和燐一起躺在列车的铁轨上，在稍远处，萤的家乡因为大雨而被彻底淹没，连带着在这片土地上一直以来的种种，消逝在了深水之下。庆幸于燐的所在的萤，决心与萤一直在一起，然而，牵着手走在铁轨上的燐，却在几句话语之中，消失在了光芒里，只留下独自捡起落下的纸飞机，留下眼泪的萤…… 本作中时刻在体现的加缪哲学，甚至是作品名“青空下的加缪”，我想，也许就是作者对于萤的一种寄托吧，希望她，可以像加缪所追求的那样，在孤独中寻找自身的意义，最终，带着对燐的思念，幸福的生活下去。 这样的结局，难免让人心痛，毕竟萤好不容易寻得了自己的珍宝，但是回头却发现，珍宝已经是支离破碎的样子了，但是此刻，请让我用聪的那句话，或者说，萨特的那句话，来为这篇长评做结吧： 毫无道理的出生，因软弱而延续，因偶然而死亡。 这样结尾也太寂寞了，再添句话吧：在荒诞中奋起反抗，在绝望中坚持真理和正义。最后祝愿，三人在其他的世界可以不用经历痛苦，在平静中享受属于自己的幸福。"},{"title":"拜访李卓吾墓","date":"2022-08-16T13:58:05.000Z","updated":"2022-08-16T12:18:41.309Z","comments":true,"path":"pingce/旅行/李卓吾墓/index.html","permalink":"https://kaguranotamashii.github.io/pingce/%E6%97%85%E8%A1%8C/%E6%9D%8E%E5%8D%93%E5%90%BE%E5%A2%93/index.html","excerpt":"","text":"今天有个人私事请假一天去外面办事了，办完后，突然心血来潮想去看看自己最喜欢的位古代哲人李卓吾先生的墓，毕竟今年是李卓吾先生去世的420年。 在西海子公园里面，屹立一座名人之墓，墓碑上面写这李卓吾之墓，这就是明代非常知名的离经叛道的思想家李贽。他可以说之为东方的尼采，当尼采说出上帝已死，早在三百年的大明，狂生李贽就说出“孔子非圣”。 读李贽，常心有戚戚焉。他如一个盗火者，以离经叛道的形象出现在中国的思想史、文化史中，他批道学，扬人性；倡导男女平等，支持婚姻自由；他把孔子拉下神坛，痛斥那些身着儒衣满嘴道德却行着假仁假义之事的道学家……有人说，李贽是穿越到明朝的现代人，他的思想太超前，以至为当世所不容，哪里有什么穿越者，他不过是葆守了内心的那团火，求真之火，他卓卓然立于世，绝不与这个世界行什么“讲和”之事，他宁肯抢刀自戕，也不愿在大明王朝的狱中“污己面目”，其悲壮惨烈，有几个“中庸”之人能做到？如果说李贽是穿越者，我宁肯相信，他并非是由现在穿越过去的，而是在不知多少年之后的未来穿越，若他活在现在，那些“精致的利己主义者”，和他痛斥的道学家，又有何分别？ 李贽（1527—1602），明代卓越的思想家、哲学家，反对封建正统思想，批判程朱理学，著作有《藏书》、《焚书》等。 李卓吾是福建的泉州人，因为自己对儒家的批判使得他被押入京师，在狱中不久就剃刀自刎，临死前引用王维的诗说的“七十老翁何所求”，两天后他在痛苦挣扎中才真正的脱离了苦海。死后老朋友冒着极大的风险和政治压力托他的遗愿，将他葬身于通州的迎福寺。后来解放后他的墓又搬迁到其他地方，最后在改革开放后搬迁到西海子公园，老先生他应该终于能安静下来了吧，从泉州到通州整整两千千米的路，很难想象老先生都经历了什么。葬身他乡，对于古人来说很不好受。 墓地周围载满了白杨树，据说是世人按照他的遗愿来建的，刺破青天魂未锷未残的大丈夫气概。 李贽是一个孤独的思想者，他的思想以及超越了他所在的年代，对真理的追求，对人生的目标的思考，对虚伪的儒学进行无情批判，使他得到褒贬不一的评价。之后的四百年，每一位统治者对他深恶痛觉，稍有风吹草动，就颁布查禁李贽的书籍命令。 当一个人口众多的国家，每个人的行动，如果只凭借儒家思想思想这种原则作为约束和规则，社会的发展也必然会受到限制。 在程序员里面有一个梗叫屎山代码，最初的代码是由大佬写完的，简洁好用，但是在不断的使用中，不断的有程序员对他进行加工，让这个好用简洁的代码编程了屎山。最初的儒家强调的是仁义礼智信温良恭俭让,简短的十个字，实际上给后人制定了，一个及其高的圣人标准，希望每个人都成为良民，但实际上，儒家自从被创造出来变成了统治者统治世人的工具，皇权工具，核心从头到尾都再强调阶级，围绕阶级在两千年的发展过程中，皇权以及高层不断添油加醋，对思想进行进一步过分解读。让人什么君君夫夫子子，就是在告诉世人，不要跨过自己的阶级，底层的黎民百姓在乖乖按照儒家思维，严于律己，但是统治者和高层却在贪污腐败，男盗女娼的事情。但是世人又不完全是傻子，他就是其中之一。从封建社会到建国后，四百二十年过去了，他惊世骇俗，不需要崇拜，他只是需要理解，而这恰恰是我们该做的。 孤独的漂泊者已经倒下，他的影子却笼罩了整整一个 时代"}],"posts":[{"title":"MySql基础","slug":"[main]CS/[main]computer-language/MySql基础","date":"2022-07-13T02:55:52.000Z","updated":"2022-07-28T16:34:39.141Z","comments":true,"path":"posts/16977/","link":"","permalink":"https://kaguranotamashii.github.io/posts/16977/","excerpt":"","text":"数据库应用数据库能存储大量 Database 数据库 Database Management System DBMS数据库管理系统 SQL 结构化查询语言 RDBMS and 非RDBMSrdbms是最古老的数据类型 把复杂的数据类型归纳为简单的二元关系 以row coumn的形式组成的 非rdbms 查找速度快 Mysql数据库基本操作-DDL 功能 sql 查看所有数据库 show databases; 创建数据库 create database [if not exists] mydb1 [charset=utf8]; 切换数据库 use mydb1; 删除数据库 drop database [if exists] mydb1; 修改数据库编码 alter databse mydb1 character set utf8; 12345678910-- 1.DDL操作数据库操作-- 查看所有数据库show DATABASES;-- 创建数据库-- CREATE DATABASE mydb1;CREATE DATABASE if NOT EXISTS mydb1;-- 选择数据库use mydb1;-- 删除数据库DROP DATABASE mydb1; 创建表123456789101112-- 创建表-- 选择mydb1use mydb1create table if not exists student(sid int,name varchar(20),gender varchar(2),age int,birth data,address varchar(20),score double); 其他操作 1234567891011121314151617-- 创建表-- 选择mydb1use sqldb1;create table if not exists student(name1 char(22),sid int,score double);-- 查看所有的表show tables;-- 查看指定表的创建语句show create table student;-- 查看表结构desc student;-- 删除表drop table student; 修改表结构1alter table name add 列名 type 约束 123456789101112131415161718-- 查看所有的表show tables;-- 查看指定表的创建语句show create table student;-- 删除表-- drop table student;-- 创建新的列alter table student add dept varchar(22);-- 修改alter table student dept department VARCHAR(33);-- 删除表列alter table student drop deparment;-- 修改表名rename table student to stu;desc student; DMLdata manipulation language 用来对数据库表中的元素进行增删改 插入insert 删除delete 更新update 美/ɪnˈsɜːrt/ 美/dɪˈliːt/ 美/ˌʌpˈdeɪt/ DML是指着数据操作语言 insert123insert into 表(列名1，列名2...) values (值1，值2....)；insert into 表 values (值1，值2....); update12update 表名 set 字段名=值,。。。。。。update 表明 set 字段名=值。。。。。。 where 条件 123update student set sid =0000;--update student set score =100 where name1=&#x27;zhangziyu&#x27;; delete123delete from 表名 [where 条件] -- 不加条件全部删除或者truncate table 表名 where条件 1创建employee表，id name gender salary DQLdata query language 数据查询语言 用来查找 select 123456789101112131415161718192021222324252627282930313233create table emp( id int comment &#x27;编号&#x27;, workno varchar(10) comment &#x27;工号&#x27;, name varchar(10) comment &#x27;姓名&#x27;, gender char(1) comment &#x27;性别&#x27;, age tinyint unsigned comment &#x27;年龄&#x27;, idcard char(18) comment &#x27;身份证号&#x27;, workaddress varchar(50) comment &#x27;工作地址&#x27;, entrydate date comment &#x27;入职时间&#x27;) comment &#x27;员工表&#x27;;insert into emp(id, workno, name, gender, age, idcard, workaddress, entrydate)VALUES (1, &#x27;1&#x27;, &#x27;柳岩&#x27;, &#x27;女&#x27;, 20, &#x27;123456789012345678&#x27;, &#x27;北京&#x27;, &#x27;2000-01-01&#x27;), (2, &#x27;2&#x27;, &#x27;张无忌&#x27;, &#x27;男&#x27;, 18, &#x27;123456789012345670&#x27;, &#x27;北京&#x27;, &#x27;2005-09-01&#x27;), (3, &#x27;3&#x27;, &#x27;韦一笑&#x27;, &#x27;女&#x27;, 38, &#x27;123456789012345670&#x27;, &#x27;上海&#x27;, &#x27;2005-08-01&#x27;), (4, &#x27;4&#x27;, &#x27;赵敏&#x27;, &#x27;女&#x27;, 18, &#x27;123456789012345670&#x27;, &#x27;北京&#x27;, &#x27;2009-12-01&#x27;), (5, &#x27;5&#x27;, &#x27;小昭&#x27;, &#x27;女&#x27;, 16, &#x27;123456789012345678&#x27;, &#x27;上海&#x27;, &#x27;2007-07-01&#x27;), (6, &#x27;6&#x27;, &#x27;杨逍&#x27;, &#x27;男&#x27;, 28, &#x27;12345678901234567X&#x27;, &#x27;北京&#x27;, &#x27;2006-01-01&#x27;), (7, &#x27;7&#x27;, &#x27;范瑶&#x27;, &#x27;男&#x27;, 40, &#x27;123456789012345670&#x27;, &#x27;北京&#x27;, &#x27;2005-05-01&#x27;), (8, &#x27;8&#x27;, &#x27;黛绮丝&#x27;, &#x27;女&#x27;, 38, &#x27;123456789012345670&#x27;, &#x27;天津&#x27;, &#x27;2015-05-01&#x27;), (9, &#x27;9&#x27;, &#x27;范凉凉&#x27;, &#x27;女&#x27;, 45, &#x27;123456789012345678&#x27;, &#x27;北京&#x27;, &#x27;2010-04-01&#x27;), (10, &#x27;10&#x27;, &#x27;陈友谅&#x27;, &#x27;男&#x27;, 53, &#x27;123456789012345670&#x27;, &#x27;上海&#x27;, &#x27;2011-01-01&#x27;), (11, &#x27;11&#x27;, &#x27;张士诚&#x27;, &#x27;男&#x27;, 55, &#x27;123456789012345670&#x27;, &#x27;江苏&#x27;, &#x27;2015-05-01&#x27;), (12, &#x27;12&#x27;, &#x27;常遇春&#x27;, &#x27;男&#x27;, 32, &#x27;123456789012345670&#x27;, &#x27;北京&#x27;, &#x27;2004-02-01&#x27;), (13, &#x27;13&#x27;, &#x27;张三丰&#x27;, &#x27;男&#x27;, 88, &#x27;123456789012345678&#x27;, &#x27;江苏&#x27;, &#x27;2020-11-01&#x27;), (14, &#x27;14&#x27;, &#x27;灭绝&#x27;, &#x27;女&#x27;, 65, &#x27;123456789012345670&#x27;, &#x27;西安&#x27;, &#x27;2019-05-01&#x27;), (15, &#x27;15&#x27;, &#x27;胡青牛&#x27;, &#x27;男&#x27;, 70, &#x27;12345678901234567X&#x27;, &#x27;西安&#x27;, &#x27;2018-04-01&#x27;), (16, &#x27;16&#x27;, &#x27;周芷若&#x27;, &#x27;女&#x27;, 18, null, &#x27;北京&#x27;, &#x27;2012-06-01&#x27;);-- 1查询 name workno ageselect name ,workno,age from emp; 1select name ,workno,age from emp; 条件查询12345678-- 1.查询 name workno age select name ,workno,age from emp;-- 2.查询 所有字段此返回 select *from emp;-- 3.查询所有员工的地址和起别名 select workaddress as &#x27;工作地址&#x27;from emp;-- 4 查询去除重复select distinct workaddress &#x27;工作地址&#x27; from emp; 12345678910111213141516171819202122232425262728293031323334353637383940-- 1.查询 name workno age-- select name ,workno,age from emp;-- 2.查询 所有字段此返回-- select *from emp;-- 3.查询所有员工的地址和起别名-- select workaddress as &#x27;工作地址&#x27;from emp;-- 4 查询去除重复-- select distinct workaddress &#x27;工作地址&#x27; from emp;-- select 字段列表 from 表名 where 条件列表-- 条件select *from emp where age=88;-- 13,13,张三丰,男,88,123456789012345678,江苏,2020-11-01select *from emp where age&lt;20;/*2,2,张无忌,男,18,123456789012345670,北京,2005-09-014,4,赵敏,女,18,123456789012345670,北京,2009-12-015,5,小昭,女,16,123456789012345678,上海,2007-07-0116,16,周芷若,女,18,,北京,2012-06-01*/-- select *from emp where idcard is null;-- select *from emp where idcard is not null;-- select *from emp where age!=88;-- select *from emp where age&gt;=15 and age&lt;=20;/*select *from emp where age&lt;25 and gender = &#x27;女&#x27;;select *from emp where age in(18,20,40);-- 两个字的select *from emp where name like &#x27;__&#x27;;*/-- 最后身份证是x的select *from emp where idcard like &#x27;%x&#x27;; 聚合函数 count 统计数量 max 最大 min avg 平均数 sum 求和 123select count(*) from emp;select max(age) from emp; 分组查询1select 字段列表 from 表名 where group by 分组字段名 having 1select gender ,avg(age) from emp group by gender; 1234select gender ,count(*) from emp group by gender;select gender ,avg(age) from emp group by gender;select workaddress ,count(*) address_count from emp where age&lt;45 group by workaddress having address_count&gt;=3 排序查询group up 123select 字段列表 from 表名 order by 字段1 排序方式1...../*asc升序 desc降序*/ 12345select * from emp order by age asc;select * from emp order by age desc;select *from emp order by age asc,entrydate desc; 分页查询12select 字段列表 from 表名 limt 起始索引，查询记录数;0,10; 12345678910-- 查询年龄为20212223女性select *from emp where gender=&#x27;女&#x27; and age in(20,21,22,23);-- 查男性 年龄在20-40 名字为3个字的select *from emp where gender=&#x27;男&#x27; and age between 20 and 40 and name like &#x27;___&#x27;;-- 小于60 男女总人数select gender ,count(*) from emp where age&lt;60 group by gender;-- 年龄小于35 员工年龄和姓名 对年龄升序 相同年龄降序select name,age from emp where age&lt;=35 order by age asc,entrydate desc ;-- 性别男 20-40岁 的前五个员工 年龄升序 相同年龄降序select *from emp where gender=&#x27;男&#x27; and age between 20 and 40 order by age asc,entrydate asc limit 5; DCLdata control language 数据控制语言 查询用户123456create user &#x27;itcast&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;create user &#x27;heima&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;alter user &#x27;heima&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;123&#x27;;drop user &#x27;itcast&#x27;@&#x27;localhost&#x27;; 函数字符串函数 12update emp set workno = lpad(workno,5,0);-- 补充五位 数值函数日期函数 12345678910select curdate();select curtime();select year(now());select month(now());select date_add(now(),INTERVAL 70 YEAR );select datediff(&#x27;2000-10-3&#x27;,now());select name,datediff(curdate(),entrydate) as &#x27;entrydays&#x27; from emp order by entrydays asc ; 流程控制函数1 123456select ifnull(null,111231);select name, (case workaddress when &#x27;北京&#x27; then &#x27;一线城市&#x27; when &#x27;上海&#x27; then &#x27;一线城市&#x27; else &#x27;二线城市&#x27; end) as &#x27;工作地址&#x27;from emp; 约束","categories":[],"tags":[]},{"title":"算法基础笔记","slug":"[main]CS/[main]Leetcode/算法基础笔记","date":"2022-07-07T07:03:07.000Z","updated":"2022-07-26T07:51:37.909Z","comments":true,"path":"posts/46395/","link":"","permalink":"https://kaguranotamashii.github.io/posts/46395/","excerpt":"","text":"基础位运算1234567891011public class bit_operation &#123; public static void print(int num) &#123; for (int i = 31; i &gt;= 0; i--) &#123; System.out.print((num &amp; (1 &lt;&lt; i)) == 0 ? &quot;0&quot; : &quot;1&quot;); &#125; &#125; public static void main(String[] args) &#123; print(-12); &#125;&#125; 选择排序12345678910111213public static void selectSort(int[] arr) &#123; if (arr == null || arr.length == 1) &#123; return; &#125; int N = arr.length; for (int i = 0; i &lt; N; i++) &#123; int minValueIndex = i; for (int j = i + 1; j &lt; N; j++) &#123; minValueIndex = arr[j] &lt; arr[minValueIndex] ? j : minValueIndex; &#125; swap(arr, i, minValueIndex); &#125; &#125; 1234567891011121314public static void bubbleSort(int[] arr) &#123; if (arr == null || arr.length == 1) &#123; return; &#125; int N = arr.length; for (int end = N - 1; end &gt;= 0; end--) &#123; for (int second = 1; second &lt;= end; second++) &#123; if (arr[second - 1] &gt; arr[second]) &#123; swap(arr, second - 1, second); &#125; &#125; &#125;&#125; } &#125; 12 数组 链表 跳表数组是在内存中开辟出一段连续的空间 跳表是为了解决链表的缺点 空间换时间","categories":[],"tags":[]},{"title":"大一下学期总结","slug":"[main]summary/大一下学期总结","date":"2022-07-06T16:37:29.000Z","updated":"2022-08-07T02:46:38.338Z","comments":true,"path":"posts/3942644093/","link":"","permalink":"https://kaguranotamashii.github.io/posts/3942644093/","excerpt":"","text":"没想到2022年就这样过去了一半，感叹时光飞逝之余，也回头回顾今年上半年的光阴是否虚度，遗憾固然存在，但也又一点点可以聊以自慰的成绩。 回顾学习学习了vue框架和javase，在学习前端的同时彻底爱上了vscode，以及有意思的开源插件。四月学前端的时候用原生js写了页love-letter，虽然被拒绝了，但是认识到了原生js的不方便之处后，又简单学习了jQuery，才意识到了js框架的便利之处。 这八个月只能说是大摆烂了 读书 这八个月读了几本有趣的书 自己目前最喜欢的是法国作家阿尔贝·加缪 “ 今天，妈妈死了。也可能是昨天，我不知道。” ”现在我面对这个充满了星光与默示的夜，第一次向这个冷漠的世界敞开了我的心扉“ ——-加缪《局外人》 当在这八个月以来压抑的网课以及疫情防控的影响下，烦躁的内心终于静了下来，总能去做一些有艺术的事情，比如说，思考，读书，学习等。这本局外人是我读的印象最深刻的一本书。文章情节不复杂一个下午便能读完。 这本书的主人公叫默尔索，他因为做了很多世人无法理解的行为，而被法兰西法官判为死刑，关于细节可以在网上随便就能搜索到。 默尔索的行为真的是荒诞的吗？我想肯定有些部分是荒诞的，但是面对群众以及神职人员对于洗礼罪恶的喋喋不休，他并没有所打动，坚持用自己的语言表达对生活的热爱。他们虽然清醒地认识到人的脆弱和局限，以及世界和人生必然的荒谬，但他们却并没有被击垮，而是勇敢地面对，并努力地克服这种悲剧和荒谬，最终让自己获得了幸福。 我认为在这一点上，加缪的思想，要远比很多传统的宗教和哲学，有价值得多。因为对于人生的荒谬，虽然它们也有认识，但给出的答案，要么就是放弃今生祈求来世，要么就是过于宏大，什么爱、什么美、什么善。却唯独忘了干！ 加缪曾说：不要走在我的后面，我可能不会引路；不要走在我的前面，我可能不会跟随；请走在我的身边，做我的朋友！ 骑行有些路，没有路过，这是我的遗憾，很多人不理解骑行是为了什么？曾经的当然我也是这样认为的，自己在北京的远郊区经常会有骑行爱好者，因此便产生这个疑问。 因为健康骑的方式让我爱上了骑行这项运动，让我心中久违的梦再次点燃。最初从骑10千米都困难到一口气骑了80km，配速从不到20km/h到现在的25km/h这是我四个月骑行来的变化。 太阳西下，总会给人一种遐想，是渴望心灵与大自然的碰撞，也许是对生活和理想的不满，梦与实际的不解。四个月来的晚上，我带着余霞，骑着初中买的UCC山地车出发了……下一次我会骑向哪里呢？ 小玩意都是在四月前完成的，都是为了向心爱的女孩去表达自己的心意，一项是自己写的情书网页，在GitHub上已经设置为private了，因为代码写的太羞耻了，内容写的也很“螺旋马太”。 还有一项是用单片机arduino和面包板焊接锡线做出来的爱心流水灯，学习了不少关于焊接的知识，但是都不如用pcb板方便。 图片就不太想放了，技术力太低了。 日语今年在北大考点参加了七月的jlpt n2等级的考试，可惜摆烂了很长时间，甚至只花了两周的时间去备考n2。我想我未来后应该迟早会去日本生活，或者旅行，所以日语依然要继续保持能力。很想去亚洲第一大城市东京去看看，去北海道，名古屋…… 世界那麽大，我想去看看。 博客这半年来并没有写多少博客相关的内容，甚至花不少时间痴迷于博客的美化和魔改博客的搭建记录. | これは神楽の魂のブログ (kaguranotamashii.github.io) 下半年我想在我的博客写一些关于游戏或者影视的评测，提高我的写作水平，比如我最近正在玩的一部gal 青い空のカミュ 关于下半年的期望 写更好的代码 读有趣的书 拥有BMI为28以下的身体 最后用[まごころを、君に] 落幕的台词作为这半年来的结束。我现在所经历的社会环境和这部剧当时的历史环境有着惊人的相似之处，我和上世纪90年代的他们有着深刻的话题。妄图从它中得以治愈…… なに？夢って何かな？夢？そう 夢分からない現実が よく分からないんだ他人の現実と自分の真実との溝が正確に把握できないのね幸せがどこにあるのか分からないんだ夢の中にしか幸せを見いだせないのねだから これは現実じゃない誰もいない世界だそう 夢だから ここには僕がいない都合のいい 作り事で現実の復讐(しゅう)をしていたのねいけないのか虚構に逃げて真実をごまかしていたのね僕 一人の夢を見ちゃいけないのかそれは夢じゃないただの現実の埋め合わせよ〜♪（観衆のざわめき）じゃあ 僕の夢はどこ？それは 現実の続き僕の現実はどこ？それは 夢の終わりよ♪","categories":[{"name":"闲聊杂谈","slug":"闲聊杂谈","permalink":"https://kaguranotamashii.github.io/categories/%E9%97%B2%E8%81%8A%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"年度总结","slug":"年度总结","permalink":"https://kaguranotamashii.github.io/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"},{"name":"闲聊杂谈","slug":"闲聊杂谈","permalink":"https://kaguranotamashii.github.io/tags/%E9%97%B2%E8%81%8A%E6%9D%82%E8%B0%88/"}]},{"title":"LeetcodeNotes","slug":"[main]CS/[main]Leetcode/LeetcodeNotes","date":"2022-07-04T05:41:15.000Z","updated":"2022-07-16T15:37:41.046Z","comments":true,"path":"posts/44870/","link":"","permalink":"https://kaguranotamashii.github.io/posts/44870/","excerpt":"","text":"d 第二天 字符串字符串的遍历「 字符串 」 是一种特殊的 字符数组，字符数组需要有一个长度字段来表示这个数组中的元素个数。而字符串不需要，字符串一定是以\\0结尾的，在 C语言中，字符串的表示如下： 12char c[6] = &quot;Hello&quot;; // (1)char d[5] = &#123; &#x27;H&#x27;, &#x27;e&#x27;, &#x27;l&#x27;, &#x27;l&#x27;, &#x27;o&#x27; &#125;; // (2) 其中 ( 1 ) (1)(1) 表示字符串，它虽然只有五个字符，但是需要有一个结尾字符\\0（它的 ASCII 码值为 0）进行占位，所以字符串长度为 5，但是实际需要 6 个字节的存储空间。 而 ( 2 ) (2)(2) 代表的是一个数组，它的每个元素是一个字符，理解成一个长度为 5 的数组即可。 字符串的长度12char c[6] = &quot;Hello&quot;; printf(&quot;%d\\n&quot;, strlen(c)); 字符串的遍历12345678910111213int len = strlen(s);for(i = 0; i &lt; len; ++i) &#123; // TODO ...&#125;for(i = 0; s[i] != &#x27;\\0&#x27;; ++i) &#123; // TODO ...&#125;for(i = 0; s[i]; ++i) &#123; // TODO ...&#125; 大小写转换1234if(s[i]&gt;=&#x27;A&#x27;&amp;&amp;s[i]&lt;=&#x27;Z&#x27;)&#123; s[i]=s[i]-&#x27;A&#x27;+&#x27;a&#x27;;&#125;//首先，我们可以利用 ASCII 码值的关系比较来确定它是大写字母，还是小写字母，如果是大写字母转成小写字母，可以通过先减去A再加上a，从而转换成小写字母。实现如下： 字符串拷贝123char src[10] = &quot;Hello&quot;;char tar[10];strcpy(tar, src); 字符串比较1234char src[10] = &quot;Hello&quot;;char tar[10] = &quot;hello&quot;;int x = strcmp(tar, src);//！=0int y = strcmp(tar, &quot;hello&quot;);//0 字符串分割12345char str[9] = &quot;I love U&quot;;//变成char str[][5] = &#123; &quot;I&quot;, &quot;love&quot;, &quot;U&quot;&#125;;","categories":[{"name":"Leetcode","slug":"Leetcode","permalink":"https://kaguranotamashii.github.io/categories/Leetcode/"},{"name":"基础知识","slug":"Leetcode/基础知识","permalink":"https://kaguranotamashii.github.io/categories/Leetcode/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","permalink":"https://kaguranotamashii.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"}]},{"title":"vue.js的学习笔记","slug":"[main]CS/[main]web/vue笔记","date":"2022-05-27T13:17:15.000Z","updated":"2022-08-08T16:14:52.022Z","comments":true,"path":"posts/42133/","link":"","permalink":"https://kaguranotamashii.github.io/posts/42133/","excerpt":"","text":"vue.js开发环境关于作者尤雨溪是Vue.js框架的作者，他是我最佩服的华人程序员之一，他的编码经历深深的激励着我。 程序员最讲究的就是作品，光说没用，代码要拿出来溜溜！所以现在程序员都得有自己的GitHub。 Vue作者尤雨溪：以匠人的态度不断打磨完善Vue（图灵访谈） - 百度文库 (baidu.com) 他还是位老二次元哈哈哈，不同版本都用经典动漫和小说作为版本名称 版本 发布日期 版本名称 3.2 2021年8月5日 Quintessential Quintuplets[12] 3.1 2021年6月7日 Pluto[13] 3.0 2020年9月18日 One Piece[14] 2.6 2019年2月4日 Macross[15] 2.5 2017年10月13日 Level E[16] 2.4 2017年7月13日 Kill la Kill[17] 2.3 2017年4月27日 JoJo’s Bizarre Adventure[18] 2.2 2017年2月26日 Initial D[19] 2.1 2016年11月22日 Hunter X Hunter[20] 2.0 2016年9月30日 Ghost in the Shell[21] 1.0 2015年10月27日 Evangelion[22] 0.12 2015年6月12日 Dragon Ball[23] 0.11 2014年11月7日 Cowboy Bebop[24] 0.10 2014年3月23日 Blade Runner[25] 0.9 2014年2月25日 Animatrix[26] 0.8 2014年1月27日 不适用 [27] 0.7 2013年12月24日 不适用 [28] 0.6 2013年12月8日 VueJS [29] 关于vscode123Vue 3 Snippets:快速生成Vue3代码的插件Vetur 的特性: 语法高亮, 代码片段 (emmet 给我的感觉是一个写好了的 snippet), 质量提示 &amp; 错误、格式化 / 风格、智能提示等。&lt;script src=&quot;https://cdn.staticfile.org/vue/2.7.0/vue.min.js&quot;&gt; 1Vue.config.productionTip = false//设置为 false 以阻止 vue 在启动时生成生产提示。 认识vue1234567891011121314&lt;div id=&quot;root&quot;&gt; &lt;h1&gt;Hello,宋宇然&lt;/h1&gt; &lt;h1&gt;我的年龄为：&#123;&#123;name&#125;&#125;&lt;/h1&gt; &lt;/div&gt; &lt;script&gt; //const x = new Vue(&#123; el: &#x27;#root&#x27;,//element data: &#123; name: &#x27;a&#x27; &#125; &#125; ) &lt;/script&gt; 想让vue工作要先创建vue实例，root容器代码依然符合html规范只不过里面引入了特殊的vue语法而已，root里面的代码称之为vue模板 插值语法 v-on 绑定事件 1234567891011121314151617181920&lt;div id=&quot;root&quot;&gt; &lt;img v-bind:src=&quot;url&quot; alt=&quot;&quot;&gt; &lt;button v-on:click=&quot;sayHi&quot;&gt; d点我&lt;/button&gt; &lt;button @click=&quot;sayHi&quot;&gt; d点我&lt;/button&gt;&lt;/div&gt;&lt;script&gt; new Vue(&#123; el: &quot;#root&quot;, data: &#123; url: &quot;../&quot; &#125;, methods: &#123; sayHi() &#123; alert(&quot;hello&quot;) &#125; &#125;, &#125;)&lt;/script&gt; 1234567891011121314151617181920212223242526272829303132333435363738&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script src=&quot;../vue.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;root&quot;&gt; &lt;img v-bind:src=&quot;url&quot; alt=&quot;&quot;&gt; &lt;button v-on:click=&quot;sayHi&quot;&gt; d点我&lt;/button&gt; &lt;button @click=&quot;changImg&quot;&gt; d点我&lt;/button&gt; &lt;/div&gt; &lt;script&gt; new Vue(&#123; el: &quot;#root&quot;, data: &#123; url: &quot;1.png&quot; &#125;, methods: &#123; sayHi() &#123; alert(&quot;hello&quot;) &#125;, changImg() &#123; this.url = &quot;2.png&quot; &#125; &#125;, &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; v-on绑定方法 v-bind 绑定属性 绑定文本 123npm install -g cnpm --registry=https://registry.npm.taobao.org 脚手架123npm install -g @vue/cli使用vue项目 vue create hello启动服务器 npm run serve 创建vue项目 创建项目 执行:vue create xxxx xxxx是项目名,不要大写和特殊符号 数据双向绑定1234567891011121314151617181920212223242526272829&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;input v-model=&quot;message&quot;&gt; &lt;input v-model=&quot;formData.username&quot;&gt;&lt;br&gt; &lt;input v-model=&quot;formData.password&quot;&gt; &lt;button v-on:click=&quot;subit&quot;&gt;提交&lt;/button&gt; &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt; &lt;/div&gt; &lt;script&gt; new Vue(&#123; el: &quot;#app&quot;, data: &#123; number: 0, message: &quot;hello&quot;, formData: &#123; username: &#x27;&#x27;, password: &#x27;&#x27;, &#125; &#125;, methods: &#123; subit() &#123; console.log(this.formData) &#125; &#125;, &#125;) &lt;/script&gt;&lt;/body&gt; 条件和循环控制切换一个元素是否显示也相当简单： 123456789&lt;div id=&quot;app-3&quot;&gt; &lt;p v-if=&quot;seen&quot;&gt;现在你看到我了&lt;/p&gt;&lt;/div&gt;var app3 = new Vue(&#123; el: &#x27;#app-3&#x27;, data: &#123; seen: true &#125;&#125;) 现在你看到我了 继续在控制台输入 app3.seen = false，你会发现之前显示的消息消失了。 1 外，Vue 也提供一个强大的过渡效果系统，可以在 Vue 插入/更新/移除元素时自动应用过渡效果。 还有其它很多指令，每个都有特殊的功能。例如，v-for 指令可以绑定数组的数据来渲染一个项目列表： 1234567891011121314151617&lt;div id=&quot;app-4&quot;&gt; &lt;ol&gt; &lt;li v-for=&quot;todo in todos&quot;&gt; &#123;&#123; todo.text &#125;&#125; &lt;/li&gt; &lt;/ol&gt;&lt;/div&gt;var app4 = new Vue(&#123; el: &#x27;#app-4&#x27;, data: &#123; todos: [ &#123; text: &#x27;学习 JavaScript&#x27; &#125;, &#123; text: &#x27;学习 Vue&#x27; &#125;, &#123; text: &#x27;整个牛项目&#x27; &#125; ] &#125;&#125;) 学习 JavaScript 学习 Vue 整个牛项目 在控制台里，输入 app4.todos.push(&#123; text: &#39;新项目&#39; &#125;)，你会发现列表最后添加了一个新项目。 Vue 还提供了 v-model 指令，它能轻松实现表单输入和应用状态之间的双向绑定。 12345678910&lt;div id=&quot;app-6&quot;&gt; &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt; &lt;input v-model=&quot;message&quot;&gt;&lt;/div&gt;var app6 = new Vue(&#123; el: &#x27;#app-6&#x27;, data: &#123; message: &#x27;Hello Vue!&#x27; &#125;&#125;) 事件修饰符 prevent 阻止默认事件 stop 阻止事件冒泡 once 事只能触发一次 键盘事件123456789101112131415161718192021222324252627282930&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script src=&quot;../vue.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;h2&gt;欢迎来学习&lt;/h2&gt; &lt;input type=&quot;text&quot; placeholder=&quot;回车后提示输入 &quot; @keyup.enter=&quot;a&quot;&gt; &lt;/div&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#app&#x27;, methods: &#123; a(e) &#123; console.log(e.target.value) &#125; &#125;, &#125;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 计算属性computed1234567conputed&#123;fullname:&#123;get()&#123;//get 当读取fullname时get就会被调用作为返回值&#125;&#125;&#125; 监视1234567watch: &#123; isHot: &#123; handler() &#123; console.log(&quot;修改了&quot;) &#125; &#125; &#125; 123vm.$watch&#123;&#125; 条件渲染v-show 12345678&lt;div id=&quot;app&quot;&gt; &lt;h2 v-show=&quot;false&quot;&gt;aaaaa&lt;/h2&gt;&lt;/div&gt;&lt;script&gt; new Vue(&#123; el: &#x27;#app&#x27; &#125;)&lt;/script&gt; 1234v-if &lt;div id=&quot;app&quot;&gt; &lt;h2 v-if=&quot;11==1&quot;&gt;aaaaa&lt;/h2&gt; &lt;/div&gt; 列表渲染12345678910111213141516171819202122&lt;body&gt; &lt;div id=&quot;root&quot;&gt; &lt;ui&gt; &lt;li v-for=&quot;person in persons&quot; :key=&quot;person.id&quot;&gt;&#123;&#123;person.name&#125;&#125;-&#123;&#123;person.age&#125;&#125;&lt;/li&gt; &lt;/ui&gt; &lt;/div&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#root&#x27;, data: &#123; persons: [ &#123; id: &#x27;01&#x27;, name: &#x27;宋宇然&#x27;, age: 17 &#125;, &#123; id: &#x27;02&#x27;, name: &#x27;市政厅&#x27;, age: 19 &#125;, &#123; id: &#x27;03&#x27;, name: &#x27;虞美人&#x27;, age: 15 &#125;, ] &#125; &#125;) &lt;/script&gt; &lt;!-- key要写--&gt; 关于key为什么要写 如果是在这种情况下li里面夹着input，add一个新的列表，会改变input的值，无法同步，这时候key就又存在的必要性了 (99条消息) Vue中key的作用及原理_纸照片的博客-CSDN博客_vue中的key 1234567891011121314151617181920212223242526272829303132333435363738&lt;body&gt; &lt;div id=&quot;root&quot;&gt; &lt;h2&gt;人员列表&lt;/h2&gt; &lt;input type=&quot;text&quot; placeholder=&quot;请输入名字&quot; v-model=&quot;keyWord&quot;&gt; &lt;ul&gt; &lt;li v-for=&quot;(p,index) of filPerons&quot; :key=&quot;index&quot;&gt; &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.13/vue.js&quot;&gt;&lt;/script&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#root&#x27;, data: &#123; keyWord: &#x27;&#x27;, persons: [ &#123; id: &#x27;001&#x27;, name: &#x27;马冬梅&#x27;, age: 19, sex: &#x27;女&#x27; &#125;, &#123; id: &#x27;002&#x27;, name: &#x27;周冬雨&#x27;, age: 20, sex: &#x27;女&#x27; &#125;, &#123; id: &#x27;003&#x27;, name: &#x27;周杰伦&#x27;, age: 21, sex: &#x27;男&#x27; &#125;, &#123; id: &#x27;004&#x27;, name: &#x27;温兆伦&#x27;, age: 22, sex: &#x27;男&#x27; &#125; ], filPerons: [] &#125;, watch: &#123; keyWord: &#123; immediate: true, handler(val) &#123; this.filPerons = this.persons.filter((p) =&gt; &#123; return p.name.indexOf(val) !== -1 &#125;) &#125; &#125; &#125; &#125;) &lt;/script&gt;&lt;/body&gt; vue更新的问题1234567updateMei() &#123; // this.persons[0].name = &#x27;马老师&#x27; //奏效 // this.persons[0].age = 50 //奏效 // this.persons[0].sex = &#x27;男&#x27; //奏效 // this.persons[0] = &#123;id:&#x27;001&#x27;,name:&#x27;马老师&#x27;,age:50,sex:&#x27;男&#x27;&#125; //不奏效 this.persons.splice(0, 1, &#123; id: &#x27;001&#x27;, name: &#x27;马老师&#x27;, age: 50, sex: &#x27;男&#x27; &#125;)&#125; 1234addSex()&#123; // Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;) this.$set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)&#125; ​ &lt;!— ​ Vue监视数据的原理： ​ \\1. vue会监视data中所有层次的数据。 ​ \\2. 如何监测对象中的数据？ ​ 通过setter实现监视，且要在new Vue时就传入要监测的数据。 ​ (1).对象中后追加的属性，Vue默认不做响应式处理 ​ (2).如需给后添加的属性做响应式，请使用如下API： ​ Vue.set(target，propertyName/index，value) 或 ​ vm.$set(target，propertyName/index，value) ​ \\3. 如何监测数组中的数据？ ​ 通过包裹数组更新元素的方法实现，本质就是做了两件事： ​ (1).调用原生对应的方法对数组进行更新。 ​ (2).重新解析模板，进而更新页面。 ​ 4.在Vue修改数组中的某个元素一定要用如下方法： ​ 1.使用这些API:push()、pop()、shift()、unshift()、splice()、sort()、reverse() ​ 2.Vue.set() 或 vm.$set() ​ ​ 特别注意：Vue.set() 和 vm.$set() 不能给vm 或 vm的根数据对象 添加属性！！！ ​ —&gt; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;!-- 收集表单数据： 若：&lt;input type=&quot;text&quot;/&gt;，则v-model收集的是value值，用户输入的就是value值。 若：&lt;input type=&quot;radio&quot;/&gt;，则v-model收集的是value值，且要给标签配置value值。 若：&lt;input type=&quot;checkbox&quot;/&gt; 1.没有配置input的value属性，那么收集的就是checked（勾选 or 未勾选，是布尔值） 2.配置input的value属性: (1)v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值） (2)v-model的初始值是数组，那么收集的的就是value组成的数组 备注：v-model的三个修饰符： lazy：失去焦点再收集数据 number：输入字符串转为有效的数字 trim：输入首尾空格过滤 --&gt; &lt;div id=&quot;root&quot;&gt; &lt;form @submit.prevent=&quot;demo&quot;&gt; 账号：&lt;input type=&quot;text&quot; v-model.trim=&quot;userInfo.account&quot;&gt; &lt;br/&gt;&lt;br/&gt; 密码：&lt;input type=&quot;password&quot; v-model=&quot;userInfo.password&quot;&gt; &lt;br/&gt;&lt;br/&gt; 年龄：&lt;input type=&quot;number&quot; v-model.number=&quot;userInfo.age&quot;&gt; &lt;br/&gt;&lt;br/&gt; 性别： 男&lt;input type=&quot;radio&quot; name=&quot;sex&quot; v-model=&quot;userInfo.sex&quot; value=&quot;male&quot;&gt; 女&lt;input type=&quot;radio&quot; name=&quot;sex&quot; v-model=&quot;userInfo.sex&quot; value=&quot;female&quot;&gt; &lt;br/&gt;&lt;br/&gt; 爱好： 学习&lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.hobby&quot; value=&quot;study&quot;&gt; 打游戏&lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.hobby&quot; value=&quot;game&quot;&gt; 吃饭&lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.hobby&quot; value=&quot;eat&quot;&gt; &lt;br/&gt;&lt;br/&gt; 所属校区 &lt;select v-model=&quot;userInfo.city&quot;&gt; &lt;option value=&quot;&quot;&gt;请选择校区&lt;/option&gt; &lt;option value=&quot;beijing&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;shanghai&quot;&gt;上海&lt;/option&gt; &lt;option value=&quot;shenzhen&quot;&gt;深圳&lt;/option&gt; &lt;option value=&quot;wuhan&quot;&gt;武汉&lt;/option&gt; &lt;/select&gt; &lt;br/&gt;&lt;br/&gt; 其他信息： &lt;textarea v-model.lazy=&quot;userInfo.other&quot;&gt;&lt;/textarea&gt; &lt;br/&gt;&lt;br/&gt; &lt;input type=&quot;checkbox&quot; v-model=&quot;userInfo.agree&quot;&gt;阅读并接受&lt;a href=&quot;http://www.atguigu.com&quot;&gt;《用户协议》&lt;/a&gt; &lt;button&gt;提交&lt;/button&gt; &lt;/form&gt; &lt;/div&gt; &lt;/body&gt; &lt;script type=&quot;text/javascript&quot;&gt; Vue.config.productionTip = false new Vue(&#123; el:&#x27;#root&#x27;, data:&#123; userInfo:&#123; account:&#x27;&#x27;, password:&#x27;&#x27;, age:18, sex:&#x27;female&#x27;, hobby:[], city:&#x27;beijing&#x27;, other:&#x27;&#x27;, agree:&#x27;&#x27; &#125; &#125;, methods: &#123; demo()&#123; console.log(JSON.stringify(this.userInfo)) &#125; &#125; &#125;) &lt;/script&gt;&lt;/html&gt; v-text12345678910111213141516171819202122&lt;body&gt; &lt;!-- 我们学过的指令： v-bind : 单向绑定解析表达式, 可简写为 :xxx v-model : 双向数据绑定 v-for : 遍历数组/对象/字符串 v-on : 绑定事件监听, 可简写为@ v-if : 条件渲染（动态控制节点是否存存在） v-else : 条件渲染（动态控制节点是否存存在） v-show : 条件渲染 (动态控制节点是否展示) v-text指令： 1.作用：向其所在的节点中渲染文本内容。 2.与插值语法的区别：v-text会替换掉节点中的内容，&#123;&#123;xx&#125;&#125;则不会。 --&gt; &lt;!-- 准备好一个容器--&gt; &lt;div id=&quot;root&quot;&gt; &lt;div&gt;你好，&#123;&#123;name&#125;&#125;&lt;/div&gt; &lt;div v-text=&quot;name&quot;&gt;&lt;/div&gt; &lt;div v-text=&quot;str&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/body&gt; v-html12345678910111213141516171819202122232425262728293031&lt;body&gt; &lt;!-- v-html指令： 1.作用：向指定节点中渲染包含html结构的内容。 2.与插值语法的区别： (1).v-html会替换掉节点中所有的内容，&#123;&#123;xx&#125;&#125;则不会。 (2).v-html可以识别html结构。 3.严重注意：v-html有安全性问题！！！！ (1).在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击。 (2).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！ --&gt; &lt;!-- 准备好一个容器--&gt; &lt;div id=&quot;root&quot;&gt; &lt;div&gt;你好，&#123;&#123;name&#125;&#125;&lt;/div&gt; &lt;div v-html=&quot;str&quot;&gt;&lt;/div&gt; &lt;div v-html=&quot;str2&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;script type=&quot;text/javascript&quot;&gt; Vue.config.productionTip = false //阻止 vue 在启动时生成生产提示。 new Vue(&#123; el:&#x27;#root&#x27;, data:&#123; name:&#x27;尚硅谷&#x27;, str:&#x27;&lt;h3&gt;你好啊！&lt;/h3&gt;&#x27;, str2:&#x27;&lt;a href=javascript:location.href=&quot;http://www.baidu.com?&quot;+document.cookie&gt;兄弟我找到你想要的资源了，快来！&lt;/a&gt;&#x27;, &#125; &#125;)&lt;/script&gt;","categories":[{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"前端","slug":"编程/前端","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"},{"name":"vue框架","slug":"编程/前端/vue框架","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/vue%E6%A1%86%E6%9E%B6/"}],"tags":[{"name":"vue框架","slug":"vue框架","permalink":"https://kaguranotamashii.github.io/tags/vue%E6%A1%86%E6%9E%B6/"}]},{"title":"git出现的问题","slug":"[main]hexo/git出现的问题","date":"2022-04-11T15:22:08.000Z","updated":"2022-07-16T15:37:41.539Z","comments":true,"path":"posts/58072/","link":"","permalink":"https://kaguranotamashii.github.io/posts/58072/","excerpt":"今天学习使用vscode的源代码管理时候同步时出现了fatal: unable to access ‘xxxx: Failed to connect to github.com port 443 after 21098 ms: Timed out这个错误。","text":"今天学习使用vscode的源代码管理时候同步时出现了fatal: unable to access ‘xxxx: Failed to connect to github.com port 443 after 21098 ms: Timed out这个错误。 提示含义是通过443端口连接github.com错误。 解决办法为 123git config --global --unset http.proxy#删除配置git config --global http.proxy 127.0.0.1:xxxx#根据自己的代理插件设置全局端口git config --local http.proxy 127.0.0.1:xxxx #为某个 git 项目单独设置代理 比如我用某个小猫默认的7080 om/20220411232828.png)","categories":[{"name":"git","slug":"git","permalink":"https://kaguranotamashii.github.io/categories/git/"}],"tags":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"https://kaguranotamashii.github.io/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"},{"name":"git","slug":"git","permalink":"https://kaguranotamashii.github.io/tags/git/"}]},{"title":"Java SE","slug":"[main]CS/[main]computer-language/java基础学习笔记 (2)","date":"2022-02-21T05:47:24.000Z","updated":"2022-07-16T15:37:41.547Z","comments":true,"path":"posts/19402/","link":"","permalink":"https://kaguranotamashii.github.io/posts/19402/","excerpt":"","text":"DOS 12345cd testcopy nul a.txtecho 123&gt;a.txtdel a.txt 变量constant 常量1final type barName=valie; 变量的分类局部变量 成员变量 静态变量 局部变量在方法语句块 成员变量 对象 类内部，方法外面 从属对象 会自动默认初始化 静态变量 类内部 static修饰 从属类 primitive data type 整数byte 一字节 -127-127 short 2字节 -2^15-2^15-1 int 4字节 2^31-2^32-1 long 8字节 -2^63 十进制 八进制以0开头 十六进制以0x 0X 二进制0b oB开头 floating point numberfloat四字节 double八字节 字符型booleantrue false 一个字节或者四个字节 运算符 强制转换类 cast（type）var Scanner处理键盘输入1234567891011121314import java.util.Scanner;public class Scanner1 &#123; public static void main(String[] args) &#123; Scanner s =new Scanner(System.in); System.out.println(&quot;请输入用户名&quot;); String uname =s.nextLine(); System.out.println(&quot;输入你的年龄&quot;); int age=s.nextInt(); System.out.println(&quot;用户名&quot;+uname); System.out.println(&quot;年龄&quot;+age); &#125;&#125; 控制语句APIstring 123456String name=new string(&quot;name&quot;);String name=&quot;name&quot;;char[]value=&#123;&#x27;a&#x27;,&#x27;b,&#x27;c&#125;;String s3=new String(value);byte[]bytes=&#123;97,98,99,100&#125;;String s4=new String(bytes); 统计单词数量123456789101112131415161718192021222324import java.util.Arrays;import java.util.Scanner;public class HelloWorld &#123; public static void main(String[] args) &#123; String str=&quot;hello world abc hello hello hello hello hello&quot;; System.out.println(); HelloWorld he=new HelloWorld(); int count=he.wordCount(str,&quot;hello&quot;); System.out.println(count);; &#125; public int wordCount(String art,String word)&#123; //1先把文章打散成数组 String[] words = art.split(&quot; &quot;); int res=0; for (int i = 0; i &lt; words.length; i++) &#123; if(words[i].equalsIgnoreCase(word))&#123; res++; &#125; &#125; return res; &#125;&#125; scannerequals1234if(name.equals(name_1)&amp;&amp;password_1.equals(password))&#123; System.out.println(&quot;成功&quot;); break; &#125; 遍历charAt123for (int i = 0; i &lt; line.length(); i++) &#123; System.out.println(line.charAt(i)); &#125; stringBuilder的添加和反转StringBuffer 线程安全效率低 StringBuilder相反 append和reverse 12345678910111213 StringBuilder sb=new StringBuilder(); sb.append(&quot;hello&quot;); sb.append(&quot;java&quot;); System.out.println(sb); sb.reverse(); System.out.println(sb);//hellojava//avajollehstringbuilder转为string string s =sb.tostring（）； string转为stringbuilder StringBuilder sb=new StringBuilder(s); IDEA1234567891011121314快捷和补全单行ctrl+/多行ctrl+shitft+/CTRL+alt+L格式化快速生成main（）方法 psvm输入语句sout内容辅助CTRL+shifr+space\\自动生成构造器insert+alt查看错误alt+enter看源码ctrl+左键 数组Array 数组必须初始化使用 数组的遍历1234567[0,length-1] int []a=&#123;2,2,2,2&#125;; Arrays.sort(a); //二分查找索引 System.out.println(Arrays.binarySearch(a,2)); //数组填充 Arrays.fill(a,0,3,55); foe-each1234567//用于数组或者容器读取public static void main(String[] args)&#123; String []ss=&#123;&quot;12321&quot;,&quot;123&quot;&#125;; for(String temp:ss)&#123; sout(temp); &#125;&#125; arraycopy1234567891011arraycopy(object,int srcpos,object,int destpos,intlenght)public class string &#123; public static void main(String[] args) &#123; String[] s=&#123;&quot;阿里&quot;,&quot;尚学堂&quot;,&quot;东京&quot;&#125;; String []sBak=new String[4]; System.arraycopy(s,0,sBak,0,s.length); System.out.println(Arrays.toString(sBak)); &#125;&#125; 静态 type name = new type【length】 123int a[] =new int [5];int [] arr =new int [5];int []arr=&#123;551,2,377&#125;; 数组的扩容 12345678910int[] a=&#123;1,2,3&#125;;int[] temp=new int [a.length*2];for (int i = 0; i &lt; a.length; i++) &#123; temp[i]=a[i];&#125;a=temp;a[a.length-2]=11;for (int i = 0; i &lt; a.length; i++) &#123; System.out.println(a[i]);&#125; Comparalbe12 双指针思想12345678910111213141516171819202122int a[]=&#123;12,231,3421,33,3131,234&#125;;int b[]=&#123;321,31,345,23,54,7676&#125;; while (i&lt;a.length||j&lt;b.length)&#123; if(i==a.length)&#123; c[i+j]=b[j]; j++;continue; &#125; if(j==b.length)&#123; c[i+j]=a[i]; i++;continue; &#125; if(a[i]&gt;b[j])&#123; c[i+j]=b[j]; j++; &#125;else&#123; c[i+j]=a[i]; i++; &#125;&#125; arrayList 集合（超级数组）123456789101112 ArrayList&lt;String&gt; array =new ArrayList&lt;&gt;(); System.out.println(array); array.add(&quot;hello world&quot;); array.add(&quot;java&quot;);array.add(&quot;java good&quot;); System.out.println(array); array.add(1,&quot;syr&quot;); System.out.println(array); [][hello world, java, java good][hello world, syr, java, java good] arraylist基本常用方法 public boolean remove(obiect o) 删除指定元素 public E remove(int index) 删除索引元素，返回被删元素 public E set(int index,E element) 修改，返回被修改的元素 public E get（int index） 返沪索引元素 public int size（） 返回集合的元素 链表方法methodJava方法是语句的集合，它们在一起执行一个功能。 方法是解决一类问题的步骤的有序组合 方法包含于类或对象中 方法在程序中被创建，在其他地方被引用 1234定义 public static type name()&#123; &#125; 方法重载overload 多个方法在一个类 方法具有相同的方法名 返回类型或者数量不同 一个类中定义多个名称相同，但是参数泪飙不同的的方法 123456789101112131415161718192021public class fangfa &#123; public static void main(String[] args) &#123; System.out.println(sum(123,2131)); System.out.println(sum(12.1,23.1)); System.out.println(sum(123,231,32)); &#125; //int add public static int sum(int a,int b)&#123; return a+b; &#125; public static double sum(double a,double b)&#123; return a+b; &#125; public static int sum(int a,int b,int c)&#123; return a+b+c; &#125;&#125;//225435.2386 可变参数12345public class Text&#123; public int plus(int...nums)&#123; return &#125;&#125; 递归StackOverflowError 大量占用系统堆栈 包装类和自动拆装箱1 类和对象（Object Oriented Programing）类是java基本的组成结构 类的定义123456public class car&#123; //每个文件必须有一个public class，名字与文件名相同&#125;class tyre&#123;&#125;//可以定义多个classclass engine&#123;&#125;class seat&#123;&#125; 对于一个类来说有三种成员 field属性 成员变量属性用于定义这个类或者更类对象包含的数据或者静态特征 修饰符 type name=默认 method方法方法从属于类和对象 修饰符 返回类型 name（）{ 构造方法 构造器 constructor构造器能用于对象的初始化，而不是创建对象 构造器用new关键字调用 构造器虽然没有返回值，但不能定义返回值类型 如果没有定义构造器，则编译器会自动定义一个无参的构造方法，如果一定义的则编译器不会自动添加 构造器的方法名必须与类名字相同 课堂练习可以生成具有特定坐标的点对象 提供可以计算点到另外一点距离的方法 12345678910111213141516171819package 第五章面向对象.构造器.点;public class Point &#123; double x,y; Point (double _x,double _y)&#123; x=_x;y=_y; &#125; public double getDistance(Point p)&#123; return Math.sqrt((x-p.x)*(y-p.y)+(y-p.y)*(y-p.y)); &#125; public static void main(String[] args) &#123; Point p1=new Point(3.0,4.0); Point origin =new Point(0.0,0.0); System.out.println(p1.getDistance(origin)); &#125;&#125; 构造方法的重载jvm虚拟机 栈的特点 堆的特点 Garbage Collection垃圾回收机制垃圾回收过程 发现无用的对象 回收无用对象占用内存空间 无用对象为没有任何引用 算法1引用计数法 通用的分代垃圾回收机制 内存泄漏创建大量的无用对象 1234string str=&quot;&quot;;for(int i=0;i&lt;11000:i++)&#123;str+=i;//相当于产生了11000个string对象&#125; 静态集合类的使用hassomap vector list等这些最容易出现，这些静态变量的生命周期 各种连接对象 监听器使用不当 可以用system.gc()但是只是通知jvm object可以用finalize方法，是java给程序员的 this关键词就是当前对象的地址 this用法 普通方法中 this总是指向调用该方法的对象 构造方法中，this总是指向正要初始化的对象 static 静态初始化块构造方法用于对象的普通属性的初始化 静态初始快中，用于初始化类，初始化静态属性 静态初始化快中不能直接访问非static成员 变量分类 包机制package import 相当于文件夹对文件的作用，用于管理类，解决类的重名问题 面向对象三大特征继承extends代码复用，方便建模 1234567891011121314151617181920212223242526272829package 第五章面向对象.extends1;public class text &#123; public static void main(String[] args) &#123; Student s1 =new Student(&quot;songyuran&quot;,11,&quot;CS&quot;); s1.xuexi(); &#125;&#125;class Persin&#123; String name; int height; public void rest()&#123; System.out.println(&quot;xiuxi&quot;); &#125;&#125;class Student extends Persin&#123; String major; public void xuexi()&#123; System.out.println(&quot;xuexi&quot;); rest(); System.out.println(this.name); &#125; public Student(String name,int height,String major)&#123; this.name=name; this.height=height; this.major=major; &#125;&#125; instanceof判断类型12s1 instanceof Person//trues1 instanceof Student//true 父类 又叫超类 基类 子类：派生类 接口有多继承 方法重写override子类重写父亲的方法，替换父类行为，重写是实现多态的必要条件 == 方法名字 形参列表 《=返回值类型和声明异常类型，子类小于等于父类 》=子类大于父类 final关键词 修饰变量 修饰方法 不可被子类重写，但是可以重载，final class a{} 修饰类 不可被继承 组合组合比较灵活，继承只能有一个父类，组合可以有多个属性 封装三大特征之一 提高安全 复用 高内聚低耦合 封装的实现关键词访问限制修饰符 1234567891011package text.b;public class Test &#123; public static void main(String[] args) &#123; User u=new User(99,&quot;宋宇然&quot;,true); System.out.println(u.getId()); System.out.println(u.getName()); System.out.println(u.isMan()); &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435363738394041424344package text.b;public class User &#123; private int id; private String name; private boolean man; public int getId() &#123; return id; &#125; public void setId(int id) &#123; this.id = id; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public boolean isMan() &#123; return man; &#125; public void setMan(boolean man) &#123; this.man = man; &#125; public void printUserInfo()&#123; System.out.println(id); System.out.println(man); System.out.println(name); &#125; public User(int id, String name, boolean man) &#123; this.id = id; this.name = name; this.man = man; &#125;&#125; 多态polymorphism同一种方法调用 不同对象行为完全不同 123456789101112131415161718public class Animal&#123; public void shout()&#123; System.out.println(&quot;叫了一声&quot;); &#125;&#125;class Dog extends Animal&#123; public void shout()&#123; System.out.println(&quot;wangwang&quot;); &#125; public void seeDoor()&#123; System.out.println(&quot;see door&quot;); &#125;&#125;class Cat extends Animal&#123; public void shout()&#123; System.out.println(&quot;miaomiao&quot;); &#125;&#125; 123456789public class TestPolym&#123; public static void main(String[] args)&#123; animaCry(new DOg()); animalCry(new Cat()); &#125; static void animalCry(Animal a)&#123; a.shout(); &#125;&#125; 对象的转型casting父类引用指向子类叫向上转型，属于自动 反之 123456789101112public class TestPolym&#123; public static void main(String[] args)&#123; Animal animal=new Dog(); animal.shout(); //不能运行animal.seeDoor();需要强制转换 Dog d =(Dog)animal; d.seeDoor(); &#125; static void animalCry(Animal a)&#123; a.shout(); &#125;&#125; Object类所有类是Object的子类 hashCode1 toString返回地址1234567891011121314public class tosting &#123; String name; String pwd; @Override public String toString() &#123; return &quot;用户名&quot;+name+&quot;密码&quot;+pwd; &#125; public static void main(String[] args)&#123; tosting to=new tosting(); System.out.println(to.toString()); &#125;&#125; equals和====代表对方是否相同，type和地址 equals()比较内容相同 equals()默认比较两个对象的hashcode 可以重写equals 重写equals()1234567891011121314151617181920212223public class TestObject extends Object&#123; int id; String name; String pwd; public TestObject(int id,String name,String pwd)&#123; this.name=name; this.pwd=pwd; this.id=id; &#125; @Override public boolean equals(Object o)&#123; if(this==o)return true; if(o==null||getclass()!=o.getClass())return false; return id==that.id; &#125; public String toString()&#123;return &quot;用户名:&quot; +name+&quot;密码:&quot;+pwd;&#125; public static void main(String[] args)&#123; TestObject t= new TestObject(1001,&quot;zhangshan,&quot;123456); TestObject t2=new TestObject(1001,&quot;zhangwu,&quot;123123123); System.out.println(t.equals(t2)); &#125;&#125; supersuper可以看作直接父类对象的引用 在一个类中，若是构造方法第一行没有第哦啊用super或者this java默认调用 在子类的方法中，访问父类的成员变量 在子类的成语方法中，访问父亲的成员方法 在子类的构造方法中访问父类的构造方法 12public class test 抽象类和接口抽象方法和抽象类 抽象方法 ** 使用abstract修饰方法 没有方法体 只有声明 定义是一种规范 就是告诉子类必须要给抽象方法具体实现 抽象类 包含抽象方法的类叫抽象类 通过抽象类可以严格限制子类的设计，使得子类之间梗通用 接口interface是一组规范，所以类要遵守 1 内部类inner 123456public class Outer&#123; private int age=19; public void show&#123; System.out.println(&quot;ss&quot;); &#125;&#125; l类包装类 字符串类 时间处理相关类 其他类 基本数据类型wrapper class 12Integer i=Integer.valueOf(100);//java9推荐用法Integer j=new Integer(100);//不推荐 异常 error程序无法处理错误比较严重 异常2声明异常 throws子句正则表则语法规则内容限定123456789101112String regex=&quot;[a]&quot;; String regex1=&quot;[a-z]&quot;; String regex2=&quot;[a-zA-Z0-9]&quot;; //取反 String regex3=&quot;^ab&quot;; String content=&quot;a&quot;; String content1=&quot;A&quot;; String content2=&quot;c&quot;; System.out.println(content.matches(regex1));//true System.out.println(content1.matches(regex1));//false System.out.println(content1.matches(regex2));//true System.out.println(content2.matches(regex3));//true 长度限定12345//正则中通过&#123;&#125;表示长度//[a-z]&#123;5&#125;表示小写a-z而且长度必须为5//[a-z]&#123;5，8&#125;表示小写a-z而且长度必须为5到8包括5，8//[a-z]&#123;2,&#125;表示小写a-z而且长度最小长为2//[a-z]&#123;5&#125;表示小写a-z而且长度必须为5 长度限定符号123?&#123;0,1&#125;+&#123;1,&#125;*&#123;0,&#125; 预定义字符1 正则表达式中组合定义12345//电话号码的正则\\\\d&#123;3,4&#125;-//必须字母开头 最少4最长8[a-z]&#123;1&#125;\\\\w&#123;3,8&#125;//电话号码的正则\\\\d&#123;3,4&#125;- 集合stack先进后出 � stack先进后出","categories":[{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"java","slug":"编程/java","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://kaguranotamashii.github.io/tags/java/"}]},{"title":"日常分享","slug":"[main]summary/日常分享","date":"2022-02-16T12:35:32.000Z","updated":"2022-07-17T15:49:22.385Z","comments":true,"path":"posts/54547/","link":"","permalink":"https://kaguranotamashii.github.io/posts/54547/","excerpt":"","text":"虽然说折磨黑苹果是快乐的事情，但是你选择了淘宝120元的服务。说实话，我这台黑苹果 是一体机戴尔optiplex5260，我高中的时候也试过很多个EFI，也没有成功，无奈选择了淘宝的黑苹果服务，师傅花了三四小时换EFI，最后终于弄成半完美。 123456戴尔optiplex5260i58500uhd630三星DDR4 2666hz目前还有麦克风不能用，耳机只能用蓝牙以外都没有太大的问题了，xcode完美使用 链接：https://pan.baidu.com/s/1ofmjPTdfuhRmyOi2owbIyw提取码：yhc1 在mac上敲代码和win的体检不太一样，mac的idea多了些功能比如说符号。 xcode是纯英文，使用起来有些困难。 02202162117482.png)","categories":[{"name":"闲聊杂谈","slug":"闲聊杂谈","permalink":"https://kaguranotamashii.github.io/categories/%E9%97%B2%E8%81%8A%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"黑苹果","slug":"黑苹果","permalink":"https://kaguranotamashii.github.io/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"}]},{"title":"jQuery基础","slug":"[main]CS/[main]web/jQuery基础","date":"2022-02-11T16:30:17.000Z","updated":"2022-08-03T15:07:35.413Z","comments":true,"path":"posts/26/","link":"","permalink":"https://kaguranotamashii.github.io/posts/26/","excerpt":"","text":"Jquery概述jquery没什么学的必要故性123456&lt;script&gt; //获取元素节点$(&quot;xuanzeqi&quot;) $(&quot;button&quot;).click(function () &#123; console.log(&quot;aaa&quot;) &#125;)&lt;/script&gt; 获取节点$(“xuanzeqi”) 操作节点$().method(); 设置元素样态$().css() Jquery常用的方法 123$(&quot;button&quot;).click(function () &#123; $(this).hide() &#125;)//隐藏当前元素 鼠标事件 键盘事件 表单事件 文档/窗口事件 click keypress submit load dblclick keydown change resize mouseenter keyup focus scroll mouseleave blur unload hover |","categories":[{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"前端","slug":"编程/前端","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"},{"name":"jquery","slug":"编程/前端/jquery","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/jquery/"}],"tags":[{"name":"jquery","slug":"jquery","permalink":"https://kaguranotamashii.github.io/tags/jquery/"}]},{"title":"swift学习笔记","slug":"[main]CS/[main]computer-language/swift学习笔记","date":"2022-01-21T13:16:51.000Z","updated":"2022-07-16T15:37:41.550Z","comments":true,"path":"posts/53084/","link":"","permalink":"https://kaguranotamashii.github.io/posts/53084/","excerpt":"乐，swift确实是一门好的语言，但是我恐怕没有时间学它","text":"乐，swift确实是一门好的语言，但是我恐怕没有时间学它 时间学它","categories":[{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"swift","slug":"swift","permalink":"https://kaguranotamashii.github.io/tags/swift/"},{"name":"ios","slug":"ios","permalink":"https://kaguranotamashii.github.io/tags/ios/"}]},{"title":"2021review","slug":"2021Review","date":"2022-01-17T15:35:02.000Z","updated":"2022-07-27T17:00:43.420Z","comments":true,"path":"posts/49840/","link":"","permalink":"https://kaguranotamashii.github.io/posts/49840/","excerpt":"创建了自己的博客这么久，对于大一上学期自己学习生活做一个简单的总结和记录学习和生活。","text":"创建了自己的博客这么久，对于大一上学期自己学习生活做一个简单的总结和记录学习和生活。 高考-&gt;被录取-&gt;入学-&gt;健翔桥两个月-&gt;沙河 高考我在高中的时候最渴望的事情就是摆脱高中的各种约束和奇怪的规则，现在我确实离开了我的母校，但现在又有些怀念起我的母校了。 记得初入学的我是那么有朝气，对美好的高中生活有着很强烈的渴望。但是在疫情后被改变了。 后来疫情缓解后，再次回到母校，一些原因让我对它，有些失望。直到我毕业典礼那天，我知道以往后我不会再次来到这熟悉的教室和操场了，不仅仅有些怀念起来了，这或许就是斯德哥尔摩效应吧。 高考我是在西城护国寺考的老实说吧，这几天给我留下了相当深刻的印象，忘不掉我和父亲在老旧街道走行，他为我讲述过往的荣誉与血泪。忘不掉亲自看见北京四中长什么样子。忘不掉的是那 156 中学。说起来也巧，我隔壁班就一位和我一起在 156 中学考试的小语种考生。 录取高考后等成绩是最焦虑的，老实说吧我看到成绩单那时候，真的傻了，考的是我我有史以来最差的一次（21 北京数学和化学历年最难，而且日语也出现了十年未有的书信类） 本来信息科大是我的铺底学校，但为了保护志愿不被调剂，被迫将信息科大放到了志愿置顶。等录取是很漫长焦虑，当我拿到录取通知书那天，就像碇シンジ和渚カヲル在海边相遇那天。我万分惊喜，珍惜地拿着属于我荣誉。高中的血与泪在那天化为灰烬。 我们的情人不过是随便借个名字，用幻想吹出来的肥皂泡…… 好了，收下吧！ 你可以假戏真做。 我本来是无病呻吟，漫无目的地吐露爱情……但你是可以让漂泊不定的鸟儿于此的人。 好了，收下吧。用毫无实际的雄辩 你总有一天也会明白的…… 《西哈诺 德 贝热拉克》 健翔桥漫长的暑假过去了，我来到了健翔桥校区，它很小但是却很温馨。 我很喜欢盘古大厦，每当我迷失在北四环的时候永远是它，作为了我们回到学校指路的灯塔。有时候在浓雾中，盘古大厦若隐若现，就像随时崩塌的样子。 从学二走到教学楼，不到三两分钟。 我在健翔桥印象最深的是学哥学姐日日夜夜在阶梯教室奋斗自习，计算机学院拿着笔记本用着编译器敲代码的样子可以说是健翔桥的一道美丽的风景线了 后来我等到了心中早已期待很久的 iFlab 社团的招新，记得面试那天是北京入冬来第一场大雪!我是第一位面试的，面对学长的提问我确实慌张了，同时也对未来更加充满了期望。 入社后，我接触了不少厉害的 CS 大佬，以及各种新生 CS 卷王。我还编了个笑话，我在电信二班认识的人，还不如未来转入计科班人多。（现在我已经没有转 CS 的想法了）2022/7/28 更新，反转了以及转专业到计科了哈哈哈哈哈 两个月很快就过去了，老实说吧，健翔桥虽然是八人间，但是我依然恋恋不舍，不想和优秀的学哥学姐离开。这一天还是来了。 沙河昌平是神奇的地方，我姑姑在这里上学，我父亲第一份工作就在这里，未来几年我也继续在昌平上学，每天的龙泽地铁总是会被挤满北漂和上班族，还记得一次做昌 58 来的学校，经过某一站的时候，人突然满了，这是比在北四环座公交车从来没有的感觉。 我在沙河又认识到了不少专业的强者，以及有思想的人。 2021 年对我来说是挑战是机遇，虽然有很多失望的事情。 但是我希望我在 2022 年，尽量不让自己留下太多的遗憾。 2022 年我的期望的目标 交女朋友 自己用 ARDUINO 做个闹钟 学自己真正喜欢的 一定要学好英语！！！！ 我的朋友，如果你对 2021 年留有遗憾，对 2022 年充满期待，那么我会祝福你，在 2022 不留遗憾，成为自己所期待的那样。我们会在下一年的年终问题里，寻找你的答案。 人よ、幸福たれ！ ——《素晴らしき日々》晴らしき日々*》","categories":[{"name":"闲聊杂谈","slug":"闲聊杂谈","permalink":"https://kaguranotamashii.github.io/categories/%E9%97%B2%E8%81%8A%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"年度总结","slug":"年度总结","permalink":"https://kaguranotamashii.github.io/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"},{"name":"闲聊杂谈","slug":"闲聊杂谈","permalink":"https://kaguranotamashii.github.io/tags/%E9%97%B2%E8%81%8A%E6%9D%82%E8%B0%88/"}]},{"title":"数据结构学习笔记","slug":"[main]CS/[main]Leetcode/数据结构","date":"2022-01-15T06:11:27.000Z","updated":"2022-07-16T15:37:41.555Z","comments":true,"path":"posts/63932/","link":"","permalink":"https://kaguranotamashii.github.io/posts/63932/","excerpt":"Algorithms + Data Structures = Programs","text":"Algorithms + Data Structures = Programs 数据结构与算法 严蔚敏 王卓_哔哩哔哩_bilibili 一.导论1.基本概念和术语Data 数据Data Element 数据元素node节点Data Ltem 数据项Data Object数据对象 2数据结构 Data Structure数据结构包括以下三个部分 数据结构之间的逻辑关系 也叫逻辑结构 数据元素关系在计算机内存中的表示 也叫数据结构的物理结构或者数据的存储结构 数据的运算和实现 即对数据结构元素可以施加操作也i及在对应存储结构的实现 逻辑结构 3.数据类型一些基本的数据结构可以用数据类型实现，如数组字符串等而另一些常用的数据结构如栈队列 树图不能直接用数据类型表示 抽象数据类型可以用DSP三元组表示出来 D是数据对象 S是D上的关系集 P是对D的基本操作集 定义格式 12345678910111213Abstract Data Type 抽象数据类型名&#123;数据对象数据关系基本操作&#125;Abstract Data Type抽象数据名基本操作定义格式为基本操作名（参数表）初始条件《初始条件描述》操作结果《操作结果描述》参数表：赋值参数 职位操作提供输入值 引入参数&amp;打头 除可提供输入值外 还将返回操作结果 4算法 有穷性 确定性 可行性 输入 输出 算法的设计和要求 正确性 可读性 健壮性 高效性（鲁棒性） 5.算法的分析1.时间效率算法的时间效率的度量 算法运行时间＝每条语句频度语句执行一次时间 123456789n*n矩阵相乘的算法for(i=1;i&lt;=n,i++)//n+1次 for(j=1;j&lt;=n;j++)//n（n+1） c[i][j]=0;//n*n for(k=0;k&lt;=n;k++)//n*n*（n+1） c[i][j]=c[i][j]+a[i][k]*b[k][j];//n*n*n执行n*n*n T（n）为2n^3+3n^2+2n+1 算法时间复杂度的渐进表示法 比较算法比较我们仅仅比较数量级 T1(n)=10*n^2和T2(n)=5n^3 O 前者好 有一个辅助的f（n）使得当n无限大，T(N)/F(N)极限为不同为零的常熟 则称f（n）是t（n）的同数级函数 记作T(n)=O（f(n)） 称O（f(n)）为算法的渐进时间复杂度简称为时间复杂度 F(n)=n^m+n^m-1…….则T(N)=o(N^M) 算法基本操作次数也和问题输入而不同 12345678910比如说 for(i=0;i&lt;n,i++) if(a[i]==e)return i+1; return 0;最好只有一次执行最坏要执行n次 最坏时间复杂度：最坏情况下最好时间复杂度：最好情况下平均时间复杂度为O(n) 复杂的算法，可以分成几部分利用O的加乘法则 加法T(n)=T1(n)+T2(n)=O(f(n))+O(g(n))=O(max(f(n),g(n))) 乘法T(n)=T1(n)xT2(n)=O(f(n))xO(g(n))=O((f(n)xg(n)) 2空间复杂度算法所要的存储空间度量 S（n）=O（f（n）） n为为问题的规模 123456789101112将一维数组a的n个数逆序放到元素组for(i=0;i&lt;n/2;i++)&#123; t=a[i]; a[i]=a[n-i-1]; a[n-1-i]=t;&#125;//空间复杂度为O（1）for(i=0;i&lt;n;i++)b[i]=a[n-1-i];for(i=0;i&lt;n;i++) a[i]=b[i];//空间复杂度为O（n） 二.线性表linear list1线性表的定义和特点 例子 如26英文字母 数据元素都是字母为线性 线性表的逻辑特征在非空中有且仅有一个开始或者终端的结点，他没有前趋而仅有一个后续a2 或者没有后趋，而仅有一个直接前趋an-1 案例引入一元多项式 2.线性表的类型定义 基本操作 lnitlist（&amp;L）构造一个空的线性表L DestroyList（&amp;L）初始条件线性表已经有了 操作结果摧毁线性表 ClearList（&amp;L）初始条件线性表存在了 操作结果重置为空表 ListEmpty（L）初始条件 线性表存在 操作结果如果为空表为ture ListLength（L）初始条件 线性表存在 操作结果返回L中数据元素个数 GetElem（L，i，&amp;e）初始太久存在 操作结果用e返回L中第i哥元素值 LocateElem（L，e，compare（））初始线性表存在，compare是数据元素判定函数 操作结果返回L中第一个与e满足compare的数据元素的位序若这样的数据元素不存在返回0 PriorElem(L,cur_e,&amp;pre_e)初始为L存在 操作结果cur_e为L的元素，不是第一个，则pre_e返回他的前驱，否则操作失败 pre_e没有意义 NextElem(L,cur_e,&amp;next_e)初始L存在，如果cur存在返回后继 Listinsert（&amp;L，i，e）L存在 L在第i个位置之前插入新的元素e，L的长度加1 ListDelete（&amp;L，i，&amp;e）L存在 删除L的第i个元素，用e返回，L减一。 ListTraversr（&amp;L，visited（））L存在 操作结果依次对线性表中每个元素调用visited（） 3.线性表的顺序表示和实现12345678910111213141516171819//顺序表的类型定义typedef struct&#123; ElemType data[];//*data为动态分配 int length;&#125;SqList;//SqList L;L.data=(ElemType*)malloc(sizeof(ElemTAype)*M)////#define LIST_INTI_SIZE 100typedef struct &#123; int elem[LIST_INTI_SIZE]; int length;&#125;Sqlist; 12345678910111213141516171819202122//多项式的顺序存储结构类型定义#define MAXSIZE 1000//最大长度typedef struct &#123; float p; int e;&#125;Polynomial;typedef struct &#123; Polynomial* elem;//存储基地址//数组 int length;//当前的项个数&#125;SqList;//图书表的顺序存储#define MAXSIZE 1000typedef struct &#123; char no[20]; char name[50]; float price;&#125;book;typedef struct &#123; book* elem; int length;&#125;SqList; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879#include &quot;stdio.h&quot; #include &quot;stdlib.h&quot; #include &quot;math.h&quot; #include &quot;time.h&quot;#define OK 1#define ERROR 0#define TRUE 1#define FALSE 0//#define OVERFLOW -2#define INFEASIBLE -1#define MAXSIZE 20 typedef char ElemType;typedef int Status;typedef struct&#123; ElemType *elem; int length;&#125;SqList;//1.线性表的初始化Status InitList_Sq(SqList* L)&#123; //分配空间 L-&gt;elem = (ElemType*)malloc(sizeof(ElemType) * MAXSIZE); //L-&gt;elem = new ElemType[MAXSIZE]; C++写法 if (!L-&gt;elem)exit(OVERFLOW);//分配失败 L-&gt;length = 0; return OK;//空表长度为零&#125;//2.摧毁线性表Lvoid DestroyList(SqList* L)&#123; if (L-&gt;elem) free(L-&gt;elem);//delete L-&gt;elem;释放空间&#125;//3.清空线性表void ClearList(SqList* L)&#123; L-&gt;length = 0;//将线性表长度为0&#125;int GetLength(SqList* L)&#123; return (L-&gt;length);&#125;//4判断线性表为空int IsEmpty(SqList L)&#123; if (L.length == 0) return 1; else return 0;&#125;//5顺序表的取值int GetElem(SqList L, int i, ElemType&amp; e)&#123; if (i&lt;1 || i&gt;L.length) return ERROR; e = L.elem[i - 1]; return OK;&#125;//6插入Status Listlnsert_Sq(SqList* L, int i, ElemType e)&#123; int j; if (i&lt;1 || i&gt;L-&gt;length + 1)return ERROR; if (L-&gt;length == MAXSIZE) return ERROR; for (j = L-&gt;length; j &gt;= i - 1; j--) L-&gt;elem[j+1] = L-&gt;elem[j]; L-&gt;elem[i - 1] = e; L-&gt;length++; return OK;&#125;//7删除Status ListDelete_Sq(SqList* L, int i)&#123; int j; if (i&lt;1 || i&gt;L-&gt;length) return ERROR; for (j = i; j &lt;= L-&gt;length; j++) L-&gt;elem[j - 1] = L-&gt;elem[j]; L-&gt;length--; return OK;&#125;int main()&#123; SqList L; InitList_Sq(&amp;L); GetLength(&amp;L);&#125; 优点 存储量大 可以随机读取表中的元素 缺点 增删要移动大量元素 浪费存储空间 静态 4线性表的链式 结点：数据元素的存储映像。由数据域和指针域 链表：N个结点由指针域组成链表 它是线性表的链式存储映像名称为线性表的链性存储 1.单链表结点只有一个指针域的链表 特点 结点在存储器的位置是任意的，即逻辑上相邻的数据元素，在物理上不一定 访问时只能通过头指针进入链表，并通过每个结点的指针域依次向后，寻找第一个和最后一个结点 栈与队列栈与队列是两个常用的 栈与队列是限定插入和删除只能在表的端点进行的线性表 12Insert(S,n+1,x) Delete(S,n)Insert(Q,n+1,x) Delete(Q,1) 栈—后进先出 使得栈成为有用的工具，数据转换，表达式，函数调用，递归，括号 2队列—先进先出 解决排队问题 脱机打印 多用户系统 等 栈stack特殊的线性表，是限定在一段，通常是表尾，进行插入和删除操作的线性表 相关概念后进an top栈顶 表头a1为base 插入元素到栈顶叫入栈（压）push，反之为入栈（弹出）pop 栈的定义 定义：限定在表的一端进行插入和删除的运算线性表 逻辑结构：通线性表一对一的关系 存储结构：顺序表更常见 只能在栈顶运算 入栈和出栈函数 案例进制转换十进制N想其他进制数d（二八十六） 法则为：除以d倒取余 n=（n div d）*d + n mod d div为整除运算 mod为求余 例子十进制159转八进制 1234159/8=19...719/8=2...32/8=0..2（237）8 括号匹配的验证表达式求值操作数和运算符和界限符 为了实现表达式求值设置两个栈 OPTR寄存运算符 操作数栈OPND用于寄存运算数和运算结果 栈的表示和操作1234567ADK Stack&#123;数据对象D=&#123;ai|ai属于ElemSet&#125;数据关系R1=&#123;&lt;ai-1,ai&gt;&#125;an端为栈顶，a1为栈底初始化 进栈出栈 取栈顶等&#125;ADT Stack 1234567891011121314151617InitStack(&amp;S)初始化操作 构造一个空栈SDestoryStack(&amp;S) 销毁栈操作初始条件S存在，结果销毁StackEmpty 判断是否为空S存在 空true 否为falseStackLength(S)求栈的长度S存在 返回S的个数，即栈长度GetTop(S,&amp;e)去栈顶S存在且为空用e返回S的栈顶元素ClearStack清空Push(&amp;S,e)入栈 顺序栈的实现，同一般线性表的顺序存完全相同 123456#define MAXSIZE 100typedef struct&#123; SElemType *base; SElemType *top; int stacksize&#125;Sqstack; 初始化1234567Status InitStack(SqStack &amp;S)&#123; S.base=(SElemType*)malloc(MAXSIZE*sizeof(SElemType)); if(!S.base)exiu(OBERFLOW); S.top=S.base; S.stacksize=MAXSIZE; return OK;&#125; 判断是否为空 12345Status StackEmpty(SqStack S)&#123; if(S.top==S.base)return TRUE; else return FALSE;&#125; 顺序栈长度 123int StackLength(SqStack S)&#123;return S.top-S.base;&#125; 清空 1234Status ClearStack(Sqstack &amp;S)&#123;if(S.base)S,top=S.base;return OK;&#125; 销毁 12345678Status DestroyStack(Sqstack &amp;S)&#123; if(S.base)&#123; delete S.base; S.stacksize=; S.base=S.top=NULL; &#125; return OK;&#125; 入栈 123456Status Push (SqStack &amp;S,SElemType e)&#123; if(S.top-S.base==S.stacksize)return ERROR; *S.top=e; S.top++; return OK;&#125; 出栈 12345Status Ppo(SqStack &amp;S,SElemType&amp;e)&#123; if(S.top==S.base)return ERROEL; E=*--s.TOP; return OK;&#125; 链栈123456typedef struct StackNode&#123; SElemType data; struct StackNode *next;&#125;StackNode,*LinkStack;LinkStack S; 链表的初始化 1234void InitStack(LinkStack &amp;S)&#123; S=NULL; return ok;&#125; 入栈 1234567Status Push(LinkStack &amp;S,SElemType e)&#123; p=new stacknoode; p-&gt;data=e; p-&gt;newt=S; S=p; return OK;&#125; 出栈 12345678Status Pop(LinkStack&amp;S,SElemTyoe &amp;e)&#123; if(S==NULL)return ERROE; e=s-&gt;data; p=S; S=S-&gt;next; delete p; &#125; 栈与递归递归定义的函数 递归数据结构 递归解法 队列queue先进先出FiFO 表一插入，在另一端表头删除 队列的相关概念 定义 头删尾插 逻辑结构 一对一先信标 循环和链队 之恶能在对手和队尾 入和出 队 树树的定义Tree是由包括零，多个结点的有限集，分为空树�限集，分为空树","categories":[{"name":"数据结构与算法","slug":"数据结构与算法","permalink":"https://kaguranotamashii.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"https://kaguranotamashii.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}]},{"title":"C++学习笔记","slug":"[main]CS/[main]computer-language/CPP学习笔记","date":"2022-01-12T11:52:47.000Z","updated":"2022-07-17T15:51:26.289Z","comments":true,"path":"posts/16346/","link":"","permalink":"https://kaguranotamashii.github.io/posts/16346/","excerpt":"C++的学习笔记，恐怕要22年暑假才能学完吧","text":"C++的学习笔记，恐怕要22年暑假才能学完吧 1.C++认识1.1123456789101112#include&lt;iostream&gt;using namespace std:int main()&#123; cout&lt;&lt;&quot;hello world&quot;&lt; system(&quot;pause&quot;); return 0;&#125;cin&gt;&gt;a&gt;&gt;b;&lt; 因为一些事情，突然有了这样的创意。两人之间如果只用手机而且对方不看手机，来通过震动来传递简单的信息，我想到了用摩斯密码的短长可以用震动来代替，因此可以传达简单的信息，比如说测视力上下左右，就可以用摩斯密码来表示出来。目前我打算学习java，先了解安卓的程序语言基础，然后再研究下。2022/2/21��究下。2022/2/21","categories":[{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"cpp","slug":"编程/cpp","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/cpp/"}],"tags":[{"name":"cpp","slug":"cpp","permalink":"https://kaguranotamashii.github.io/tags/cpp/"}]},{"title":"通信学院期末C复习题","slug":"[main]CS/[main]computer-language/期末考试C语言复习题","date":"2021-12-16T08:12:14.000Z","updated":"2022-07-16T15:37:41.549Z","comments":true,"path":"posts/37971/","link":"","permalink":"https://kaguranotamashii.github.io/posts/37971/","excerpt":"BISTU 通信学院2021C语言期末考试题 每道题一定有多个写法，碍于时间我不能全部写出来，也没有这个能力，所以这些答案仅仅用于参考 因为写的时间紧所以可能有些小的错误请多见谅","text":"BISTU 通信学院2021C语言期末考试题 每道题一定有多个写法，碍于时间我不能全部写出来，也没有这个能力，所以这些答案仅仅用于参考 因为写的时间紧所以可能有些小的错误请多见谅 A易A阶段中大多数都是简单的题 12345主要的知识点为if，math.h里面的函数ASCII%d %fint char float等类型 1.温度转换 12345678910#include&lt;stdio.h&gt;int main()&#123; float f,c; printf(&quot;请输入华氏温度:&quot;); scanf(&quot;%f&quot;,&amp;f); c=(5.0/9)*(f-32); printf(&quot;转换成摄氏度是:%f\\n&quot;,c); return 0;&#125; 2.BMl计算输入身高（米）和体重（千克）计算 BMI 值，其中 BMI 值计算公式为，BMI = 体 重/身高^2。（实验一题目） 12345678#include&lt;stdio.h&gt;int main()&#123; float bmi, h, w; scanf_s(&quot;%f %f&quot;, &amp;h, &amp;w); bmi = w / (h * h); printf(&quot;%f&quot;, bmi);&#125; 3.大写转小写给定一个大写字母，要求用小写字母输出。提示：大写字母比小写字母的 ASCII 码 小 32。（第 3 章例题 123456789#include&lt;stdio.h&gt;int main()&#123; char a; scanf(&quot;%c&quot;,&amp;a); a=a+32;//ASCii中大写在前面 printf(&quot;%c&quot;,a); &#125; 4.由小到大排列输入两个实数，按由小到大的顺序输出这两个数。（第 4 章例题 12345678910#include&lt;stdio.h&gt;int main()&#123; int a,b; scanf(&quot;%d %d&quot;,&amp;a,&amp;b); if(a&lt;b) printf(&quot;%d&lt;%d&quot;,a,b); else printf(&quot;%d&lt;%d&quot;,b,a);&#125; 5.一元二次方程求 ax2+bx+c=0 方程的根。a,b,c 由键盘输入。需要在程序中进行判别，如果 b2- 4ac≥0，就计算并输出方程的两个实根，如果 b2-4ac&lt;0，就输出“此方程无实根” 的信息。（第 4 章例题 1234567891011121314151617181920212223#include&lt;stdio.h&gt;#include&lt;math.h&gt;//提供sqrt函数int main()&#123; float a, b, c; scanf_s(&quot;%f %f %f&quot;, &amp;a, &amp;b, &amp;c); float data; data = (b * b - 4 * a * c); if (data &lt; 0) &#123; printf(&quot;没有实数根&quot;); &#125; else if (data == 0) &#123; printf(&quot;x=%f&quot;, ((-b) / 2 * a)); &#125; else &#123; printf(&quot;x1=%f x2=%f&quot;, (sqrt(data)) - b / 2 * a, (-sqrt(data)) - b / 2 * a); &#125; &#125; 6.计算三角形面积给出三角形的三边长，求三角形面积。这题可以通过海伦公式快速解题 12345678910111213141516#include&lt;stdio.h&gt;#include&lt;math.h&gt;int main()&#123; float a, b, c; float p; scanf_s(&quot;%f %f %f&quot;, &amp;a, &amp;b, &amp;c); p = (a + b + c) / 2; if (a + b &gt; c &amp;&amp; a + c &gt; b &amp;&amp; b + c &gt; a) &#123; printf(&quot;%f&quot;, sqrt(p * (p - a) * (p - b) * (p - c))); &#125; else printf(&quot;三角形不存在\\n&quot;);&#125; 7.判断是否为大写输入一个字符，判别它是否为大写字母，如果是，将它转换成小写字母；如果不是， 不转换。然后输出最后得到的字符。（第 4 章例题 12345678910111213// 输入一个字符，判断它是否为大写字母，如果是，将它转换成小写字母，如果不是不转换 #include &lt;stdio.h&gt; int main()&#123; char ch; scanf(&quot;%c&quot;,&amp;ch); if(ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27;) ch = ch + 32; printf(&quot;%c\\n&quot;,ch);&#125; 8.成绩等级输入一个学生的成绩，使用 if else 语句输出该同学的成绩属于以下哪个等级。（实 验二） 60 分以下：不及格 60-70 分：及格 70-90 分：良好 90-100 分：优秀 123456789101112#include &lt;stdio.h&gt;int main()&#123; int score; scanf_s(&quot;%d&quot;, &amp;score); if (score &gt;= 90) printf(&quot;优\\n&quot;); if (score &gt;= 80 &amp;&amp; score &lt;= 89) printf(&quot;良\\n&quot;); if (score &gt;= 70 &amp;&amp; score &lt;= 79) printf(&quot;中\\n&quot;); if (score &gt;= 60 &amp;&amp; score &lt; 69) printf(&quot;及格\\n&quot;); if (score&lt;60) printf(&quot;不及格\\n&quot;);&#125; 9国民生产假如我国国民生产总值的年增长率为 7%，计算 10 年后我国国民生产总值与现在 相比增长多少百分比。计算公式为p=(1+r)^n n为年 r为增长率 1234567891011#include &lt;stdio.h&gt;#include &lt;math.h&gt;int main()&#123; float p,r,n; r=0.07; n=10; p=pow(1+r,n); //pow(a,b)a的b次幂 printf(&quot;p=%f\\n&quot;,p);&#125; 10.破解密码请编程序将“China”译成密码，密码规律是：用原来的字母后面的第 4 个字 母代替原来的字母。例如，字母“A”后面第 4 个字母是“E”，用“E”代替“A”。 字母表最后四个字母“WXYZ”，替代为“ABCD”。因此，“China”应译为“Glmre”。 （第 3 章课后习题 123456789101112#include&lt;stdio.h&gt;int main()&#123; char c1=&#x27;C&#x27;,c2=&#x27;h&#x27;,c3=&#x27;i&#x27;,c4=&#x27;n&#x27;,c5=&#x27;a&#x27;; c1 = c1 + 4; c2 = c2 + 4; c3 = c3 + 4; c4 = c4 + 4; c5 = c4 + 4; printf(&quot;%c%c%c%c%c\\n&quot;, c1, c2, c3, c4, c5);&#125; B中12到这里就开始出现if while for switch等函数 11.闰年典中典的题了 判断分两种情况，一个是能被400整除，一个是能被4整数但不能被100整除四年一闰,百年不闰 四百年再闰 1if(a%400==0||a%4==0&amp;&amp;a%100!=0) 12.阶乘用 C 语言求 12!，并画出流程图。（第 5 章课后习题） 123456789#include&lt;stdio.h&gt;int main()&#123; int n, sum = 1; for (int i = 1; i &lt;= 12; i++) sum = sum * i; printf(&quot;%d&quot;, sum);&#125; 13.判断位数使用循环结构设计一个程序，用户从终端输入一个整数，输出其是几位整数。 （实验二） 12345678910111213#include&lt;stdio.h&gt;int main()&#123; int n = 0, a; scanf_s(&quot;%d&quot;, &amp;a); while (a &gt; 0) &#123; a = a / 10; n++; &#125; printf(&quot;%d&quot;, n);&#125; 14.逆转数字从键盘输入一个四位的整数 num，将其个、十、百、千位倒序生成一个数字输 出。例如：输入 1234，输出 4321。（第 4 章课后习题） 123456789101112#include&lt;stdio.h&gt;int main()&#123; int a,b=0; scanf_s(&quot;%d&quot;, &amp;a); while (a&gt;0) &#123; b = b * 10 + a % 10; a = a / 10; &#125; printf(&quot;%d&quot;, b);&#125; 15.分段函数y=x (x","categories":[{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"考试","slug":"考试","permalink":"https://kaguranotamashii.github.io/tags/%E8%80%83%E8%AF%95/"},{"name":"C语言","slug":"C语言","permalink":"https://kaguranotamashii.github.io/tags/C%E8%AF%AD%E8%A8%80/"}]},{"title":"Python基础","slug":"[main]CS/[main]computer-language/Python基础","date":"2021-12-04T07:22:31.000Z","updated":"2022-07-16T15:37:41.548Z","comments":true,"path":"posts/14703/","link":"","permalink":"https://kaguranotamashii.github.io/posts/14703/","excerpt":"学习笔记","text":"学习笔记 1.Python的基本语法1Python的交互和脚本式交互式是不创建脚本文件，通过解释器的交互模式来编写代码脚本式，为创建.py格式进行执行 2标识符在 Python 里，标识符由字母、数字、下划线组成。 在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。 Python 中的标识符是区分大小写的。 以下划线开头的标识符是有特殊意义的。以单下划线开头 _foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入。 Python 可以同一行显示多条语句，方法是用分号 ; 运算符 描述 [] [:] 下标，切片 ** 指数 ~ + - 按位取反, 正负号 * / % // 乘，除，模，整除 + - 加，减 &gt;&gt; &lt;&lt; 右移，左移 &amp; 按位与 ^ `\\ ` 按位异或，按位或 &lt;= &lt; &gt; &gt;= 小于等于，小于，大于，大于等于 == != 等于，不等于 is is not 身份运算符 in not in 成员运算符 not or and 逻辑运算符 = += -= *= /= %= //= **= &amp;= ` =`^= &gt;&gt;= &lt;&lt;= （复合）赋值运算符 3.保留字 and exec not assert finally or break for pass class from print continue global raise def if return del import try elif in while else is with except lambda yield 2数据类型1整数python可以写任意大的整数 如果出现很大的数比如说10000000可以写成10000_000 2浮点数浮点数可以用科学计数法来表示比如说1.23*10七次幂可以写1.23e9, 0.0015等于1.5e-3 数值运算函数round12round(11.111,2)这个函数是四舍五入round(x[,d])d为保留位数默认为0// 11.11 abs1abs（x）绝对值 pow1234pow(x,y[,z])幂余pow(2,3,3)//2 divmod123商余divmod(10，3）//（3，1） 3.字符串字符串是以单引号或者双引号写出来的 字符串内部中有”或者‘可以通过\\来表示 12345678910111213141516171819202122232425262728293031323334353637&#x27;I\\&#x27;m \\&quot;OK\\&quot;!&#x27;I&#x27;m &quot;OK&quot;!str1 = &#x27;hello, world!&#x27;# 通过内置函数len计算字符串的长度print(len(str1)) # 13# 获得字符串首字母大写的拷贝print(str1.capitalize()) # Hello, world!# 获得字符串每个单词首字母大写的拷贝print(str1.title()) # Hello, World!# 获得字符串变大写后的拷贝print(str1.upper()) # HELLO, WORLD!# 从字符串中查找子串所在位置print(str1.find(&#x27;or&#x27;)) # 8print(str1.find(&#x27;shit&#x27;)) # -1# 与find类似但找不到子串时会引发异常# print(str1.index(&#x27;or&#x27;))# print(str1.index(&#x27;shit&#x27;))# 检查字符串是否以指定的字符串开头print(str1.startswith(&#x27;He&#x27;)) # Falseprint(str1.startswith(&#x27;hel&#x27;)) # True# 检查字符串是否以指定的字符串结尾print(str1.endswith(&#x27;!&#x27;)) # True# 将字符串以指定的宽度居中并在两侧填充指定的字符print(str1.center(50, &#x27;*&#x27;))# 将字符串以指定的宽度靠右放置左侧填充指定的字符print(str1.rjust(50, &#x27; &#x27;))str2 = &#x27;abc123456&#x27;# 检查字符串是否由数字构成print(str2.isdigit()) # False# 检查字符串是否以字母构成print(str2.isalpha()) # False# 检查字符串是否以数字和字母构成print(str2.isalnum()) # Truestr3 = &#x27; jackfrued@126.com &#x27;print(str3)# 获得字符串修剪左右两侧空格之后的拷贝print(str3.strip()) 字符串函数 find返回从左边第一个指定的字符索引，找不到返回-1 index返回从左边第一个字符索引，找不到报错 123456str = &quot;abcde&quot;print(str.find(&#x27;c&#x27;))//2str = &quot;hello world&quot;a = str.index(&#x27;w&#x27;)print(a)//6 sqlit字符串的拆分 12str = &quot;hello world&quot;print(str.split(&#x27; &#x27;))//[&#x27;hello&#x27;, &#x27;world&#x27;] chr(x) ord(x) 字符串的方法方法必须用.方式 八种重要字符串的方法 str.lower str.upper() 返回字符串的副本，全部为大小写 str.split(sep=None)返回一个列表，由str根据sep被分割的部分组成 12&quot;a,b,c&quot;.split(&quot;,&quot;)# [&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;] str.count(sub)返回子串sub在str中中出现个数 12&quot;aabbaa&quot;,count(&quot;a&quot;)# 4 str.replace(old,new)返回str的副本，所以old子串被替换为new 12“python&quot;.replace(&quot;n&quot;,&quot;n123.io&quot;)# python123.io 字符串的格式化python用于槽方式以及format方式 1&quot;&#123;&#125;是世界上最好用的语言之一，而&#123;&#125;是效率最高的语言&quot;.format(&quot;python&quot;,&quot;c++&quot;) 4布尔值只有两个True和False 布尔值可以tong过and or not表达 123456789101112&gt;&gt;&gt; True and FalseFalse&gt;&gt;&gt; False and FalseFalse&gt;&gt;&gt; 5 &gt; 3 and 3 &gt; 1True&gt;&gt;&gt; True or TrueTrue&gt;&gt;&gt; True or FalseTrue&gt;&gt;&gt; not FalseTrue 5.空值用None表示，不能单纯理解为0 6变量重点python中 1a=&#x27;abc&#x27; python解释器干了两个事情 在内存中创建了‘abc’的字符串 在内存中创建a的变量指向‘abc’ 7.常量8.listlist是一种有序的集合，可以进行修改或者删除 1classmates=[&#x27;song&#x27;,&#x27;wang&#x27;,&#x27;zhang&#x27;] 使用len可获取list元素的个数 12&gt;&gt;&gt; len(classmates)3 索引 切片[start: end:step]用索引可以访问list的元素 1234567891011121314151617181920212223242526272829303132333435363738&gt;&gt;&gt; classmates[0]&#x27;song&#x27;&gt;&gt;&gt; classmates[1]&#x27;wang&#x27;&gt;&gt;&gt; classmates[2]&#x27;zhang&#x27;&gt;&gt;&gt; classmates[3]Traceback (most recent call last): File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;IndexError: list index out of range list1 = [1, 3, 5, 7, 100]print(list1) # [1, 3, 5, 7, 100]# 乘号表示列表元素的重复list2 = [&#x27;hello&#x27;] * 3print(list2) # [&#x27;hello&#x27;, &#x27;hello&#x27;, &#x27;hello&#x27;]# 计算列表长度(元素个数)print(len(list1)) # 5# 下标(索引)运算print(list1[0]) # 1print(list1[4]) # 100# print(list1[5]) # IndexError: list index out of rangeprint(list1[-1]) # 100print(list1[-3]) # 5list1[2] = 300print(list1) # [1, 3, 300, 7, 100]# 通过循环用下标遍历列表元素for index in range(len(list1)): print(list1[index])# 通过for循环遍历列表元素for elem in list1: print(elem)# 通过enumerate函数处理列表之后再遍历可以同时获得元素索引和值for index, elem in enumerate(list1): print(index, elem) 当然我们也可以通过负数来索引 12&gt;&gt;&gt; classmates[-1]&#x27;zhang&#x27; 增删因为list为可变的有序表 append 123&gt;&gt;&gt; classmates.append(&#x27;zhao&#x27;)&gt;&gt;&gt; classmatesclassmates=[&#x27;song&#x27;,&#x27;wang&#x27;,&#x27;zhang&#x27;,&#x27;zhao&#x27;] 元素想插入到指定的位置中.insert 12345&gt;&gt;&gt; classmates.insert(1, &#x27;Jack&#x27;)&gt;&gt;&gt; classmates&gt;&gt;&gt; classmates.append(&#x27;zhao&#x27;)classmates=[&#x27;song&#x27;,&#x27;jack&#x27;,&#x27;wang&#x27;,&#x27;zhang&#x27;,&#x27;zhao&#x27;] 删除末尾用 pop() 1234&gt;&gt;&gt; classmates.pop()&#x27;zhao&#x27;&gt;&gt;&gt; classmates[&#x27;song&#x27;,&#x27;jack&#x27;,&#x27;wang&#x27;,&#x27;zhang&#x27;] 想删除指定的位置用pop(i) 1234&gt;&gt;&gt; classmates.pop(1)&#x27;Jack&#x27;&gt;&gt;&gt; classmates[&#x27;Michael&#x27;, &#x27;Bob&#x27;, &#x27;Tracy&#x27;] 12345678910111213141516171819202122list1 = [1, 3, 5, 7, 100]# 添加元素list1.append(200)list1.insert(1, 400)# 合并两个列表# list1.extend([1000, 2000])list1 += [1000, 2000]print(list1) # [1, 400, 3, 5, 7, 100, 200, 1000, 2000]print(len(list1)) # 9# 先通过成员运算判断元素是否在列表中，如果存在就删除该元素if 3 in list1: list1.remove(3)if 1234 in list1: list1.remove(1234)print(list1) # [1, 400, 5, 7, 100, 200, 1000, 2000]# 从指定的位置删除元素list1.pop(0)list1.pop(len(list1) - 1)print(list1) # [400, 5, 7, 100, 200, 1000]# 清空列表元素list1.clear()print(list1) # [] 生成式和生成器1234f = [x for x in range(1, 10)]print(f)f = [x + y for x in &#x27;ABCDE&#x27; for y in &#x27;1234567&#x27;]print(f) list中可以有不同类型的甚至list 123&gt;&gt;&gt; s = [22141, True, [&#x27;asp&#x27;, &#x27;php&#x27;], &#x27;scheme&#x27;]&gt;&gt;&gt; len(s)4 9.tuple有序的列表叫tuple，tuple不能被修改 不可变的tuple有什么意义？因为tuple不可变，所以代码更安全。如果可能，能用tuple代替list就尽量用tuple。 123&gt;&gt;&gt; t = (1, 2)&gt;&gt;&gt; t(1, 2) 如果tuple中出现list也是可以修改的 12345&gt;&gt;&gt; t = (&#x27;a&#x27;, &#x27;b&#x27;, [&#x27;A&#x27;, &#x27;B&#x27;])&gt;&gt;&gt; t[2][0] = &#x27;X&#x27;&gt;&gt;&gt; t[2][1] = &#x27;Y&#x27;&gt;&gt;&gt; t(&#x27;a&#x27;, &#x27;b&#x27;, [&#x27;X&#x27;, &#x27;Y&#x27;]) 10dict（dictionary）其他的语言叫map 使用key-value dict实现，只需要一个“名字”-“成绩”的对照表，直接根据名字查找成绩，无论这个表有多大，查找速度都不会变慢。用Python写一个dict如下： 123&gt;&gt;&gt; d = &#123;&#x27;Michael&#x27;: 95, &#x27;Bob&#x27;: 75, &#x27;Tracy&#x27;: 85&#125;&gt;&gt;&gt; d[&#x27;Michael&#x27;]95 必须要有key才能读取value一个key只能有一个valuekey不存在报错 如果想删除只要删除key就可以了 11.setset和dict类型 是存放key的但是不存放value key不能重复 set具有数学上的set性质 比如无序，没有重复元素 1234567891011121314&gt;&gt;&gt; s = set([1, 2, 3])&gt;&gt;&gt; s&#123;1, 2, 3&#125;&gt;&gt;&gt; s.add(4)&gt;&gt;&gt; s&#123;1, 2, 3, 4&#125;&gt;&gt;&gt; s.add(4)&gt;&gt;&gt; s&#123;1, 2, 3, 4&#125;&gt;&gt;&gt; s.remove(4)&gt;&gt;&gt; s&#123;1, 2, 3&#125; 3.基本函数1.判断和c语言基本相似 注意不要少写了冒号 1234567age = 3if age &gt;= 18: print(&#x27;your age is&#x27;, age) print(&#x27;adult&#x27;)else: print(&#x27;your age is&#x27;, age) print(&#x27;teenager&#x27;) 12345678910111213141516age = 3if age &gt;= 18: print(&#x27;adult&#x27;)elif age &gt;= 6: #elif等于else if print(&#x27;teenager&#x27;)else: print(&#x27;kid&#x27;) if &lt;条件判断1&gt;: &lt;执行1&gt;elif &lt;条件判断2&gt;: &lt;执行2&gt;elif &lt;条件判断3&gt;: &lt;执行3&gt;else: &lt;执行4&gt; 2.循环python中的循环分为for in依次将list或者tuple中元素迭代 12345678names = [&#x27;Michael&#x27;, &#x27;Bob&#x27;, &#x27;Tracy&#x27;]for name in names: print(name) //MichaelBobTracy 3.输出1234567891011121314print(&quot;hello world&quot;)# 可以输出字符串# 含有运算符的表达式print(88 * 88 - 55)# 将数据输出文件中 主要盘符要存在 使用file=p a+以读写状态，没有就新建fp = open(&#x27;E:/编程/python/text.txt&#x27;, &#x27;a+&#x27;)print(&#x27;hello world&#x27;, file=fp)# 输出到这个文件夹fp.close()# 关闭a, b = 5, 10print(f&#x27;&#123;a&#125; * &#123;b&#125; = &#123;a * b&#125;&#x27;) 4.针对数据类型的特征1.Slice在list或者tuple取元素 range函数 12345678&gt;&gt;&gt;list(range(0, 30, 5))[0, 5, 10, 15, 20, 25]&gt;&gt;&gt; list(range(0, 10, 2))[0, 2, 4, 6, 8]&gt;&gt;&gt; list(range(0, -10, -1))[0, -1, -2, -3, -4, -5, -6, -7, -8, -9]&gt;&gt;&gt; list(range(5))[0, 1, 2, 3, 4] 12345678list中可以通过for来切片&gt;&gt;&gt; r = []&gt;&gt;&gt; n = 3&gt;&gt;&gt; for i in range(n):... r.append(L[i])... &gt;&gt;&gt; r[&#x27;Michael&#x27;, &#x27;Sarah&#x27;, &#x27;Tracy&#x27;] python有更简单的方法实现切片操作 12345678910111213141516171819&gt;&gt;&gt; L[0:3][&#x27;Michael&#x27;, &#x27;Sarah&#x27;, &#x27;Tracy&#x27;]&gt;&gt;&gt; L[:3][&#x27;Michael&#x27;, &#x27;Sarah&#x27;, &#x27;Tracy&#x27;]&gt;&gt;&gt; L[1:3][&#x27;Sarah&#x27;, &#x27;Tracy&#x27;]如果0-99提取前十&gt;&gt;&gt; L=list(rang(100))&gt;&gt;&gt; l[0,1,2....99]&gt;&gt;&gt; l[:10]l [0,1,...9]前十个，每两个取一个l[:10:2]l[::5] 2.lteration在python中通过for循环遍历list或者tuple叫迭送 3.列表生成式5基本库1time库time11648043734.0478468 ctime1Wed Mar 23 21:57:29 2022 gmtine1time.struct_time(tm_year=2022, tm_mon=3, tm_mday=23, tm_hour=13, tm_min=58, tm_sec=1, tm_wday=2, tm_yday=82, tm_isdst=0) 2022天天向上的力量一年365进步与退步千分之一365中工作五天进步百分之一，周末退步百分之一你和365天都在进步百分之一的卷仙一起工作，你工作日学习，但是休息日两天下降百分之一，那么你至少要在工作日学习百分之多少呢？ 123456789101112131415# daydayup.pydef dayUp(df): dayup = 1 for i in range(365): if i % 7 in[6,0]: dayup=dayup*(0.99) else: dayup =dayup*(1+df) return dayupdayfactor = 0.01while dayUp(dayfactor) &lt; 37.78: dayfactor+=0.001print(&quot;他工作日努力参数为&#123;:.3f&#125;&quot;.format(dayfactor))//0.019 文本进度条1234567891011# TextProBar1.pyimport timescale = 10print(&quot;........执行开始........&quot;)for i in range(scale+1): a=&#x27;*&#x27;*i b = &#x27;.&#x27;*(scale-i) c = (i/scale)*100 print(&quot;\\r&#123;:^3.0f&#125;%[&#123;&#125;-&gt;&#123;&#125;]&quot;.format(c,a,b)) time.sleep(0.1)print(&quot;........结束........&quot;) ….结束……..”)```","categories":[{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"Python","slug":"编程/Python","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://kaguranotamashii.github.io/tags/Python/"}]},{"title":"CSS基础","slug":"[main]CS/[main]web/基础三件套/CSS基础","date":"2021-12-03T06:46:59.000Z","updated":"2022-07-16T15:37:41.558Z","comments":true,"path":"posts/10605/","link":"","permalink":"https://kaguranotamashii.github.io/posts/10605/","excerpt":"CSS前端三剑客的老二","text":"CSS前端三剑客的老二 1.CSS简介1html自身的局限性2CSS选择器css的规则主要由两个部分组成的 选择器和一条或者多条声明 12&lt;选择器 属性 值 coor red这句话是声明&gt;h1 &#123;color:red; font-size:25px;&#125; 简单来说，选择标签用的 选择器分为 基础选择器和复合选择器 基础又分为 标签选择器 类选择器 id选择器 通配符选择器 1.标签选择器html标签名词作为选择器 语法 123标签名&#123;属性1：属性值1；&#125; 123456789&lt;style&gt; p &#123;color: burlywood;&#125;&lt;/style&gt;&lt;body&gt; &lt;p&gt;1234455&lt;/p&gt; &lt;p&gt;1234455&lt;/p&gt; &lt;p&gt;1234455&lt;/p&gt; &lt;/body&gt; 优点为快速为同类型的标签同意设置样态 但是如果是出现多个相同的属性，会一同全部修改 2.类选择器 （常用）1.使用123.类名&#123;属性1:属性值；&#125; 123456789101112&lt;style&gt; p &#123;color: burlywood;&#125; .red&#123; color: red; &#125;&lt;/style&gt;&lt;body&gt; &lt;p&gt;1234455&lt;/p&gt; &lt;p&gt;1234455&lt;/p&gt; &lt;p&gt;1234455&lt;/p&gt; &lt;div class=&quot;red&quot;&gt;我想变成红色&lt;/div&gt;&lt;/body&gt; 盒子 1234567891011121314151617181920212223242526&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; .red&#123; width: 100px; height: 100px; /*背景颜色*/ background-color: red; &#125; .green&#123; width: 100px; height: 100px; background-color: green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;red&quot;&gt;hong&lt;/div&gt; &lt;div class=&quot;green&quot;&gt;绿色&lt;/div&gt; &lt;div class=&quot;red&quot;&gt;hong&lt;/div&gt;&lt;/body&gt; 2.多类名在标签中class文件属性中写多个类名但是类名中间必须要用空格 123456789101112 &lt;style&gt; .red&#123; color:red; &#125; .font35&#123; font-size: 30px; &#125; &lt;/style&gt;&lt;body&gt; &lt;div class=&quot;red font35&quot;&gt;神乐同学&lt;/div&gt;&lt;/body&gt; 3.ID选择器id可以选择特定的属性 123456789 &lt;style&gt; #pink&#123; color: green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;pink&quot;&gt;dsadasda&lt;/div&gt;&lt;/body&gt; id选择用#定义 只能调用一次 二者区别在于使用次数id选择器一般用于页面唯一的元素，所以一般和JavaScript使用 4通配符选择器用*号定义，它可以表示所有的元素 2属性1.文字1font-family字体可用网络字体等 1234567891011 &lt;style&gt; h2&#123; font-family: &#x27;宋体&#x27;,&#x27;微软雅黑&#x27;; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h2&gt;我是来自北京信息科技大学的神乐&lt;/h2&gt; &lt;p&gt;我是来自北京信息科技大学的神乐&lt;/p&gt; &lt;p&gt;我是来自北京信息科技大学的神乐&lt;/p&gt;&lt;/body&gt; 2.font-size123&lt;style&gt;font-size:20px;&lt;/style&gt; px像素大小是网页中最常用的单位 谷歌浏览器默认字体问=为16px 不同浏览器字号大小不相同 body指定整个页面字体大小 3.font-weightcss中使用font-weight修改粗细程度 1234&lt;style&gt; .bold&#123;font-weight: bold;&#125;&lt;/style&gt;&lt;p class=&quot;bold&quot;&gt;神乐&lt;/p&gt; bold就是相当于加粗效果 相当于number700属性值 为400等于默认 700等于加粗 4font-style1234&lt;style&gt; .bold&#123;font-style: normal;&#125;&lt;/style&gt;&lt;p class=&quot;bold&quot;&gt;神乐&lt;/p&gt; 属性值中 normal为默认 italic为显示斜体如果em标签和属性为italic的会变正 5.font的复合用法比如说div字体斜体 加粗 字号16 微软雅黑 1234567891011&lt;style&gt; div&#123; font-size:16px; font-family:&#x27;Microsoft yahei&#x27;; font-weight:700; font-style:italic; &#125;&lt;/style&gt;&lt;div&gt; 古道西风瘦马&lt;/div&gt; 或者 位置严格要求不能换 除了size和family不能省略 1234567/*font: font-style font-weight font-size/font-height font-family;*/ 类 粗 大 家div&#123;font: itailc 700 16px &quot;微软雅黑&quot;;&#125; 2.文本文本属性分为 颜色 对齐 装饰文本 缩进 行间距 1.color颜色表示方法分为三种 预定义颜色值 十六进制 RGB代码 123456div&#123;color: deeppink;color: #ff0000;color: rgb(200,0,0);&#125; 2.text-align样态文本属性值分为：left默认,center居中,right右对齐 3.text-decoration属性值为none默认,underline下划线,overlines上划线,line-through删除线 4text-indent文本缩进 通常是首行的缩进 123text-indent:10px;text-indent:2em;/*em的意思为相对单位*/ 5line-height控制行间距离的高度 文本高度默认为16px 所以line-height:16px；就是没有行间距 3.css引入方式1内部样态表单独放在style中 方便 没有完全分离 2.行内样态表直接在标签内部使用 1&lt;p style=&quot;color:red;&quot;&gt;我是内容&lt;/p？ style就是属性 写法要符合css规范 3外部样态表1234这是文件名字为：style.css div&#123;color:red;&#125; 123456&lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;syy.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;我是内容&lt;/div&gt;&lt;/body&gt; 4chrome调试工具点我查看 5.Emmet语法6.CSS复合选择器后代选择器,子选择器,并集选择器, 1.后代选择器 主要元素1 元素2{} 1234567891011 &lt;style&gt; ol li a &#123;color:pink&#125; .name li&#123;color: seagreen;&#125; &lt;/style&gt;&lt;ol&gt; &lt;li&gt;我是后代&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我是孙子&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol class=&quot;name&quot;&gt; &lt;li&gt;我是神乐&lt;/li&gt;&lt;/ol&gt; 2.子选择器 重要3,并集选择器用逗号分隔开了 123456789div,p&#123;&#125;&lt;div&gt; &lt;/div&gt;&lt;p&gt; &lt;/p&gt; 4.伪类选择器用：表示 1.链接伪类有很多种链接伪类 link visited hover active 1234a:hover&#123;color:gray;&#125;鼠标经过显示gray颜色 1234567a&#123;color:gray;&#125;a:hover&#123;color:red;&#125; 2.:focus伪类选择器123input:focus&#123;background-color:yellow;&#125; 7.CSS元素显示模式（重点)html元素分为块元素和行内元素两类型 1.块元素h p div ul ol li等是最常见的div是最典型的 特点独占一行 高度宽度外内边距等可以控制 宽度默认为容器（父级宽度）100% 是一个容器以及盒子 可以放行内以及块级元素 文字类的元素不能使用块级元素 p里面只能放文字 2.行内元素a strong b em i del s ins u span span是最典型的行内元素 高宽无效 一行可以显示多个 默认宽度就是本身内容宽度 3.行内块元素img input td 两个特点都有比较特殊 总结 4.元素显示模式转换display:block;转换块元素 display:inline;转换行内元素 display:inline-block行内块元素 12345&lt;style&gt; a&#123; display:block; &#125;&lt;/style&gt; 5.实例简洁版本侧边档123456789101112131415161718192021&lt;style&gt; a&#123; display: block; height: 20px; width: 100px; background-color: darkgray; font-size: 14px ; color: #fff; text-indent: 2em; text-decoration: none; &#125; a:hover&#123; background-color: coral; &#125;&lt;/style&gt;&lt;body&gt; &lt;a href=&quot;#&quot;&gt;手机&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;电视&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;盒子&lt;/a&gt;&lt;/bod》 6单行文字垂直居中可以通过文字的行高等于盒子的高度，就可以垂直居中 8CSS的背景小图片或者logo大图片 背景颜色图片 平铺 位置 固定等等 1.background-colorbackground-color一般默认为transparent 2.background-image使用方法为 background-image:url (); 123456789101112&lt;head&gt; &lt;style&gt; div&#123; width: 5000px; height: 1500px; background-image: url(![](https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112101445712.png)); &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;&lt;/div&gt;&lt;/body&gt; 3.background-repeat123456background-repeat:;/*默认平铺*/no-repeatrepeatrepeat-xrepeat-y 4.background-position可以修改图片位置 12345678910111213background-position:x y;/*参数分为两种length 百分数position 方位名词 top center bottom left center right如果都是方位名词，与前后无关如left top和top left在一些情况下 想要精准也可以通过精确坐标 d*/ 5.background-attachment背景固定 背景附着 这个设置设置背景图片是否固定还是滚动 scroll为滚动fixed为固定 6背景属性混合写法前五个复合写法可以像font一样节约代码量 一般没有要求但是，一般习惯写为一下 background:背景颜色 背景图片 背景平铺 背景滚动 位置 1background: red url() no-repeat fixed top; 7.背景色半透明1background:(0,0,0,alpht) 7.综合案例 五彩导航12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;综合案例-五彩导航&lt;/title&gt; &lt;style&gt; .nav a&#123; display:inline-block; width: 120px; height: 58px; background-color: pink; text-align: center; color: #fff; text-decoration: none; line-height: 48px; &#125; .nav .bg1&#123; background-image: url(images/bg1.png); &#125; .nav .bg2&#123; background-image: url(images/bg2.png); &#125; .nav .bg1:hover&#123; background-image: url(images/bg11.png); &#125; .nav .bg2:hover&#123; background-image: url(images/bg22.png); &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;nav&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;bg1&quot;&gt;五彩导航&lt;/a&gt; &lt;a href=&quot;#&quot; class=&quot;bg2&quot;&gt;五彩导航&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;五彩导航&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;五彩导航&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;五彩导航&lt;/a&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 9.CSS三大特征1.层叠性123456789101112131415161718 &lt;style&gt; div&#123; color:red; &#125; div&#123; color: royalblue; font-size: 50px; &#125; div&#123; color:seagreen &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt; 大江东去 &lt;/div&gt;&lt;/body&gt; 这里div有三个选择 但是只执行的只有fintsize和最后一个color 就近原则，哪个近就执行哪个 样态不冲突 不会重叠 2.继承性现实的继承 我们继承了父亲的姓 123456789101112 &lt;style&gt; div &#123; color: pink; font-size: 14px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt; &lt;p&gt;龙生龙,凤生凤,老鼠生的孩子会打洞&lt;/p&gt; &lt;/div&gt;&lt;/body&gt; p继承了父div的性质 继承性就是简化代码 降低复杂性text font line 行高的继承123456789101112131415161718192021222324252627282930313233343536&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;行高的继承&lt;/title&gt; &lt;style&gt; body &#123; color: pink; /* font: 12px/24px &#x27;Microsoft YaHei&#x27;; */ font: 12px; &#125; div &#123; /* 子元素继承了父元素 body 的行高 1.5 */ /* 这个1.5 就是当前元素文字大小 font-size 的1.5倍 所以当前div 的行高就是21像素 */ font-size: 14px; &#125; p &#123; /* 1.5 * 16 = 24 当前的行高 */ font-size: 16px; &#125; /* li 么有手动指定文字大小 则会继承父亲的 文字大小 body 12px 所以 li 的文字大小为 12px 当前li 的行高就是 12 * 1.5 = 18 */ &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;粉红色的回忆&lt;/div&gt; &lt;p&gt;粉红色的回忆&lt;/p&gt; &lt;ul&gt; &lt;li&gt;我没有指定文字大小&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; 3.优先性 选择器相同 则执行层叠层 不同 根据选择器权重决定 12345678910111213141516 &lt;style&gt; .test &#123; color: red; &#125; div &#123; color: pink!important; &#125; #demo &#123; color: green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;test&quot; id=&quot;demo&quot; style=&quot;color: purple&quot;&gt;你笑起来真好看&lt;/div&gt;&lt;/body&gt; 10.盒子模型（超重点）Box Model学习页面布局有三大模型 盒子 浮动 定位 12345盒子中要有border边框content内容padding内边距margin外边距 1.border边框border中有 宽度 边框样态 颜色 123456789101112131415&lt;style&gt; div&#123; width: 300px; height: 200px; border-style: solid;/*solib实线 dashed 虚线 dotted点线边框*/ border-width: 20px; border-color: red; &#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 1234567891011121314151617边框的复合写法 没有顺序 &lt;style&gt; div &#123; width: 300px; height: 200px; /* border-width: 5px; border-style: solid; border-color: pink; */ /* 边框的复合写法 简写: */ /* border: 5px solid pink; */ /* 上边框 */ border-top: 5px solid pink; /* 下边框 */ border-bottom: 10px dashed purple; border:red 5px solid; &#125; &lt;/style&gt; 2.padding内边距padding控制内边距 12345678div &#123; width: 300px; height: 160px; background-color: pink; padding-top: 20px; padding-left: 22px; padding-right: 22px; &#125; padding影响了盒子的大小 会撑大盒子 1234567891011121314151617.nav &#123; height: 41px; border-top: 3px solid red; border-bottom: 1px solid beige; background-color: #fcfcfc; line-height: 41px;&#125;.nav a &#123; display: inline-block; font-size: 12px; color: blue; text-decoration: none; padding: 0 20px; height: 41px;&#125; 3.margin外边距两个盒子的距离 还是和内边距相似 top right bottom left 外边距作用为水平居中 指定宽度 盒子左右外边距为auto 123margin-left:auto;margin-right:auto;margin:auto;margin:0 auto; 行内和行内块用text-alignLcenter 11.浮动float传统网页布局三种方式 普通流 浮动 定位 标准流（普通 文档）按照标签规定默认排序 块单独一行 从上香下排序又div hr h1-h6 ui ol form table 行内按照左右排序如 span a i em 3浮动元素具有行内吧块元素特征 123456789101112131415161718192021222324252627282930313233343536 &lt;style&gt; * &#123; margin: 0; padding: 0; &#125; li &#123; list-style: none; &#125; .box &#123; width: 1226px; height: 285px; background-color: pink; margin: 0 auto; &#125; .box li &#123; width: 296px; height: 285px; background-color: purple; float: left; margin-right: 14px; &#125; .box .last &#123; margin-right: 0; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;ul class=&quot;box&quot;&gt; &lt;li&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li class=&quot;last&quot;&gt;4&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; 清除浮动 12定位有些效果无法用标准流和浮动，这时候要用定位 浮动可以让多个块级元素在一行没有空袭 定位用于自由控制盒子 1static静态定位没有边偏移 2relative相对定位 3absolute绝对定位子绝父相 对定位 子绝父相","categories":[{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"前端","slug":"编程/前端","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"编程/前端/CSS","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/CSS/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://kaguranotamashii.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"CSS","permalink":"https://kaguranotamashii.github.io/tags/CSS/"}]},{"title":"JavaScript基础","slug":"[main]CS/[main]web/基础三件套/JavaScript入门","date":"2021-12-01T11:19:12.000Z","updated":"2022-07-16T15:37:41.557Z","comments":true,"path":"posts/53227/","link":"","permalink":"https://kaguranotamashii.github.io/posts/53227/","excerpt":"前端三剑客的大哥捏","text":"前端三剑客的大哥捏 1.关于JavaScript1.JavaScript是什么？ HTML 定义了网页的内容 CSS 描述了网页的布局 JavaScript 控制了网页的行为 浏览器不会执行js，通过js解释器 js的引入有三种 行内式的内嵌式 输入输出语句12345678JavaScript 显示数据JavaScript 可以通过不同的方式来输出数据：使用 window.alert() 弹出警告框。使用 document.write() 方法将内容写到 HTML 文档中。使用 innerHTML 写入到 HTML 元素。使用 console.log() 写入到浏览器的控制台。 字面量和变量js是一种弱类型或者动态的语言，不用提前声明类型，类型被自动确定 数字（Number）字面量 可以是整数或者是小数，或者是科学计数(e)。 1isNaN来判断是否为非数字，并返回一个值 如果是数字返回false，反之true 字符串（String）字面量 可以使用单引号或双引号:表达式字面量 用于计算： 数组（Array）字面量 定义一个数组： [40, 100, 1, 5, 25, 10] 对象（Object）字面量 定义一个对象： {firstName:”John”, lastName:”Doe”, age:50, eyeColor:”blue”} 函数（Function）字面量 定义一个函数： function myFunction(a, b) { return a * b;} 在编程语言中，变量用于存储数据值。 JavaScript 使用关键字 var 来定义变量， 使用等号来为变量赋值： JavaScript 数据类型JavaScript 有多种数据类型：数字，字符串，数组，对象等等： 12345var length = 16; // Number 通过数字字面量赋值var points = x * 10; // Number 通过表达式字面量赋值var lastName = &quot;Johnson&quot;; // String 通过字符串字面量赋值var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;]; // Array 通过数组字面量赋值var person = &#123;firstName:&quot;John&quot;, lastName:&quot;Doe&quot;&#125;; // Object 通过对象字面量赋值 var cars = new Array();cars[0] = “Saab”;cars[1] = “Volvo”;cars[2] = “BMW”; 对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔： var person={firstname:”John”, lastname:”Doe”, id:5566}; 上面例子中的对象 (person) 有三个属性：firstname、lastname 以及 id。 var person={firstname : “John”,lastname : “Doe”,id : 5566}; 12345678var person=&#123; firstname : &quot;John&quot;, lastname : &quot;Doe&quot;, id : 5566&#125;;document.write(person.lastname + &quot;&lt;br&gt;&quot;);document.write(person[&quot;lastname&quot;] + &quot;&lt;br&gt;&quot;); 语句 描述 break 用于跳出循环。 catch 语句块，在 try 语句块执行出错时执行 catch 语句块。 continue 跳过循环中的一个迭代。 do … while 执行一个语句块，在条件语句为 true 时继续执行该语句块。 for 在条件语句为 true 时，可以将代码块执行指定的次数。 for … in 用于遍历数组或者对象的属性（对数组或者对象的属性进行循环操作）。 function 定义一个函数 if … else 用于基于不同的条件来执行不同的动作。 return 退出函数 switch 用于基于不同的条件来执行不同的动作。 throw 抛出（生成）错误 。 try 实现错误处理，与 catch 一同使用。 var 声明一个变量。 while 当条件语句为 true 时，执行语句块。 值类型(基本类型)：字符串（String）、数字(Number)、布尔(Boolean)、对空（Null）、未定义（Undefined）、Symbol。 引用数据类型（对象类型）：对象(Object)、数组(Array)、函数(Function)，还有两个特殊的对象：正则（RegExp）和日期（Date）。 函数匿名函数123var fun =funtion()&#123;console.log(&quot;hello world&quot;);&#125; 声明函数一次声明多次使用 形参和实参 返回值 匿名函数12345setInterval(function()&#123; console.log(&quot;hello&quot;)&#125;,100)setInterval重复使用//将匿名函数作为参数传递给定一个函数，或者方法 函数表达式12345const fun=funtion(n,m)&#123;return n+m;&#125;let result=fun(11,33);console.log(result); 方法1234567891011const cat=&#123; name:&quot;xiaosong&quot;, sayName:funtion()&#123; console.log(this.name); &#125; //或者 sayName()&#123; console.log(this.name); &#125; &#125; 箭头函数12345const fun = (x) =&gt; &#123; return x * x;&#125;const fun = (x) =&gt; x * x; 面向对象prototype ES5继承关系 ES6继承12345678910111213141516&lt;script&gt; class Animal &#123; constructor(name, age) &#123; this.name = name; this.age = age; &#125; sayName() &#123; console.log(`我是$&#123;this.name&#125;`) &#125; &#125; class Dog extends Animal &#123; &#125; let dog = new Dog(&quot;旺财&quot;); dog.sayName();&lt;/script&gt; 创建方法1利用对象字面量创建对象123456789var obj-&#123;uname: &quot;songyuran&quot;,age: 18,sayhi: funtion()&#123;console.log(&quot;log&quot;);&#125;&#125; 利用new object创建对象1234var obj=new Object();obj,uname=&#x27;songyiran&#x27;; 构造函数因为一上只能创建一个对象，有了构造函数可以让相同的属性和方法抽象出来封装出来到函数里面 123456funtion Star(uname,age,sex)&#123;this.name=uname;this.age=age;this,sex=sex;&#125;var ldh=new Star(&quot;songyuran&quot;,18,&#x27;nan&#x27;); 遍历对象1234for(var k in obj)&#123;console.log(k);console.log(obj[k]);&#125; 数组遍历while for forin forof map mappush方法pop12345678910111213var a = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;];a.pop();a.push(&quot;E&quot;);a.sort()console.log(a);var b = [1, 24, 5, 6, 78]var newList = list.filter(function (item) &#123; if (item &gt; 3) &#123; return item; &#125;&#125;);console.log(newList); 内置对象Math1random()*(max-min+1)+min//0《=x《1 date 正则表达式123var str=&quot;123&quot;;var reg=/123/;var result=reg.test(str); ES6变量1234567let变量块级作用域不存在变量提升不允许重复声明 常量1234567891.const定义常量2.定义后不能修改3.不变的模板字符串 let year = &#x27;2020&#x27;; let mouth = &#x27;10&#x27;; let date = &#x27;11&#x27;; let result = `$&#123;year&#125;年$&#123;mouth&#125;月$&#123;date&#125;日`; console.log(result); DOM元素节点 属性节点 文本节点 DOM树获取元素获取ID1234getElementByld()get element by idconsole.dir打印返回的元素对象，更好查看里面的属性和方法 根据标签名12getElementByTagNameelement.getElementByTagName 根据类名1getElementByClassName 返回指定选择器第一个元素对象1querySelector 返回指定所有的选择器所以元素对象1query.SelectorAll 获取特殊元素body1document.body html1document.documentElemnt 事件基础事件源 事件类型 事件处理程序 三要素 12345var btn =document.getElemnent.byId(&#x27;btn&#x27;)btn.onclick =funtion()&#123;alert(&quot;hello world&quot;)&#125; 修改元素 DOM 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; .swiper &#123; width: 640px; height: 320px; overflow: hidden; position: relative; &#125; .images-container &#123; width: 1920px; height: 320px; display: flex; transition: transform 0.9s; &#125; .images-container img &#123; width: 640px; height: 320px; &#125; /* .images-container:hover &#123; transform: translate(-640px); &#125; */ .number-list &#123; position: absolute; bottom: 0; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;swiper&quot;&gt; &lt;div class=&quot;images-container&quot;&gt; &lt;img src=&quot;20220710232803.png&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;20220710232826.png&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;20220710232832.png&quot; alt=&quot;&quot;&gt; &lt;/div&gt; &lt;div class=&quot;number-list&quot;&gt; &lt;button&gt;1&lt;/button&gt; &lt;button&gt;2&lt;/button&gt; &lt;button&gt;3&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; let btnList = document.querySelectorAll(&quot;.number-list button&quot;); let container = document.querySelector(&quot;.image-container&quot;); for (let i in btnList) &#123; btnList[i].onclick = function () &#123; container.style.transform = `translate(-555px)`; &#125; &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; DOM操作12345在ui里添加liul.innerHtml=`&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;` 节点操作i&gt;```` 节点操作","categories":[{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"前端","slug":"编程/前端","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"},{"name":"javascript","slug":"编程/前端/javascript","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://kaguranotamashii.github.io/tags/javascript/"}]},{"title":"美化博客出现的问题","slug":"[main]hexo/美化博客出现的问题","date":"2021-11-25T09:00:41.000Z","updated":"2022-07-16T06:26:10.088Z","comments":true,"path":"posts/13590/","link":"","permalink":"https://kaguranotamashii.github.io/posts/13590/","excerpt":"总结hexo错误的原因和措施","text":"总结hexo错误的原因和措施 我今天在美化我的博客的时候本地启动的时候出现了奇怪的问题，导致不能添加新的Md文章。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647INFO Validating configINFO Start processingERROR &#123; err: TypeError: Cannot read properties of null (reading &#x27;utcOffset&#x27;) at exports.timezone (E:\\kagura blog\\myblog\\1125错误\\node_modules\\hexo\\lib\\plugins\\processor\\common.js:56:42) at E:\\kagura blog\\myblog\\1125错误\\node_modules\\hexo\\lib\\plugins\\processor\\post.js:81:38 at tryCatcher (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\util.js:16:23) at Promise._settlePromiseFromHandler (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:544:35) at Promise._settlePromise (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:604:18) at Promise._settlePromise0 (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:649:10) at Promise._settlePromises (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:729:18) at Promise._fulfill (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:673:18) at PromiseArray._resolve (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:127:19) at PromiseArray._promiseFulfilled (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:145:14) at PromiseArray._iterate (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:115:31) at PromiseArray.init [as _init] (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:79:10) at Promise._settlePromise (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:601:21) at Promise._settlePromise0 (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:649:10) at Promise._settlePromises (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:729:18) at Promise._fulfill (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:673:18) at PromiseArray._resolve (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:127:19) at PromiseArray._promiseFulfilled (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:145:14) at Promise._settlePromise (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:609:26) at Promise._settlePromise0 (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:649:10) at Promise._settlePromises (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:729:18) at _drainQueueStep (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\async.js:93:12)&#125; Process failed: %s _posts/111.mdERROR &#123; err: TypeError: Cannot read properties of null (reading &#x27;utcOffset&#x27;) at exports.timezone (E:\\kagura blog\\myblog\\1125错误\\node_modules\\hexo\\lib\\plugins\\processor\\common.js:56:42) at E:\\kagura blog\\myblog\\1125错误\\node_modules\\hexo\\lib\\plugins\\processor\\post.js:81:38 at tryCatcher (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\util.js:16:23) at Promise._settlePromiseFromHandler (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:544:35) at Promise._settlePromise (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:604:18) at Promise._settlePromise0 (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:649:10) at Promise._settlePromises (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:729:18) at Promise._fulfill (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:673:18) at PromiseArray._resolve (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:127:19) at PromiseArray._promiseFulfilled (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:145:14) at PromiseArray._iterate (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:115:31) at PromiseArray.init [as _init] (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:79:10) at Promise._settlePromise (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:601:21) at Promise._settlePromise0 (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:649:10) at Promise._settlePromises (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:729:18) at Promise._fulfill (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:673:18) at PromiseArray._resolve (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:127:19) at PromiseArray._promiseFulfilled (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise_array.js:145:14) at Promise._settlePromise (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:609:26) at Promise._settlePromise0 (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:649:10) at Promise._settlePromises (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\promise.js:729:18) at _drainQueueStep (E:\\kagura blog\\myblog\\1125错误\\node_modules\\bluebird\\js\\release\\async.js:93:12)&#125; Process failed: %s _posts/博客记录.md 幸亏有备份将我的源文件备份好了，否则恐怕就要重新去配置了。 为了防止下次再出现这种情况 源文件必须要在GitHub备份 历史更新记录描述一定要描述清楚了 6/27 乐了，日期和title出现 null情况 是因为scaffolds里面的post中两个大括号出现了空格 123456title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:categories: hide: falsecover: hide: falsecover:```","categories":[{"name":"个人博客","slug":"个人博客","permalink":"https://kaguranotamashii.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"name":"问题","slug":"个人博客/问题","permalink":"https://kaguranotamashii.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E9%97%AE%E9%A2%98/"}],"tags":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"https://kaguranotamashii.github.io/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"}]},{"title":"Html基础","slug":"[main]CS/[main]web/基础三件套/html基础","date":"2021-11-23T15:49:10.000Z","updated":"2022-07-16T15:37:41.556Z","comments":true,"path":"posts/48593/","link":"","permalink":"https://kaguranotamashii.github.io/posts/48593/","excerpt":"前端三剑客的弟弟","text":"前端三剑客的弟弟 [TOC] 1.HTML入门​ html是创建网页的标准标记语言。网页有很多的格式,html,jsp,asp等 ，html并不是编程语言，因为编程语言具有逻辑能力，html超越了传统的txt文本，具有超文本性，是一种标记语言。 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;//这是文档的声明，声明文档为html&lt;html lang=&quot;zh-CN&quot;&gt;//en zh-CN&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;这是网页标题&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;这是一段文本&lt;/p&gt; &lt;a href=&quot;http://c.biancheng.net/&quot;&gt;这个一个超链接&lt;/a&gt; &lt;ul&gt; &lt;li&gt;HTML教程&lt;/li&gt; &lt;li&gt;CSS教程&lt;/li&gt; &lt;li&gt;JavaScript教程&lt;/li&gt; &lt;/ul&gt; &lt;input type=&quot;text&quot; placeholder=&quot;请输入内容&quot; /&gt; &lt;h1&gt;这是一个标题&lt;/h1&gt;//h1-h6 &lt;p&gt;这是一个段落&lt;/p&gt; &lt;p&gt;这是另一个段落&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 以上这个就是最基本的网页格式，每个html标签(Tag)都有不同的含义 &lt;.html&gt;当作所有的html代码，可以把它当作外壳 &lt;.head&gt; 标签表示网页的头部，用来设置一些网页的参数 &lt;.meta charset=”UTF-8”&gt; 指明当前网页编码格式 UTF-8； &lt;.title&gt; 网页的标题，它会显示在浏览器的标题栏。&lt;./head&gt; &lt;.body&gt;表示正文 &lt;.p&gt;表示段落，能容纳一段文字 &lt;.a&gt;用来表示一个超链接&lt;.ul&gt;表示一个列表，里面的是子标签 HTML语言中最推荐vscode写 &lt;!DOCTYPE&gt; html小白入门 这是文本标题，下面是一张图片 按钮 d ​ 1234567891011121314&lt;!DOCTYPE&gt;&lt;!--html标记--&gt;&lt;html&gt; &lt;!--html总标记--&gt; &lt;head&gt;&lt;!--头信息标签--&gt; &lt;meta charset=&quot;utf-8&quot;&gt;&lt;!--utf-8编码--&gt; &lt;title&gt;html小白入门&lt;/title&gt;&lt;!--页面标题--&gt; &lt;head&gt; &lt;body&gt;&lt;!--网页显示标签，body标签内的信息都会在页面中显示--&gt; &lt;h1&gt;这是文本标题，下面是一张图片&lt;/h1&gt;&lt;!--文本标题标签--&gt; &lt;h2 href=&quot;baidu.com&quot;&gt;点我百度搜索&lt;/a&gt;&lt;!--超链接--&gt; &lt;imgsrc=&quot;tupian.jpg&quot;&gt;&lt;br&gt;&lt;!--图片标签，br是换行标签--&gt; &lt;input type=&quot;text&quot; value=&quot;这是输入框，请输入内容！&quot;&gt;&lt;br&gt;&lt;!--输入框标签--&gt; &lt;button type=&quot;submit&quot; &gt;按钮&lt;/button&gt;&lt;!--按钮标签--&gt; &lt;/body&gt;&lt;/html&gt; 这个就是最基本的使用方法 2.HMTL的语法1.html标签的语法格式(请忽略.)&lt;.div class=”foo”&gt;我是内容&lt;/div.&gt;foo为属性 前后div为开始结束标签 开始标签可以写除了class的比如id title等 html标签是成对出现的，称之为双标签有些特殊的比如说 div为内容划分元素 是出现最高的 2.标签关系HTML标签包含关系1234567891011 &lt;h1&gt;神楽の魂&lt;font size=&quot;4&quot; color=&quot;#666&quot;&gt;自我介绍&lt;/font&gt;&lt;/h1&gt; &lt;p&gt; 这是北京普通的双非&lt;b&gt;大学生&lt;/b&gt;的个人博客，目前 &lt;font color=&quot;red&quot;&gt;18岁&lt;sup&gt;①&lt;/sup&gt;&lt;/font&gt;，&lt;a href=&quot;https://kaguranotamashii.github.io/&quot; target=&quot;_blank&quot;&gt;猛击这里&lt;/a&gt;查看我的博客&lt;i&gt;C语言&lt;/i&gt;、&lt;i&gt;python&lt;/i&gt;、&lt;i&gt;html&lt;/i&gt; &lt;i&gt;css&lt;/i&gt; &lt;hr /&gt; &lt;small&gt;03年出生&lt;/small&gt; &lt;/p&gt;&lt;!包含关系&gt;&lt;html&gt; &lt;head&gt; &lt;/head&gt;&lt;/html&gt; 对代码的说明 &lt;.font&gt; size改变大小 clor改变颜色 &lt;.b&gt;加粗 &lt;.sup&gt;上方的小标 &lt;.i&gt;斜 &lt;.hr&gt;分割线，它是自闭和标签 &lt;.a&gt;为打开超链接 其中&lt;.target&gt;为打开方式 ——blank表示在新标签打开 并列关系(兄弟关系)&lt;.head&gt;&lt;/.head&gt; 基本标签 html标签 根标签 头部 在head中我们必须要设计的标签是title 标题 属于自己的网页标题 主体 元素包含的所有内容，页面内容基本都是放在body中的 3.HTML属性1.属性1attr=&quot;value&quot; attr为属性名字 value表示属性值 1.专用属性有些属性适合大部分 叫通用属性有些只适合小部分 叫专用属性比如说img中src和alt就是专用属性 a中href和target也是专用属性 1&lt;img src=&quot;xxxx.png&quot; alt=&quot;xxxxx&quot; width=&quot;100&quot; height=&quot;50&quot;&gt; 2.通用属性如id,title,class,style 1.idid属性是用来赋值给某个标签名字，当使用css或者js时候，可以通过id来找到这个标签。 id可以快速找到定位，id可以方便区分，id具有唯一性 123&lt;input type=&quot;text&quot; id=&quot;name&quot; /&gt;&lt;div id=&quot;content&quot;&gt;我的博客&lt;/div&gt;&lt;p id=&quot;url&quot;&gt;kaguranotamashii.github.io/&lt;/p&gt; 2.classclass与id不同在于，class可以定义多个相同值 class=” “ 123&lt;div class=&quot;className1 className2 className3&quot;&gt;&lt;/div&gt;&lt;p class=&quot;content&quot;&gt;神楽の魂的博客&lt;/p&gt;&lt;div class=&quot;content&quot;&gt;kaguranotamashii.github.io&lt;/div&gt; 3.titletitle属性是用来标签内容的描述说明 12345678910&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;演示文档&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;a href=&quot;http://c.biancheng.net/html/&quot; title=&quot;HTML教程&quot;&gt;HTML教程&lt;/a&gt;&lt;/body&gt;&lt;/html&gt; 4.stylestyle属性我们可以在html标签内部定义css样态，比如颜色，字体等等 123456789101112131415&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;演示文档&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;p style=&quot;color:red;&quot;&gt;kaguranotamashii,github.io&lt;/p&gt; &lt;img src=&quot;./logo.png&quot; style=&quot;height:50px;&quot; alt=&quot;C语言中文网LOGO&quot;&gt; &lt;div style=&quot;padding:10px;border:2px solid #999;text-align:center;&quot;&gt;C语言中文网&lt;/div&gt;&lt;!这里做个批注padding表示内边距，内容区与边框之间的区域 border表示设置元素的边框--&gt; &lt;/body&gt;&lt;/html&gt; 4.HTML标题1.&lt;.h1&gt;到&lt;.h6&gt;（head)123456789101112131415&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;HTML标题标签演示&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;h1 标题&lt;/h1&gt; &lt;h2&gt;h2 标题&lt;/h2&gt; &lt;h3&gt;h3 标题&lt;/h3&gt; &lt;h4&gt;h4 标题&lt;/h4&gt; &lt;h5&gt;h5 标题&lt;/h5&gt; &lt;h6&gt;h6 标题&lt;/h6&gt;&lt;/body&gt;&lt;/html&gt; 标题标签的使用只能用于定义标签，不能加粗 5.HTML段落标签&lt;.p&gt;paragraph 1234567891011&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; &lt;title&gt;测试&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;这是神楽の魂的博客网站为&lt;a href=&quot;kaguranotamashii.github.io&quot;&gt;点我&lt;/a&gt;&lt;/p&gt; &lt;p&gt;我的博客会写一些技术向的内容&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; 1.&lt;.p&gt;的用法段落标签由开始标签&lt;p&gt;和结束标签&lt;/p&gt;组成，开始和结束标签之间的内容会被视为一个段落。段落标签是一个非常基本的标签，我们在网页上发布文章时就会用到 2.段落中的空白符123456789101112131415&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;HTML段落中的空白符&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;神 楽の魂 的 博 客&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 如果想要在段落中换行，需要使用专门的换行标签&lt;br /&gt;，&lt;br /&gt;标签属于自闭和标签，因此不需要对应的结束标签`&lt; /br&gt; 文本在一个段落中会根据浏览器窗口大小自动换行 段落与段落有空隙 6.HTML文本格式化突出重要性 比普通文字更重要 标签 描述 &lt; b&gt;…&lt;/b&gt; 加粗标签中的字体 &lt; em&gt;…&lt;/em&gt; 强调标签中的内容，并使标签中的字体倾斜 &lt; i&gt;…&lt;/i&gt; 定义标签中的字体为斜体 &lt; small&gt;…&lt;/small&gt; 定义标签中的字体为小号字体 &lt; strong&gt;…&lt;/strong&gt; 强调标签中的内容，并将字体加粗（推荐） &lt; sub&gt;…&lt;/sub&gt; 定义下标文本 &lt; sup&gt;…&lt;/sup&gt; 定义上标文本 &lt; ins&gt;…&lt;/ins&gt; 下划线 &lt; del&gt;…&lt;/del&gt; 在文本内容上添加删除线 &lt; code&gt;…&lt;/code&gt; 定义一段代码 &lt; kbd&gt;…&lt;/kbd&gt; 用来表示文本是通过键盘输入的(不建议使用) &lt; samp&gt;…&lt;/samp&gt; 定义程序的样本 &lt; var&gt;…&lt;/var&gt; 定义变量 &lt; pre&gt;…&lt;/pre&gt; 定义预格式化的文本，被该标签包裹的文本会保留所有的空格和换行符，字体也会呈现为等宽字体 &lt; abbr&gt;…&lt;/abbr&gt; 用来表示标签中的内容为缩写形式 &lt; address&gt;…&lt;/address&gt; 用来定义文档作者的联系信息，被该标签包裹的文本通常会以斜体呈现，并在文本前面换行 &lt; bdo&gt;…&lt;/bdo&gt; 定义标签中的文字方向 &lt; blockquote&gt;…&lt;/blockquote&gt; 定义一段引用的文本，例如名人名言，文本会换行输出，并在左右两边进行缩进 &lt; q&gt;…&lt;/q&gt; 定义一段短的引用，浏览器会将引用的内容使用双引号包裹起来 &lt; cite&gt;…&lt;/cite&gt; 表示对某个文献的引用，例如书籍或杂志的名称，文本会以斜体显示 &lt; dfn&gt;…&lt;/dfn&gt; 用来定义一个术语，标签中的文本会以斜体呈现 几个相似的格式化文本1.strong和b前者表示加重语气,后者只是单纯的加粗,在无障碍模式中strong会比b的声音更特殊. 2.em和iem也是加重处理,i仅仅是单纯的斜体 7div和span标签两者没有语义，他们就是一个盒子，用来放内容 div division表示分割 分区span表示跨度 跨距 div用来布局 但是一行只能有一个div 大盒子span相反 一行可以放多个span 小盒子 8.特殊的字符 123&amp;nbsp;空格&amp;lt;小于&amp;gt;大于 7.HTML超链接&lt;.a&gt;1.用法1&lt;a href=&quot;url&quot; target=&quot;opentype&quot;&gt;链接文本&lt;/a&gt; 2href的属性anchor 瞄 href 属性指定链接的目标，也就是要跳转到什么位置。href 可以有多种形式，例如： href 可以指向一个网页（.html、.php、.jsp、.asp 等格式），这也是最常见的形式，例如 href=”http://c.biancheng.net/view/1719.html&quot;； href 可以指向图片（.jpg、.gif、.png 等格式）、音频（.mp3、.wav等格式）、视频（.mp4、.mkv格式）等媒体文件，例如 href=”/uploads/allimg/181221/134I32557-0.jpg”； href 可以指向压缩文件（.zip、.rar 等格式）、可执行程序（.exe）等，一些下载网站的链接就可以写成这种形式，例如 href=”./../uploads/data_package/ComputerFoundation.zip”； href 甚至还可以指向本机的文件，只是很少这样使用，例如 href=”D:/Program Files/360/360safe/360Safe.exe”。 你看，href 本质上就是指向一个文件，这个文件几乎可以是任意格式的。如果浏览器支持这种格式，那么它就可以在浏览器上显示，比如常见的图片、音频、视频等，如果浏览器不支持这种格式，那么就提示用户下载。 3.target的属性 属性值 说明 _self 默认，在现有窗口中打开新页面，原窗口将被覆盖。 _blank 在新窗口中打开新页面，原窗口将被保留。 _parent 在当前框架的上一层打开新页面。 _top 在顶层框架中打开新页面。 如果不设置默认为_self 4.href的本地网页跳转1234567&lt;a href=&quot;#sakura&quot;&gt;点我跳转&lt;/a&gt;&lt;p&gt;忽略我&lt;/p&gt;&lt;p&gt;忽略我&lt;/p&gt;&lt;p&gt;忽略我&lt;/p&gt;&lt;p&gt;忽略我&lt;/p&gt;&lt;p&gt;忽略我&lt;/p&gt;&lt;p id=&quot;sakura&quot;&gt;我是sakura&lt;/p&gt; 点我跳转 忽略我 忽略我 忽略我 忽略我 忽略我 我是sakura 8HTML插入图片&lt;.img&gt;1.用法1&lt;img src=&quot;url alt=&quot;text&quot;&gt; src(source)为必选属性,用来指明图片的地址和目录,支持多种图片类型 alt为可选属性,如果遇到图片加载不了,会显示alt的信息 123456&lt;body&gt; &lt;!-- 使用绝对路径插入网络图片 --&gt; &lt;img src=&quot;http://c.biancheng.net/cpp/templets/new/images/logo.jpg?v=3.994&quot; alt=&quot;C语言中文网Logo&quot;&gt; &lt;br&gt; &lt;!-- 在当前 HTML 文档的上层目录中有一个 images 文件夹，该文件夹下有一张图片 html5.png --&gt; &lt;img src=&quot;../images/html5.png&quot; alt=&quot;HTML5 Logo&quot;&gt;&lt;/body&gt; 2.设置图片的宽高度​ 比如这张图片渚薰被吃 1234&lt;img src=&quot;http://r34tujk76.hb-bkt.clouddn.com/blog/20211126/195024889.jpg&quot; alt=&quot;渚薰被吃了&quot;title=&quot;渚薰被吃&quot; style=&quot;width: 200px; height: 100px;&quot;&gt;&lt;img src=&quot;http://r34tujk76.hb-bkt.clouddn.com/blog/20211126/195024889.jpg&quot; alt=&quot;渚薰被吃了&quot; style=&quot;width: 200px; height: 150px;&quot;&gt;&lt;img src=&quot;http://r34tujk76.hb-bkt.clouddn.com/blog/20211126/195024889.jpg&quot; alt=&quot;渚薰被吃了&quot; style=&quot;width: 100px; height: 200px;&quot;&gt;&lt;img src=&quot;http://r34tujk76.hb-bkt.clouddn.com/blog/20211126/195024889.jpg&quot; alt=&quot;渚薰被吃了&quot; style=&quot;width: 150px; height: 200px;&quot;&gt; 3图片映射1234567891011121314&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;title&gt;HTML图片映射&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;img src=&quot;logo.png&quot; usemap=&quot;#objects&quot; alt=&quot;C语言中文网Logo&quot;&gt; &lt;map name=&quot;objects&quot;&gt; &lt;area shape=&quot;rect&quot; coords=&quot;0,0,82,126&quot; href=&quot;http://c.biancheng.net/html/&quot; alt=&quot;HTML教程&quot;&gt; &lt;area shape=&quot;circle&quot; coords=&quot;90,58,3&quot; href=&quot;http://www.biancheng.net/css3/&quot; alt=&quot;CSS教程&quot;&gt; &lt;area shape=&quot;circle&quot; coords=&quot;124,58,8&quot; href=&quot;http://www.biancheng.net/js/&quot; alt=&quot;JavaScript教程&quot;&gt; &lt;/map&gt;&lt;/body&gt;&lt;/html&gt; &lt;.map&gt;标签的name属性对应的是&lt;.img&gt;标签的usemap属性,&lt;.area&gt;用于定义点击图片的坐标shape 和 coords 属性 在 &lt;.area&gt; 标签中可以通过 shape 属性来定义可点击区域的形状，并通过 coords 属性来定义形状所对应的坐标。其中 shape 属性的可选值有三个，分别是 rect（矩形）、circle（圆形）和 poly（多边形），coords 属性中坐标的值则取决于可点击区域的形状。 假如定义一个矩形的可点击区域，示例代码如下： 1&lt;area shape=&quot;rect&quot; coords=&quot;x1, y1, x2, y2&quot; href=&quot;http://c.biancheng.net/&quot; alt=&quot;&quot;&gt; 其中 x1、y1 代表矩形的左上角坐标，x2、y2 代表矩形的右下角坐标。 假如定义一个圆形的可点击区域，示例代码如下： 1&lt;area shape=&quot;circle&quot; coords=&quot;x, y, radius&quot; href=&quot;&quot; alt=&quot;&quot;&gt; 其中 x、y 代表圆心的坐标，而 radius 则是圆的半径。 假如定义一个多边形的可点击区域，示例代码如下： 1&lt;area shape=&quot;poly&quot; coords=&quot;x1, y1, x2, y2, x3, y3, ..., xn, yn&quot; href=&quot;http://c.biancheng.net/&quot; alt=&quot;&quot;&gt; 其中每对 x 和 y 的值都代表一个多边形的顶点坐标。 注意：所有坐标都是相对于图片的左上角来计算的。 属性 属性值 说明 src 图片路径 必须属性 alt 文字 图片显示不出 title 文字 鼠标放在图片上后显示的文字 width 像素 宽度 height 像素 高度 border 像素 边框粗细 1234&lt;a href=&quot;http://baidu.com&quot;&gt; &lt;img src=&quot;http://r34tujk76.hb-bkt.clouddn.com/blog/20211126/195024889.jpg&quot;&gt;&lt;/a&gt; 9HTML&lt;.table&gt;表格1.表格使用代码12345678910111213141516171819202122&lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th&gt;名称&lt;/th&gt; &lt;th&gt;官网&lt;/th&gt; &lt;th&gt;性质&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;b站&lt;/td&gt; &lt;td&gt;bilibili.com&lt;/td&gt; &lt;td&gt;综合&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;百度&lt;/td&gt; &lt;td&gt;http://www.baidu.com/&lt;/td&gt; &lt;td&gt;搜索&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;当当&lt;/td&gt; &lt;td&gt;http://www.dangdang.com/&lt;/td&gt; &lt;td&gt;图书&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 在里面中出现了新的单词table tr td th tr表示table row 表示行数 td表示table datacell 表示表格的单元格 th表示table heading表示表头 2.表格的边框合并如果不进行修改会显示双层边框这时候利用css的border-collapse的属性为collapse 1&lt;table border=&quot;1&quot; style&quot;border-collapse:collapse&quot; 3.表格的标题&lt;.caption&gt;12&lt;table border=&quot;1&quot; style=&quot;border-collapse:collapse;&quot;&gt;&lt;caption&gt;这是标题&lt;/caption&gt; 第一行并且居中显示 4.合并rowspan跨行合并单元格colspan跨列合并单元格 1234567891011121314151617181920&lt;table border=&quot;1&quot; style=&quot;border-collapse: collapse;&quot;&gt; &lt;tr&gt; &lt;th&gt;名称&lt;/th&gt; &lt;th&gt;官网&lt;/th&gt; &lt;th&gt;性质&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;C语言中文网&lt;/td&gt; &lt;td&gt;http://c.biancheng.net/&lt;/td&gt; &lt;td&gt;教育&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td rowspan=&quot;2&quot;&gt;百度&lt;/td&gt; &lt;td&gt;www.baidu.com&lt;/td&gt; &lt;td&gt;搜索&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;2&quot;&gt;http://www.dangdang.com/&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 5.表格的属性 10.HTML列表标签&lt;.ul&gt;&lt;.ol&gt;&lt;.dl&gt; html为我们提功了三个列表表达方式 1.有序列表123456789&lt;body&gt; &lt;p&gt;煮米饭的步骤：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;将水煮沸&lt;/li&gt; &lt;li&gt;加入一勺米&lt;/li&gt; &lt;li&gt;搅拌均匀&lt;/li&gt; &lt;li&gt;继续煮10分钟&lt;/li&gt; &lt;/ol&gt;&lt;/body&gt; ol为order list的意思为有序列表li为 list item的意思为每一项 2.无序列表123456789&lt;body&gt; &lt;p&gt;早餐的种类：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;鸡蛋&lt;/li&gt; &lt;li&gt;牛奶&lt;/li&gt; &lt;li&gt;面包&lt;/li&gt; &lt;li&gt;生菜&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt; &lt;.ul&gt; 是 unordered list 的简称，表示无序列表。 &lt;..ul&gt; 和 &lt;.ol&gt; 中的 &lt;.li&gt; 一样，都表示列表中的每一项。默认情况下，无序列表的每一项都使用●符号表示。 3.自定义列表定义如下 12345678&lt;dl&gt; &lt;dt&gt;标题1&lt;dt&gt; &lt;dd&gt;描述文本2&lt;dd&gt; &lt;dt&gt;标题2&lt;dt&gt; &lt;dd&gt;描述文本2&lt;dd&gt; &lt;dt&gt;标题3&lt;dt&gt; &lt;dd&gt;描述文本3&lt;dd&gt;&lt;/dl&gt; dl为定义列表 dt为定义术语 dd为定义描述 12345678910&lt;body&gt; &lt;dl&gt; &lt;dt&gt;HTML&lt;/dt&gt; &lt;dd&gt;HTML 是一种专门用来开发网页的标记语言，您可以转到《&lt;a href=&quot;http://c.biancheng.net/html/&quot; target=&quot;_blank&quot;&gt;HTML教程&lt;/a&gt;》了解更多。&lt;/dd&gt; &lt;dt&gt;CSS&lt;/dt&gt; &lt;dd&gt;CSS 层叠样式表可以控制 HTML 文档的显示样式，用来美化网页，您可以转到《&lt;a href=&quot;http://c.biancheng.net/css3/&quot; target=&quot;_blank&quot;&gt;CSS教程&lt;/a&gt;》了解更多。&lt;/dd&gt; &lt;dt&gt;JavaScript&lt;/dt&gt; &lt;dd&gt;JavaScript 简称 JS，是一种用来开发网站（包括前端和后台）的脚本编程语言，您可以转到《&lt;a href=&quot;http://c.biancheng.net/js/&quot; target=&quot;_blank&quot;&gt;JS教程&lt;/a&gt;》了解更多。&lt;/dd&gt; &lt;/dl&gt;&lt;/body&gt; 4.列表的默认样态1234567891011121314 &lt;ol style=&quot;margin:0px auto; padding-left:20px; list-style:upper-latin;&quot;&gt; &lt;li&gt;将水煮沸&lt;/li&gt; &lt;li&gt;加入一勺米&lt;/li&gt; &lt;li&gt;搅拌均匀&lt;/li&gt; &lt;li&gt;继续煮10分钟&lt;/li&gt; &lt;/ol&gt;对 CSS 样式的说明：margin:0px auto;将上下外边距设置为 0 像素，将左右外边距设置为自动。margin-bottom:0px;将下方外边距设置为 0 像素。margin:auto auto 10px 0px;将上方和右侧外边距设置为自动，将下方外边距设置为 10 像素，将左侧外边距设置为 0 像素。padding-left:20px;将左侧内边距设置为 20 像素。list-style:upper-latin;将列表项标记设置为大写拉丁字母。list-style:square;将列表项标记设置为实心方块。 11.⛤⛤⛤&lt;.form&gt;标签如果想通过网页交互可以通过form实现 123&lt;form action=&quot;URL&quot; method=&quot;GET|POST&quot;&gt; 表单中的其它标签&lt;/form&gt; action属性表示表单交到哪里 method属性表示使用什么方式提交数据 表单属于 HTML 文档的一部分，其中包含了如输入框、复选框、单选按钮、提交按钮等不同的表单控件，用户通过修改表单中的元素（例如输入文本，选择某个选项等）来完成表单，通过表单中的提交按钮将表单数据提交给后端程序。 除了type以外input还有其它的属性 注意这个name，如果说没有name属性，在这里如果没有name属性比如上例，点击male和female都可以单选和复选name应该是相同的值 checked这个是默认勾选的，比如说用户同意这种的 1文字域 账号 密码 1234&lt;form&gt;账号&lt;input type=&quot;text&quot; name=&quot;firstname&quot;&gt;&lt;br&gt;密码&lt;input type=&quot;text&quot; name=&quot;lastname&quot;&gt;&lt;/form&gt; 2密码字段如果想输入密码的话 input type=”password”修改password 这样就输入字符串，会变成星号 123&lt;form&gt;Password: &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt;&lt;/form&gt; Password: 3.按钮1234&lt;form&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;Male&lt;br&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot; checked=&quot;checked&quot;&gt;Female&lt;/form&gt; Male Female 4.复选框checkboxes1234&lt;form&gt;&lt;input type=&quot;checkbox&quot; value&quot;男&quot;&gt;男&lt;br&gt; &lt;input type=&quot;checkbox&quot; value&quot;女&quot;&gt;女&lt;/form&gt; 男 女 5提交按钮1234&lt;form name=&quot;input&quot; action=&quot;html_form_action.php&quot; method=&quot;get&quot;&gt;Username: &lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;&lt;/form&gt; Username: Username: 假如您在上面的文本框内键入几个字母，然后点击确认按钮，那么输入数据会传送到 “html_form_action.php” 的页面。该页面将显示出输入的结果。 6.简单的下拉列表1234567&lt;p&gt;你喜欢吃什么&lt;/p&gt;&lt;form&gt;&lt;select name=&quot;cars&quot;&gt;&lt;option value=&quot;volvo&quot;&gt;洋芋&lt;/option&gt;&lt;option value=&quot;saab&quot; selected=&quot;selected&quot;&gt;土豆&lt;/option&gt;&lt;/select&gt;&lt;/form&gt; 你喜欢吃什么 洋芋 土豆 ![mark](https://kaguranotamashii-1308648145.cos.ap-beijing.myqcloud.com/202112051307064.png) ## 7重置reset 123&lt;form&gt; &lt;input type=&quot;reset&quot; value=&quot;点我重新填写&quot;&gt;&lt;/form&gt; 8定义点击按钮1&lt;input type=&quot;button&quot; value=&quot;点我&quot;&gt; 9上传文件1&lt;input type=&quot;file&quot; value=&quot;点我&quot;&gt; 10.label标签12&lt;input type=&quot;radio&quot;name=&quot;sex&quot; id=&quot;nan&quot;&gt;&lt;label for=&quot;nan&quot;&gt;男&lt;/label&gt;&lt;input type=&quot;radio&quot;name=&quot;sex&quot; id=&quot;nv&quot;&gt;&lt;label for=&quot;nv&quot;&gt;女&lt;/label&gt; 11.表单元素textarea表单元素 当用户输入过多的元素的时候不用单纯的text了 1234&lt;form&gt;今日反馈 &lt;textarea cols=&quot;5&quot; rows=&quot;1&quot;&gt; &lt;/textarea&gt;&lt;/form&gt; 今日反馈 13.html综合学习1注册界面.html综合学习 1注册界面","categories":[{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"前端","slug":"编程/前端","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"},{"name":"HTML","slug":"编程/前端/HTML","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/HTML/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://kaguranotamashii.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"学习","slug":"学习","permalink":"https://kaguranotamashii.github.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"html","slug":"html","permalink":"https://kaguranotamashii.github.io/tags/html/"},{"name":"css","slug":"css","permalink":"https://kaguranotamashii.github.io/tags/css/"}]},{"title":"我对程序员的再认知","slug":"我对程序员的再认识","date":"2021-11-22T16:08:12.000Z","updated":"2022-07-17T15:51:26.287Z","comments":true,"path":"posts/24454/","link":"","permalink":"https://kaguranotamashii.github.io/posts/24454/","excerpt":"1.接触在高三的时候，和同学讨论志愿报名的时候，一些学物理的男生就表示计算机挣钱多。“我的亲戚学历不高，就自学前端什么什么的，在北京挣了多多少钱”。","text":"1.接触在高三的时候，和同学讨论志愿报名的时候，一些学物理的男生就表示计算机挣钱多。“我的亲戚学历不高，就自学前端什么什么的，在北京挣了多多少钱”。 后来高考考上了信息科大的通信学院的电子信息工程（EE），没有考中我想去的CS（Computer Science），虽然很失望，但是可以尝试转专业。转专业的想法在我心中愈来愈强烈。因此从开始那天到Iflab社团招新那一段时候，我犯了很严重的错误。 2.反思程序员的灵魂是什么？算法？代码？直到加入了iflab社团，导师为新生推荐的书籍中，部分都是哲学类的书籍，一时让我有了进入了文艺社的感觉。后来才明白，我用VS2019写出来的代码虽然有1G大，但是它没有思想，没有灵魂，没有‘生命力’的躯壳。 翁PJ学长的‘做一个天马行空的人’这封给新生的一封信。让我反思起从这几周我的盲目性，单纯为学习而学习的思维是非常不正确的，Hr不会听你的大学当过什么什么，这个感觉太像我在高考后，渴望着明明考不上的大学听到我的故事，而破例录取，但现实是残酷的。 编程是为了什么？钱？自由？其实都有一定的存在。用代码创造出自己的世界。最近在学习前端语言的时候我注意到了一系列课叫应用无障碍。与此同时B站也推出了对聋人帮助的实时字幕。这就是编程给特殊群体带来的便利。再比如苹果以及安卓手机的无障碍模式，都是用代码来为特殊人群的帮助。 3.继续行走自己也是其中之一，我也感受到了代码的”温暖”，计算机中的代码不再是冷冰冰的英文字母和符号了，它变成了照亮迷路的旅途者的灯塔。 大一上半年的我，继续探索吧，寻找属于自己的灯塔吧，自己的方向吧。 202112051308290.png)","categories":[{"name":"闲聊杂谈","slug":"闲聊杂谈","permalink":"https://kaguranotamashii.github.io/categories/%E9%97%B2%E8%81%8A%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"闲聊杂谈","slug":"闲聊杂谈","permalink":"https://kaguranotamashii.github.io/tags/%E9%97%B2%E8%81%8A%E6%9D%82%E8%B0%88/"}]},{"title":"博客的搭建记录.","slug":"[main]hexo/博客常用的记录","date":"2021-11-22T06:35:49.000Z","updated":"2022-08-08T13:17:03.641Z","comments":true,"path":"posts/1501026038/","link":"","permalink":"https://kaguranotamashii.github.io/posts/1501026038/","excerpt":"","text":"1.hexo的一些指令本地预览 hexo s 配置文件和主题 hexo g清空 hexo g 生成的内容hexo clean 标题名称 hexo new post 标题名称 123categories: -cover: 图标 2.Typora和Hd的使用方法typora的快捷键 1.段落 标题：Ctrl+1/2/3/4/5 段落：Ctrl+0 增大标题级别：Ctrl+= 减少标题级别：Ctrl+- 表格：Ctrl+T 代码块：Ctrl+Shift+K 公式块：Ctrl+Shift+M 引用：Ctrl+Shift+Q 有序列表：Ctrl+Shift+[ 无序列表：Ctrl+Shift+] 增加缩进：Ctrl+] 减少缩进：Ctrl+[ 2.格式 加粗：Ctrl+B 斜体：Ctrl+I 下划线：Ctrl+U 代码：Ctrl+Shift+` 删除线：Alt+Shift+5 超链接：Ctrl+K 图像：Ctrl+Shift+I 清除样式：Ctrl+ 3.部分常用的标题：Ctrl+1、2、3…对应一、二、三…级标题（光标定位到需要设置为标题的行，按快捷键）加粗：Ctrl+B（选中要加粗的文本，按快捷键）斜体：Ctrl+I（选中要设置斜体的文本，按快捷键）下划线：Ctrl+U（选中要加下划线的文本，按快捷键）删除线：Alt+Shift+5（选中要加删除线的文本，按快捷键）代码片段：Ctrl+Shift+`（选中要设置为代码片段的文本，按快捷键）代码块：Ctrl+Shift+K（任意位置按快捷键，选择编程语言然后在代码块中输入代码）切换到下一行：Ctrl+Enter（任意位置按快捷键，在代码块中可以跳出代码块另起一行）链接：Ctrl+K（先复制链接，然后选中要加链接的文本，按快捷键。Ctrl+左键点击文本可跳转到对应链接）取消格式：再次按相同的快捷键即可有序列表：数字+点+空格任务列表：加号或减号+空格切换到列表下一行：Space+Enter嵌套列表：按Tab键退出列表：按 Shift+Tab插入表格：Ctrl+T引用：输入&gt;后面加空格，或者Ctrl+Shift+Q 3.yilia的美化和修改（已经换蝴蝶主题）标签 123456tags: - 小工具 - hexo - yilia---或者tags: [xx,xxxx] 截断点12# 在博客md文件中，设置截断位置&lt;!--more--&gt; 图标1`theme/yilia/source`目录下添加`favicon.ico`图片 文章点击量1234567891011121314themes/yilia/layout/_partial/article.ejs中&lt;%- partial(&#x27;post/title&#x27;, &#123;class_name: &#x27;article-title&#x27;&#125;) %&gt;后面加入&lt;!--显示阅读次数--&gt;&lt;% if (!index &amp;&amp; post.comments)&#123; %&gt; &lt;br/&gt; &lt;a class=&quot;cloud-tie-join-count&quot; href=&quot;javascript:void(0);&quot; style=&quot;color:gray;font-size:14px;&quot;&gt; &lt;span class=&quot;icon-sort&quot;&gt;&lt;/span&gt; &lt;span id=&quot;busuanzi_container_page_pv&quot; style=&quot;color:#ef7522;font-size:14px;&quot;&gt; 阅读数: &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次 &amp;nbsp;&amp;nbsp; &lt;/span&gt; &lt;/a&gt;&lt;% &#125; %&gt;&lt;!--显示阅读次数完毕--&gt; 插入图片1npm install hexo-asset-image –save 打开blog的_cofig.yml修改 1post_asset_folder: true 新建文章的时候自动生成文章名字.filenname，将图片放入 总文章数123456789将*themes\\yilia\\layout_partial*left-col.ejs文件的&lt;nav class=&quot;header-menu&quot;&gt; &lt;ul&gt; &lt;% for (var i in theme.menu)&#123; %&gt; &lt;li&gt;&lt;a href=&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;&gt;&lt;%= i %&gt;&lt;/a&gt;&lt;/li&gt; &lt;%&#125;%&gt; &lt;/ul&gt;&lt;/nav&gt; 不蒜子12在 themes\\yilia\\layout_partial\\after-footer.ejs最后添加&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; 1234567891011修改 themes\\yilia\\layout\\_partial\\footer.ejs，包括访客数和站点访问总量# PV方式，单个用户连续点击 n 篇，记录 n 次记录值&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt; 本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;# UV方式，单个用户连续点击 n 篇，记录 1 次记录值&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次&lt;/span&gt;单篇# 使用 pv 记录方式，每访问一次，记录一次&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt; 本文总阅读量&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt; 4蝴蝶主题12345678npm install hexo-generator-index-pin-top --save安装置顶md文件内部的配置top: 1000//数字越大置顶在前面//这个也是zsticky:comments: true 添加上这个，如果这篇文章不需要评论改为false，默认开启 Butterfly主题美化日记 | Akilarの糖果屋 Hexo+Butterfly主题美化 | 唐先森の博客 (tzy1997.com) Hexo 博客之 butterfly 主题优雅魔改系列 | 小康博客 (antmoe.com) Butterfly主题外挂标签（个人常用） | Hassan’s Blog (hassanwong.top) Search | Font Awesome 图标网站11 5蝴蝶主题的美化2022/6/17隐藏文章 12345npm install hexo-generator-indexed---title: examplehide: true--- 7月7日更新更新背景的流星雨 Hexo博客 | 如何让你的博客拥有星空背景和流星特效 | Justlovesmile’s BLOG 修改非夜间模式启用将js写成两份 一份文件关键词dark， 一份都是light 目前来看我的个人博客美化的已经差不多了吧 7月11日更新夜间模式切换动画 实现白天夜晚切换动画 7/17修改了右键小部件，写了点好玩的小彩蛋hhhh 在原有作者的前提下修改了 菜单切换夜间模式效果 夜间模式颜色首页文章卡片修改 8.6D:\\kagura blog\\kagura_blog\\themes\\butterfly\\source\\css_layout\\sidebar.styl 12right: -($sidebar-width)-5px//这边我不知道弄什么操作了 -5px 我的Blog美化日记——Hexo+Butterfly | Guo Le’s Blog","categories":[{"name":"个人博客","slug":"个人博客","permalink":"https://kaguranotamashii.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"name":"hexo","slug":"个人博客/hexo","permalink":"https://kaguranotamashii.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo/"}],"tags":[{"name":"搭建博客","slug":"搭建博客","permalink":"https://kaguranotamashii.github.io/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"name":"指令","slug":"指令","permalink":"https://kaguranotamashii.github.io/tags/%E6%8C%87%E4%BB%A4/"},{"name":"记录","slug":"记录","permalink":"https://kaguranotamashii.github.io/tags/%E8%AE%B0%E5%BD%95/"}]},{"title":"最初のBlog「神楽の魂という意味は？」","slug":"神楽の魂という意味は？","date":"2021-11-22T04:57:13.000Z","updated":"2022-08-07T02:50:48.812Z","comments":true,"path":"posts/999999/","link":"","permalink":"https://kaguranotamashii.github.io/posts/999999/","excerpt":"关于我的网名","text":"关于我的网名 1.ゲームから初中的时候玩阴阳师，自动推荐的名字就是神乐之魂「かぐらのたましい」，也不知道怎么的就喜欢上了这个网名。 2.激しい后来，高二的时候买了日语网课(因为我是小语种考生),一开始我在群名批注就改为神乐之魂。 那时候我还以为乐这个字读为le，后来小王子老师叫我网名的时候就是读yue，当时我也经常读错。不过随着日语水平的提高我叫它为かぐら。 后来和群友混熟了，他们都叫我神乐老弟（现在退群了），我也习惯了神乐之魂这个网名。 我的GitHub就是以神乐之魂的假名为基础命名的，但是太过于长了（kaguranotamashii），待考虑改为kagura。 3.新しいミライから我的博客主要打算写我的对计算机的学习，以及我的一些思考。 ボクノミライハマダ始まったバカリ！(我的未来才刚开始！)","categories":[{"name":"闲聊杂谈","slug":"闲聊杂谈","permalink":"https://kaguranotamashii.github.io/categories/%E9%97%B2%E8%81%8A%E6%9D%82%E8%B0%88/"}],"tags":[]},{"title":"书中的那些好词好句","slug":"[mian]Book/书中的那些好词好句","date":"2000-07-20T14:18:22.000Z","updated":"2022-08-07T02:46:38.340Z","comments":true,"path":"posts/3088807087/","link":"","permalink":"https://kaguranotamashii.github.io/posts/3088807087/","excerpt":"","text":"局外人隽永词语: 隽永 拼音: juàn yǒng 注音: ㄐㄨㄢˋ ㄩㄥˇ 近义词: 有味 反义词: 乏味 活泼 生动 枯燥 词语解释: [meaningful] [言辞、诗文或其他事物]意味深长,引人入胜通论战国时说士权变,亦自序其说,凡八十一首,号曰《隽永》。——《汉书·蒯通传》语颇隽永,耐人寻味 摘自: https://cidian.d777.com/juanyong3 无可置疑词语: 无可置疑 拼音: wú kě zhì yí 注音: ㄨˊ ㄎㄜˇ ㄓㄧˋ ㄧˊ 近义词: 无可争辩 词语解释: [indubitable;unquestionable] 大可不必持怀疑态度。形容证据确凿,事情明摆着无可置疑的证词 引证解释: 确凿不容怀疑。 范文澜 蔡美彪 等《中国通史》第一编第五章第二节：“ 战国 时某些地区已能制钢，无可置疑。” 相关词语: 无 可 置 疑 相关成语: 无 可 置 疑 摘自: https://cidian.d777.com/wukezhiyi “广袤无限，汉语成语，拼音是guǎng mào wú xiàn，意思是形容一望无际，没有边界。” “映入眼帘，汉语成语，拼音是yìng rù yǎn lián，意思是某物进入视线之内。” 烹饪 [拼音] [pēng rèn] [释义] （动）做饭菜。 踉跄 [拼音] [liàng qiàng] [释义] 形容走路不稳，四处跌撞的样子。","categories":[],"tags":[]}],"categories":[{"name":"闲聊杂谈","slug":"闲聊杂谈","permalink":"https://kaguranotamashii.github.io/categories/%E9%97%B2%E8%81%8A%E6%9D%82%E8%B0%88/"},{"name":"Leetcode","slug":"Leetcode","permalink":"https://kaguranotamashii.github.io/categories/Leetcode/"},{"name":"基础知识","slug":"Leetcode/基础知识","permalink":"https://kaguranotamashii.github.io/categories/Leetcode/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"name":"编程","slug":"编程","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"前端","slug":"编程/前端","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"},{"name":"vue框架","slug":"编程/前端/vue框架","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/vue%E6%A1%86%E6%9E%B6/"},{"name":"git","slug":"git","permalink":"https://kaguranotamashii.github.io/categories/git/"},{"name":"java","slug":"编程/java","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/java/"},{"name":"jquery","slug":"编程/前端/jquery","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/jquery/"},{"name":"数据结构与算法","slug":"数据结构与算法","permalink":"https://kaguranotamashii.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"},{"name":"cpp","slug":"编程/cpp","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/cpp/"},{"name":"Python","slug":"编程/Python","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/Python/"},{"name":"CSS","slug":"编程/前端/CSS","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/CSS/"},{"name":"javascript","slug":"编程/前端/javascript","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/javascript/"},{"name":"个人博客","slug":"个人博客","permalink":"https://kaguranotamashii.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"name":"问题","slug":"个人博客/问题","permalink":"https://kaguranotamashii.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E9%97%AE%E9%A2%98/"},{"name":"HTML","slug":"编程/前端/HTML","permalink":"https://kaguranotamashii.github.io/categories/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/HTML/"},{"name":"hexo","slug":"个人博客/hexo","permalink":"https://kaguranotamashii.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo/"}],"tags":[{"name":"年度总结","slug":"年度总结","permalink":"https://kaguranotamashii.github.io/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"},{"name":"闲聊杂谈","slug":"闲聊杂谈","permalink":"https://kaguranotamashii.github.io/tags/%E9%97%B2%E8%81%8A%E6%9D%82%E8%B0%88/"},{"name":"数据结构与算法","slug":"数据结构与算法","permalink":"https://kaguranotamashii.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"},{"name":"vue框架","slug":"vue框架","permalink":"https://kaguranotamashii.github.io/tags/vue%E6%A1%86%E6%9E%B6/"},{"name":"踩过的坑","slug":"踩过的坑","permalink":"https://kaguranotamashii.github.io/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"},{"name":"git","slug":"git","permalink":"https://kaguranotamashii.github.io/tags/git/"},{"name":"java","slug":"java","permalink":"https://kaguranotamashii.github.io/tags/java/"},{"name":"黑苹果","slug":"黑苹果","permalink":"https://kaguranotamashii.github.io/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"},{"name":"jquery","slug":"jquery","permalink":"https://kaguranotamashii.github.io/tags/jquery/"},{"name":"swift","slug":"swift","permalink":"https://kaguranotamashii.github.io/tags/swift/"},{"name":"ios","slug":"ios","permalink":"https://kaguranotamashii.github.io/tags/ios/"},{"name":"数据结构","slug":"数据结构","permalink":"https://kaguranotamashii.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"cpp","slug":"cpp","permalink":"https://kaguranotamashii.github.io/tags/cpp/"},{"name":"考试","slug":"考试","permalink":"https://kaguranotamashii.github.io/tags/%E8%80%83%E8%AF%95/"},{"name":"C语言","slug":"C语言","permalink":"https://kaguranotamashii.github.io/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"Python","slug":"Python","permalink":"https://kaguranotamashii.github.io/tags/Python/"},{"name":"前端","slug":"前端","permalink":"https://kaguranotamashii.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"CSS","permalink":"https://kaguranotamashii.github.io/tags/CSS/"},{"name":"javascript","slug":"javascript","permalink":"https://kaguranotamashii.github.io/tags/javascript/"},{"name":"学习","slug":"学习","permalink":"https://kaguranotamashii.github.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"html","slug":"html","permalink":"https://kaguranotamashii.github.io/tags/html/"},{"name":"css","slug":"css","permalink":"https://kaguranotamashii.github.io/tags/css/"},{"name":"搭建博客","slug":"搭建博客","permalink":"https://kaguranotamashii.github.io/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"name":"指令","slug":"指令","permalink":"https://kaguranotamashii.github.io/tags/%E6%8C%87%E4%BB%A4/"},{"name":"记录","slug":"记录","permalink":"https://kaguranotamashii.github.io/tags/%E8%AE%B0%E5%BD%95/"}]}